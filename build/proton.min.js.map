{"version":3,"file":"proton.min.js","sources":["../src/utils/WebGLUtil.js","../src/utils/DomUtil.js","../src/utils/ImgUtil.js","../src/utils/Util.js","../src/utils/Puid.js","../src/core/Pool.js","../src/debug/Stats.js","../src/events/EventDispatcher.js","../src/math/MathUtil.js","../src/math/Integration.js","../src/core/Proton.js","../src/utils/Rgb.js","../src/utils/PropUtil.js","../src/math/ease.js","../src/math/Vector2D.js","../src/core/Particle.js","../src/utils/ColorUtil.js","../src/math/Polar2D.js","../src/math/Mat3.js","../src/math/Span.js","../src/math/ArraySpan.js","../src/math/Rectangle.js","../src/initialize/Rate.js","../src/initialize/Initialize.js","../src/initialize/Life.js","../src/zone/Zone.js","../src/zone/PointZone.js","../src/initialize/Position.js","../src/initialize/Velocity.js","../src/initialize/Mass.js","../src/initialize/Radius.js","../src/initialize/Body.js","../src/behaviour/Behaviour.js","../src/behaviour/Force.js","../src/behaviour/Attraction.js","../src/behaviour/RandomDrift.js","../src/behaviour/Gravity.js","../src/behaviour/Collision.js","../src/behaviour/CrossZone.js","../src/behaviour/Alpha.js","../src/behaviour/Scale.js","../src/behaviour/Rotate.js","../src/behaviour/Color.js","../src/behaviour/Cyclone.js","../src/behaviour/Repulsion.js","../src/behaviour/GravityWell.js","../src/initialize/InitializeUtil.js","../src/emitter/Emitter.js","../src/render/PixiRenderer.js","../src/emitter/BehaviourEmitter.js","../src/emitter/FollowEmitter.js","../src/utils/Types.js","../src/render/BaseRenderer.js","../src/render/CanvasRenderer.js","../src/render/DomRenderer.js","../src/render/EaselRenderer.js","../src/render/PixelRenderer.js","../src/utils/MStack.js","../src/render/WebGLRenderer.js","../src/render/CustomRenderer.js","../src/zone/LineZone.js","../src/zone/CircleZone.js","../src/zone/RectZone.js","../src/zone/ImageZone.js","../src/debug/Debug.js","../src/index.js"],"sourcesContent":["export default {\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method ipot\n   *\n   * @todo add description\n   * @todo add length description\n   *\n   * @param {Number} length\n   *\n   * @return {Boolean}\n   */\n  ipot(length) {\n    return (length & (length - 1)) === 0;\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method nhpot\n   *\n   * @todo add description\n   * @todo add length description\n   *\n   * @param {Number} length\n   *\n   * @return {Number}\n   */\n  nhpot(length) {\n    --length;\n    for (let i = 1; i < 32; i <<= 1) {\n      length = length | (length >> i);\n    }\n\n    return length + 1;\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeTranslation\n   *\n   * @todo add description\n   * @todo add tx, ty description\n   * @todo add return description\n   *\n   * @param {Number} tx either 0 or 1\n   * @param {Number} ty either 0 or 1\n   *\n   * @return {Object}\n   */\n  makeTranslation(tx, ty) {\n    return [1, 0, 0, 0, 1, 0, tx, ty, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeRotation\n   *\n   * @todo add description\n   * @todo add return description\n   *\n   * @param {Number} angleInRadians\n   *\n   * @return {Object}\n   */\n  makeRotation(angleInRadians) {\n    let c = Math.cos(angleInRadians);\n    let s = Math.sin(angleInRadians);\n\n    return [c, -s, 0, s, c, 0, 0, 0, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeScale\n   *\n   * @todo add description\n   * @todo add tx, ty description\n   * @todo add return description\n   *\n   * @param {Number} sx either 0 or 1\n   * @param {Number} sy either 0 or 1\n   *\n   * @return {Object}\n   */\n  makeScale(sx, sy) {\n    return [sx, 0, 0, 0, sy, 0, 0, 0, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method matrixMultiply\n   *\n   * @todo add description\n   * @todo add a, b description\n   * @todo add return description\n   *\n   * @param {Object} a\n   * @param {Object} b\n   *\n   * @return {Object}\n   */\n  matrixMultiply(a, b) {\n    let a00 = a[0 * 3 + 0];\n    let a01 = a[0 * 3 + 1];\n    let a02 = a[0 * 3 + 2];\n    let a10 = a[1 * 3 + 0];\n    let a11 = a[1 * 3 + 1];\n    let a12 = a[1 * 3 + 2];\n    let a20 = a[2 * 3 + 0];\n    let a21 = a[2 * 3 + 1];\n    let a22 = a[2 * 3 + 2];\n    let b00 = b[0 * 3 + 0];\n    let b01 = b[0 * 3 + 1];\n    let b02 = b[0 * 3 + 2];\n    let b10 = b[1 * 3 + 0];\n    let b11 = b[1 * 3 + 1];\n    let b12 = b[1 * 3 + 2];\n    let b20 = b[2 * 3 + 0];\n    let b21 = b[2 * 3 + 1];\n    let b22 = b[2 * 3 + 2];\n\n    return [\n      a00 * b00 + a01 * b10 + a02 * b20,\n      a00 * b01 + a01 * b11 + a02 * b21,\n      a00 * b02 + a01 * b12 + a02 * b22,\n      a10 * b00 + a11 * b10 + a12 * b20,\n      a10 * b01 + a11 * b11 + a12 * b21,\n      a10 * b02 + a11 * b12 + a12 * b22,\n      a20 * b00 + a21 * b10 + a22 * b20,\n      a20 * b01 + a21 * b11 + a22 * b21,\n      a20 * b02 + a21 * b12 + a22 * b22\n    ];\n  }\n};\n","export default {\n  /**\n   * Creates and returns a new canvas. The opacity is by default set to 0\n   *\n   * @memberof Proton#Proton.DomUtil\n   * @method createCanvas\n   *\n   * @param {String} $id the canvas' id\n   * @param {Number} $width the canvas' width\n   * @param {Number} $height the canvas' height\n   * @param {String} [$position=absolute] the canvas' position, default is 'absolute'\n   *\n   * @return {Object}\n   */\n  createCanvas(id, width, height, position = \"absolute\") {\n    const dom = document.createElement(\"canvas\");\n\n    dom.id = id;\n    dom.width = width;\n    dom.height = height;\n    dom.style.opacity = 0;\n    dom.style.position = position;\n    this.transform(dom, -500, -500, 0, 0);\n\n    return dom;\n  },\n\n  createDiv(id, width, height) {\n    const dom = document.createElement(\"div\");\n\n    dom.id = id;\n    dom.style.position = \"absolute\";\n    this.resize(dom, width, height);\n\n    return dom;\n  },\n\n  resize(dom, width, height) {\n    dom.style.width = width + \"px\";\n    dom.style.height = height + \"px\";\n    dom.style.marginLeft = -width / 2 + \"px\";\n    dom.style.marginTop = -height / 2 + \"px\";\n  },\n\n  /**\n   * Adds a transform: translate(), scale(), rotate() to a given div dom for all browsers\n   *\n   * @memberof Proton#Proton.DomUtil\n   * @method transform\n   *\n   * @param {HTMLDivElement} div\n   * @param {Number} $x\n   * @param {Number} $y\n   * @param {Number} $scale\n   * @param {Number} $rotate\n   */\n  transform(div, x, y, scale, rotate) {\n    div.style.willChange = \"transform\";\n    const transform = `translate(${x}px, ${y}px) scale(${scale}) rotate(${rotate}deg)`;\n    this.css3(div, \"transform\", transform);\n  },\n\n  transform3d(div, x, y, scale, rotate) {\n    div.style.willChange = \"transform\";\n    const transform = `translate3d(${x}px, ${y}px, 0) scale(${scale}) rotate(${rotate}deg)`;\n    this.css3(div, \"backfaceVisibility\", \"hidden\");\n    this.css3(div, \"transform\", transform);\n  },\n\n  css3(div, key, val) {\n    const bkey = key.charAt(0).toUpperCase() + key.substr(1);\n\n    div.style[`Webkit${bkey}`] = val;\n    div.style[`Moz${bkey}`] = val;\n    div.style[`O${bkey}`] = val;\n    div.style[`ms${bkey}`] = val;\n    div.style[`${key}`] = val;\n  }\n};\n","import WebGLUtil from \"./WebGLUtil\";\nimport DomUtil from \"./DomUtil\";\n\nconst imgsCache = {};\nconst canvasCache = {};\nlet canvasId = 0;\n\nexport default {\n  /**\n   * This will get the image data. It could be necessary to create a Proton.Zone.\n   *\n   * @memberof Proton#Proton.Util\n   * @method getImageData\n   *\n   * @param {HTMLCanvasElement}   context any canvas, must be a 2dContext 'canvas.getContext('2d')'\n   * @param {Object}              image   could be any dom image, e.g. document.getElementById('thisIsAnImgTag');\n   * @param {Proton.Rectangle}    rect\n   */\n  getImageData(context, image, rect) {\n    context.drawImage(image, rect.x, rect.y);\n    const imagedata = context.getImageData(rect.x, rect.y, rect.width, rect.height);\n    context.clearRect(rect.x, rect.y, rect.width, rect.height);\n\n    return imagedata;\n  },\n\n  /**\n   * @memberof Proton#Proton.Util\n   * @method getImgFromCache\n   *\n   * @todo add description\n   * @todo describe func\n   *\n   * @param {Mixed}               img\n   * @param {Proton.Particle}     particle\n   * @param {Boolean}             drawCanvas  set to true if a canvas should be saved into particle.data.canvas\n   * @param {Boolean}             func\n   */\n  getImgFromCache(img, callback, param) {\n    const src = typeof img === \"string\" ? img : img.src;\n\n    if (imgsCache[src]) {\n      callback(imgsCache[src], param);\n    } else {\n      const image = new Image();\n      image.onload = e => {\n        imgsCache[src] = e.target;\n        callback(imgsCache[src], param);\n      };\n\n      image.src = src;\n    }\n  },\n\n  getCanvasFromCache(img, callback, param) {\n    const src = img.src;\n\n    if (!canvasCache[src]) {\n      const width = WebGLUtil.nhpot(img.width);\n      const height = WebGLUtil.nhpot(img.height);\n\n      const canvas = DomUtil.createCanvas(`proton_canvas_cache_${++canvasId}`, width, height);\n      const context = canvas.getContext(\"2d\");\n      context.drawImage(img, 0, 0, img.width, img.height);\n\n      canvasCache[src] = canvas;\n    }\n\n    callback && callback(canvasCache[src], param);\n\n    return canvasCache[src];\n  }\n};\n","import ImgUtil from \"./ImgUtil\";\n\nexport default {\n  /**\n   * Returns the default if the value is null or undefined\n   *\n   * @memberof Proton#Proton.Util\n   * @method initValue\n   *\n   * @param {Mixed} value a specific value, could be everything but null or undefined\n   * @param {Mixed} defaults the default if the value is null or undefined\n   */\n  initValue(value, defaults) {\n    value = value !== null && value !== undefined ? value : defaults;\n    return value;\n  },\n\n  /**\n   * Checks if the value is a valid array\n   *\n   * @memberof Proton#Proton.Util\n   * @method isArray\n   *\n   * @param {Array} value Any array\n   *\n   * @returns {Boolean}\n   */\n  isArray(value) {\n    return Object.prototype.toString.call(value) === \"[object Array]\";\n  },\n\n  /**\n   * Destroyes the given array\n   *\n   * @memberof Proton#Proton.Util\n   * @method emptyArray\n   *\n   * @param {Array} array Any array\n   */\n  emptyArray(arr) {\n    if (arr) arr.length = 0;\n  },\n\n  toArray(arr) {\n    return this.isArray(arr) ? arr : [arr];\n  },\n\n  getRandFromArray(arr) {\n    if (!arr) return null;\n    return arr[Math.floor(arr.length * Math.random())];\n  },\n\n  /**\n   * Destroyes the given object\n   *\n   * @memberof Proton#Proton.Util\n   * @method emptyObject\n   *\n   * @param {Object} obj Any object\n   */\n  emptyObject(obj, ignore = null) {\n    for (let key in obj) {\n      if (ignore && ignore.indexOf(key) > -1) continue;\n      delete obj[key];\n    }\n  },\n\n  /**\n   * Makes an instance of a class and binds the given array\n   *\n   * @memberof Proton#Proton.Util\n   * @method classApply\n   *\n   * @param {Function} constructor A class to make an instance from\n   * @param {Array} [args] Any array to bind it to the constructor\n   *\n   * @return {Object} The instance of constructor, optionally bind with args\n   */\n  classApply(constructor, args = null) {\n    if (!args) {\n      return new constructor();\n    } else {\n      const FactoryFunc = constructor.bind.apply(constructor, [null].concat(args));\n      return new FactoryFunc();\n    }\n  },\n\n  /**\n   * This will get the image data. It could be necessary to create a Proton.Zone.\n   *\n   * @memberof Proton#Proton.Util\n   * @method getImageData\n   *\n   * @param {HTMLCanvasElement}   context any canvas, must be a 2dContext 'canvas.getContext('2d')'\n   * @param {Object}              image   could be any dom image, e.g. document.getElementById('thisIsAnImgTag');\n   * @param {Proton.Rectangle}    rect\n   */\n  getImageData(context, image, rect) {\n    return ImgUtil.getImageData(context, image, rect);\n  },\n\n  destroyAll(arr, param = null) {\n    let i = arr.length;\n\n    while (i--) {\n      try {\n        arr[i].destroy(param);\n      } catch (e) {}\n\n      delete arr[i];\n    }\n\n    arr.length = 0;\n  },\n\n  assign(target, source) {\n    if (typeof Object.assign !== \"function\") {\n      for (let key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n\n      return target;\n    } else {\n      return Object.assign(target, source);\n    }\n  }\n};\n","const idsMap = {};\n\nconst Puid = {\n  _index: 0,\n  _cache: {},\n\n  id(type) {\n    if (idsMap[type] === undefined || idsMap[type] === null) idsMap[type] = 0;\n    return `${type}_${idsMap[type]++}`;\n  },\n\n  getId(target) {\n    let uid = this.getIdFromCache(target);\n    if (uid) return uid;\n\n    uid = `PUID_${this._index++}`;\n    this._cache[uid] = target;\n    return uid;\n  },\n\n  getIdFromCache(target) {\n    let obj, id;\n\n    for (id in this._cache) {\n      obj = this._cache[id];\n\n      if (obj === target) return id;\n      if (this.isBody(obj, target) && obj.src === target.src) return id;\n    }\n\n    return null;\n  },\n\n  isBody(obj, target) {\n    return typeof obj === \"object\" && typeof target === \"object\" && obj.isInner && target.isInner;\n  },\n\n  getTarget(uid) {\n    return this._cache[uid];\n  }\n};\n\nexport default Puid;\n","/**\n * Pool is the cache pool of the proton engine, it is very important.\n *\n * get(target, params, uid)\n *  Class\n *    uid = Puid.getId -> Puid save target cache\n *    target.__puid = uid\n *\n *  body\n *    uid = Puid.getId -> Puid save target cache\n *\n *\n * expire(target)\n *  cache[target.__puid] push target\n *\n */\nimport Util from \"../utils/Util\";\nimport Puid from \"../utils/Puid\";\n\nexport default class Pool {\n  /**\n   * @memberof! Proton#\n   * @constructor\n   * @alias Proton.Pool\n   *\n   * @todo add description\n   * @todo add description of properties\n   *\n   * @property {Number} total\n   * @property {Object} cache\n   */\n  constructor(num) {\n    this.total = 0;\n    this.cache = {};\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method get\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object|Function} target\n   * @param {Object} [params] just add if `target` is a function\n   *\n   * @return {Object}\n   */\n  get(target, params, uid) {\n    let p;\n    uid = uid || target.__puid || Puid.getId(target);\n\n    if (this.cache[uid] && this.cache[uid].length > 0) {\n      p = this.cache[uid].pop();\n    } else {\n      p = this.createOrClone(target, params);\n    }\n\n    p.__puid = target.__puid || uid;\n    return p;\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method set\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object} target\n   *\n   * @return {Object}\n   */\n  expire(target) {\n    return this.getCache(target.__puid).push(target);\n  }\n\n  /**\n   * Creates a new class instance\n   *\n   * @todo add more documentation\n   *\n   * @method create\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object|Function} target any Object or Function\n   * @param {Object} [params] just add if `target` is a function\n   *\n   * @return {Object}\n   */\n  createOrClone(target, params) {\n    this.total++;\n\n    if (this.create) {\n      return this.create(target, params);\n    } else if (typeof target === \"function\") {\n      return Util.classApply(target, params);\n    } else {\n      return target.clone();\n    }\n  }\n\n  /**\n   * @todo add description - what is in the cache?\n   *\n   * @method getCount\n   * @memberof Proton#Proton.Pool\n   *\n   * @return {Number}\n   */\n  getCount() {\n    let count = 0;\n    for (let id in this.cache) count += this.cache[id].length;\n    return count++;\n  }\n\n  /**\n   * Destroyes all items from Pool.cache\n   *\n   * @method destroy\n   * @memberof Proton#Proton.Pool\n   */\n  destroy() {\n    for (let id in this.cache) {\n      this.cache[id].length = 0;\n      delete this.cache[id];\n    }\n  }\n\n  /**\n   * Returns Pool.cache\n   *\n   * @method getCache\n   * @memberof Proton#Proton.Pool\n   * @private\n   *\n   * @param {Number} uid the unique id\n   *\n   * @return {Object}\n   */\n  getCache(uid = \"default\") {\n    if (!this.cache[uid]) this.cache[uid] = [];\n    return this.cache[uid];\n  }\n}\n","export default class Stats {\n  constructor(proton) {\n    this.proton = proton;\n    this.container = null;\n    this.type = 1;\n\n    this.emitterIndex = 0;\n    this.rendererIndex = 0;\n  }\n\n  update(style, body) {\n    this.add(style, body);\n\n    const emitter = this.getEmitter();\n    const renderer = this.getRenderer();\n    let str = \"\";\n\n    switch (this.type) {\n      case 2:\n        str += \"emitter:\" + this.proton.emitters.length + \"<br>\";\n        if (emitter) str += \"em speed:\" + emitter.emitSpeed + \"<br>\";\n        if (emitter) str += \"pos:\" + this.getEmitterPos(emitter);\n        break;\n\n      case 3:\n        if (emitter) str += \"initializes:\" + emitter.initializes.length + \"<br>\";\n        if (emitter)\n          str += '<span style=\"display:inline-block;\">' + this.concatArr(emitter.initializes) + \"</span><br>\";\n        if (emitter) str += \"behaviours:\" + emitter.behaviours.length + \"<br>\";\n        if (emitter) str += '<span style=\"display:inline-block;\">' + this.concatArr(emitter.behaviours) + \"</span><br>\";\n        break;\n\n      case 4:\n        if (renderer) str += renderer.name + \"<br>\";\n        if (renderer) str += \"body:\" + this.getCreatedNumber(renderer) + \"<br>\";\n        break;\n\n      default:\n        str += \"particles:\" + this.proton.getCount() + \"<br>\";\n        str += \"pool:\" + this.proton.pool.getCount() + \"<br>\";\n        str += \"total:\" + this.proton.pool.total;\n    }\n\n    this.container.innerHTML = str;\n  }\n\n  add(style, body) {\n    if (!this.container) {\n      this.type = 1;\n\n      this.container = document.createElement(\"div\");\n      this.container.style.cssText = [\n        \"position:absolute;bottom:0px;left:0;cursor:pointer;\",\n        \"opacity:0.9;z-index:10000;padding:10px;font-size:12px;font-family:Helvetica,Arial,sans-serif;\",\n        \"width:120px;height:50px;background-color:#002;color:#0ff;\"\n      ].join(\"\");\n\n      this.container.addEventListener(\n        \"click\",\n        e => {\n          this.type++;\n          if (this.type > 4) this.type = 1;\n        },\n        false\n      );\n\n      let bg, color;\n      switch (style) {\n        case 2:\n          bg = \"#201\";\n          color = \"#f08\";\n          break;\n\n        case 3:\n          bg = \"#020\";\n          color = \"#0f0\";\n          break;\n\n        default:\n          bg = \"#002\";\n          color = \"#0ff\";\n      }\n\n      this.container.style[\"background-color\"] = bg;\n      this.container.style[\"color\"] = color;\n    }\n\n    if (!this.container.parentNode) {\n      body = body || this.body || document.body;\n      body.appendChild(this.container);\n    }\n  }\n\n  getEmitter() {\n    return this.proton.emitters[this.emitterIndex];\n  }\n\n  getRenderer() {\n    return this.proton.renderers[this.rendererIndex];\n  }\n\n  concatArr(arr) {\n    let result = \"\";\n    if (!arr || !arr.length) return result;\n\n    for (let i = 0; i < arr.length; i++) {\n      result += (arr[i].name || \"\").substr(0, 1) + \".\";\n    }\n\n    return result;\n  }\n\n  getCreatedNumber(renderer) {\n    return renderer.pool.total || (renderer.cpool && renderer.cpool.total) || 0;\n  }\n\n  getEmitterPos(e) {\n    return Math.round(e.p.x) + \",\" + Math.round(e.p.y);\n  }\n\n  destroy() {\n    if (this.container && this.container.parentNode) {\n      const body = this.body || document.body;\n      body.removeChild(this.container);\n    }\n\n    this.proton = null;\n    this.container = null;\n  }\n}\n","/*\n * EventDispatcher\n * This code reference since http://createjs.com/.\n *\n **/\n\nexport default class EventDispatcher {\n  constructor() {\n    this._listeners = null;\n  }\n\n  static bind(target) {\n    target.prototype.dispatchEvent = EventDispatcher.prototype.dispatchEvent;\n    target.prototype.hasEventListener = EventDispatcher.prototype.hasEventListener;\n    target.prototype.addEventListener = EventDispatcher.prototype.addEventListener;\n    target.prototype.removeEventListener = EventDispatcher.prototype.removeEventListener;\n    target.prototype.removeAllEventListeners = EventDispatcher.prototype.removeAllEventListeners;\n  }\n\n  addEventListener(type, listener) {\n    if (!this._listeners) {\n      this._listeners = {};\n    } else {\n      this.removeEventListener(type, listener);\n    }\n\n    if (!this._listeners[type]) this._listeners[type] = [];\n    this._listeners[type].push(listener);\n\n    return listener;\n  }\n\n  removeEventListener(type, listener) {\n    if (!this._listeners) return;\n    if (!this._listeners[type]) return;\n\n    const arr = this._listeners[type];\n    const length = arr.length;\n\n    for (let i = 0; i < length; i++) {\n      if (arr[i] === listener) {\n        if (length === 1) {\n          delete this._listeners[type];\n        }\n\n        // allows for faster checks.\n        else {\n          arr.splice(i, 1);\n        }\n\n        break;\n      }\n    }\n  }\n\n  removeAllEventListeners(type) {\n    if (!type) this._listeners = null;\n    else if (this._listeners) delete this._listeners[type];\n  }\n\n  dispatchEvent(type, args) {\n    let result = false;\n    const listeners = this._listeners;\n\n    if (type && listeners) {\n      let arr = listeners[type];\n      if (!arr) return result;\n\n      // arr = arr.slice();\n      // to avoid issues with items being removed or added during the dispatch\n\n      let handler;\n      let i = arr.length;\n      while (i--) {\n        handler = arr[i];\n        result = result || handler(args);\n      }\n    }\n\n    return !!result;\n  }\n\n  hasEventListener(type) {\n    const listeners = this._listeners;\n    return !!(listeners && listeners[type]);\n  }\n}\n","const PI = 3.1415926;\nconst INFINITY = Infinity;\n\nconst MathUtil = {\n  PI: PI,\n  PIx2: PI * 2,\n  PI_2: PI / 2,\n  PI_180: PI / 180,\n  N180_PI: 180 / PI,\n  Infinity: -999,\n\n  isInfinity(num) {\n    return num === this.Infinity || num === INFINITY;\n  },\n\n  randomAToB(a, b, isInt = false) {\n    if (!isInt) return a + Math.random() * (b - a);\n    else return ((Math.random() * (b - a)) >> 0) + a;\n  },\n\n  randomFloating(center, f, isInt) {\n    return this.randomAToB(center - f, center + f, isInt);\n  },\n\n  randomColor() {\n    return \"#\" + (\"00000\" + ((Math.random() * 0x1000000) << 0).toString(16)).slice(-6);\n  },\n\n  randomZone(display) {},\n\n  floor(num, k = 4) {\n    const digits = Math.pow(10, k);\n    return Math.floor(num * digits) / digits;\n  },\n\n  degreeTransform(a) {\n    return (a * PI) / 180;\n  },\n\n  toColor16(num) {\n    return `#${num.toString(16)}`;\n  }\n};\n\nexport default MathUtil;\n","export default class Integration {\n  constructor(type) {\n    this.type = type;\n  }\n\n  calculate(particles, time, damping) {\n    this.eulerIntegrate(particles, time, damping);\n  }\n\n  // Euler Integrate\n  // https://rosettacode.org/wiki/Euler_method\n  eulerIntegrate(particle, time, damping) {\n    if (!particle.sleep) {\n      particle.old.p.copy(particle.p);\n      particle.old.v.copy(particle.v);\n\n      particle.a.multiplyScalar(1 / particle.mass);\n      particle.v.add(particle.a.multiplyScalar(time));\n      particle.p.add(particle.old.v.multiplyScalar(time));\n\n      if (damping) particle.v.multiplyScalar(damping);\n\n      particle.a.clear();\n    }\n  }\n}\n","import Pool from \"./Pool\";\nimport Util from \"../utils/Util\";\nimport Stats from \"../debug/Stats\";\nimport EventDispatcher from \"../events/EventDispatcher\";\nimport MathUtil from \"../math/MathUtil\";\nimport Integration from \"../math/Integration\";\n\nexport default class Proton {\n  static USE_CLOCK = false;\n\n  // measure 1:100\n  static MEASURE = 100;\n  static EULER = \"euler\";\n  static RK2 = \"runge-kutta2\";\n\n  // event name\n  static PARTICLE_CREATED = \"PARTICLE_CREATED\";\n  static PARTICLE_UPDATE = \"PARTICLE_UPDATE\";\n  static PARTICLE_SLEEP = \"PARTICLE_SLEEP\";\n  static PARTICLE_DEAD = \"PARTICLE_DEAD\";\n\n  static EMITTER_ADDED = \"EMITTER_ADDED\";\n  static EMITTER_REMOVED = \"EMITTER_REMOVED\";\n\n  static PROTON_UPDATE = \"PROTON_UPDATE\";\n  static PROTON_UPDATE_AFTER = \"PROTON_UPDATE_AFTER\";\n  static DEFAULT_INTERVAL = 0.0167;\n\n  static amendChangeTabsBug = true;\n\n  /**\n   * The constructor to add emitters\n   *\n   * @constructor Proton\n   *\n   * @todo proParticleCount is not in use\n   * @todo add more documentation of the single properties and parameters\n   *\n   * @param {Number} [proParticleCount] not in use?\n   * @param {Number} [integrationType=Proton.EULER]\n   *\n   * @property {String} [integrationType=Proton.EULER]\n   * @property {Array} emitters   All added emitter\n   * @property {Array} renderers  All added renderer\n   * @property {Number} time      The active time\n   * @property {Number} oldtime   The old time\n   */\n  constructor(integrationType) {\n    this.emitters = [];\n    this.renderers = [];\n\n    this.time = 0;\n    this.now = 0;\n    this.then = 0;\n    this.elapsed = 0;\n\n    this.stats = new Stats(this);\n    this.pool = new Pool(80);\n\n    this.integrationType = Util.initValue(integrationType, Proton.EULER);\n    this.integrator = new Integration(this.integrationType);\n\n    this._fps = \"auto\";\n    this._interval = Proton.DEFAULT_INTERVAL;\n  }\n\n  set fps(fps) {\n    this._fps = fps;\n    this._interval = fps === \"auto\" ? Proton.DEFAULT_INTERVAL : MathUtil.floor(1 / fps, 7);\n  }\n\n  get fps() {\n    return this._fps;\n  }\n\n  /**\n   * add a type of Renderer\n   *\n   * @method addRenderer\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Renderer} render\n   */\n  addRenderer(render) {\n    render.init(this);\n    this.renderers.push(render);\n  }\n\n  /**\n   * @name add a type of Renderer\n   *\n   * @method addRenderer\n   * @param {Renderer} render\n   */\n  removeRenderer(render) {\n    const index = this.renderers.indexOf(render);\n    this.renderers.splice(index, 1);\n    render.remove(this);\n  }\n\n  /**\n   * add the Emitter\n   *\n   * @method addEmitter\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Emitter} emitter\n   */\n  addEmitter(emitter) {\n    this.emitters.push(emitter);\n    emitter.parent = this;\n\n    this.dispatchEvent(Proton.EMITTER_ADDED, emitter);\n  }\n\n  /**\n   * Removes an Emitter\n   *\n   * @method removeEmitter\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Proton.Emitter} emitter\n   */\n  removeEmitter(emitter) {\n    const index = this.emitters.indexOf(emitter);\n    this.emitters.splice(index, 1);\n    emitter.parent = null;\n\n    this.dispatchEvent(Proton.EMITTER_REMOVED, emitter);\n  }\n\n  /**\n   * Updates all added emitters\n   *\n   * @method update\n   * @memberof Proton\n   * @instance\n   */\n  update() {\n    // 'auto' is the default browser refresh rate, the vast majority is 60fps\n    if (this._fps === \"auto\") {\n      this.dispatchEvent(Proton.PROTON_UPDATE);\n\n      if (Proton.USE_CLOCK) {\n        if (!this.then) this.then = new Date().getTime();\n        this.now = new Date().getTime();\n        this.elapsed = (this.now - this.then) * 0.001;\n        // Fix bugs such as chrome browser switching tabs causing excessive time difference\n        this.amendChangeTabsBug();\n\n        if (this.elapsed > 0) this.emittersUpdate(this.elapsed);\n        this.then = this.now;\n      } else {\n        this.emittersUpdate(Proton.DEFAULT_INTERVAL);\n      }\n\n      this.dispatchEvent(Proton.PROTON_UPDATE_AFTER);\n    }\n\n    // If the fps frame rate is set\n    else {\n      if (!this.then) this.then = new Date().getTime();\n      this.now = new Date().getTime();\n      this.elapsed = (this.now - this.then) * 0.001;\n\n      if (this.elapsed > this._interval) {\n        this.dispatchEvent(Proton.PROTON_UPDATE);\n        this.emittersUpdate(this._interval);\n        // https://stackoverflow.com/questions/19764018/controlling-fps-with-requestanimationframe\n        this.then = this.now - (this.elapsed % this._interval) * 1000;\n        this.dispatchEvent(Proton.PROTON_UPDATE_AFTER);\n      }\n    }\n  }\n\n  emittersUpdate(elapsed) {\n    let i = this.emitters.length;\n    while (i--) this.emitters[i].update(elapsed);\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method amendChangeTabsBug\n   * @memberof Proton\n   * @instance\n   */\n  amendChangeTabsBug() {\n    if (!Proton.amendChangeTabsBug) return;\n    if (this.elapsed > 0.5) {\n      this.then = new Date().getTime();\n      this.elapsed = 0;\n    }\n  }\n\n  /**\n   * Counts all particles from all emitters\n   *\n   * @method getCount\n   * @memberof Proton\n   * @instance\n   */\n  getCount() {\n    let total = 0;\n    let i = this.emitters.length;\n\n    while (i--) total += this.emitters[i].particles.length;\n    return total;\n  }\n\n  getAllParticles() {\n    let particles = [];\n    let i = this.emitters.length;\n\n    while (i--) particles = particles.concat(this.emitters[i].particles);\n    return particles;\n  }\n\n  destroyAllEmitters() {\n    Util.destroyAll(this.emitters);\n  }\n\n  /**\n   * Destroys everything related to this Proton instance. This includes all emitters, and all properties\n   *\n   * @method destroy\n   * @memberof Proton\n   * @instance\n   */\n  destroy(remove = false) {\n    const destroyOther = () => {\n      this.time = 0;\n      this.then = 0;\n      this.pool.destroy();\n      this.stats.destroy();\n\n      Util.destroyAll(this.emitters);\n      Util.destroyAll(this.renderers, this.getAllParticles());\n\n      this.integrator = null;\n      this.renderers = null;\n      this.emitters = null;\n      this.stats = null;\n      this.pool = null;\n    };\n\n    if (remove) {\n      setTimeout(destroyOther, 200);\n    } else {\n      destroyOther();\n    }\n  }\n}\n\nEventDispatcher.bind(Proton);\n","export default class Rgb {\n  constructor(r = 255, g = 255, b = 255) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  reset() {\n    this.r = 255;\n    this.g = 255;\n    this.b = 255;\n  }\n}\n","export default {\n  hasProp(target, key) {\n    if (!target) return false;\n    return target[key] !== undefined;\n    // return obj.hasOwnProperty(key);\n  },\n\n  /**\n   * set the prototype in a given prototypeObject\n   *\n   * @memberof Proton#Proton.Util\n   * @method setProp\n   *\n   * @todo add description for param `target`\n   * @todo translate desription from chinese to english\n   *\n   * @param {Object} target\n   * @param {Object} prototypeObject An object of single prototypes\n   *\n   * @return {Object} target\n   */\n  setProp(target, props) {\n    for (let prop in props) {\n      if (target.hasOwnProperty(prop)) {\n        target[prop] = Span.getSpanValue(props[prop]);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * @memberof Proton#Proton.Util\n   * @method setVectorVal\n   *\n   * @todo add description for param `target`\n   * @todo add description for param `conf`\n   * @todo add description for function\n   *\n   * @param {Object} target\n   * @param {Object} conf\n   */\n  setVectorVal(particle, conf = null) {\n    if (!conf) return;\n\n    if (this.hasProp(conf, \"x\")) particle.p.x = conf[\"x\"];\n    if (this.hasProp(conf, \"y\")) particle.p.y = conf[\"y\"];\n\n    if (this.hasProp(conf, \"vx\")) particle.v.x = conf[\"vx\"];\n    if (this.hasProp(conf, \"vy\")) particle.v.y = conf[\"vy\"];\n\n    if (this.hasProp(conf, \"ax\")) particle.a.x = conf[\"ax\"];\n    if (this.hasProp(conf, \"ay\")) particle.a.y = conf[\"ay\"];\n\n    if (this.hasProp(conf, \"p\")) particle.p.copy(conf[\"p\"]);\n    if (this.hasProp(conf, \"v\")) particle.v.copy(conf[\"v\"]);\n    if (this.hasProp(conf, \"a\")) particle.a.copy(conf[\"a\"]);\n\n    if (this.hasProp(conf, \"position\")) particle.p.copy(conf[\"position\"]);\n    if (this.hasProp(conf, \"velocity\")) particle.v.copy(conf[\"velocity\"]);\n    if (this.hasProp(conf, \"accelerate\")) particle.a.copy(conf[\"accelerate\"]);\n  }\n};\n","import MathUtil from \"./MathUtil\";\n\nexport default {\n  easeLinear(value) {\n    return value;\n  },\n\n  easeInQuad(value) {\n    return Math.pow(value, 2);\n  },\n\n  easeOutQuad(value) {\n    return -(Math.pow(value - 1, 2) - 1);\n  },\n\n  easeInOutQuad(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 2);\n\n    return -0.5 * ((value -= 2) * value - 2);\n  },\n\n  easeInCubic(value) {\n    return Math.pow(value, 3);\n  },\n\n  easeOutCubic(value) {\n    return Math.pow(value - 1, 3) + 1;\n  },\n\n  easeInOutCubic(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 3);\n\n    return 0.5 * (Math.pow(value - 2, 3) + 2);\n  },\n\n  easeInQuart(value) {\n    return Math.pow(value, 4);\n  },\n\n  easeOutQuart(value) {\n    return -(Math.pow(value - 1, 4) - 1);\n  },\n\n  easeInOutQuart(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 4);\n\n    return -0.5 * ((value -= 2) * Math.pow(value, 3) - 2);\n  },\n\n  easeInSine(value) {\n    return -Math.cos(value * MathUtil.PI_2) + 1;\n  },\n\n  easeOutSine(value) {\n    return Math.sin(value * MathUtil.PI_2);\n  },\n\n  easeInOutSine(value) {\n    return -0.5 * (Math.cos(Math.PI * value) - 1);\n  },\n\n  easeInExpo(value) {\n    return value === 0 ? 0 : Math.pow(2, 10 * (value - 1));\n  },\n\n  easeOutExpo(value) {\n    return value === 1 ? 1 : -Math.pow(2, -10 * value) + 1;\n  },\n\n  easeInOutExpo(value) {\n    if (value === 0) return 0;\n\n    if (value === 1) return 1;\n\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (value - 1));\n\n    return 0.5 * (-Math.pow(2, -10 * --value) + 2);\n  },\n\n  easeInCirc(value) {\n    return -(Math.sqrt(1 - value * value) - 1);\n  },\n\n  easeOutCirc(value) {\n    return Math.sqrt(1 - Math.pow(value - 1, 2));\n  },\n\n  easeInOutCirc(value) {\n    if ((value /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - value * value) - 1);\n    return 0.5 * (Math.sqrt(1 - (value -= 2) * value) + 1);\n  },\n\n  easeInBack(value) {\n    let s = 1.70158;\n    return value * value * ((s + 1) * value - s);\n  },\n\n  easeOutBack(value) {\n    let s = 1.70158;\n    return (value = value - 1) * value * ((s + 1) * value + s) + 1;\n  },\n\n  easeInOutBack(value) {\n    let s = 1.70158;\n    if ((value /= 0.5) < 1) return 0.5 * (value * value * (((s *= 1.525) + 1) * value - s));\n    return 0.5 * ((value -= 2) * value * (((s *= 1.525) + 1) * value + s) + 2);\n  },\n\n  getEasing(ease) {\n    if (typeof ease === \"function\") return ease;\n    else return this[ease] || this.easeLinear;\n  }\n};\n","import MathUtil from \"../math/MathUtil\";\n\nexport default class Vector2D {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n\n  getGradient() {\n    if (this.x !== 0) return Math.atan2(this.y, this.x);\n    else if (this.y > 0) return MathUtil.PI_2;\n    else if (this.y < 0) return -MathUtil.PI_2;\n  }\n\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n\n    return this;\n  }\n\n  add(v, w) {\n    if (w !== undefined) {\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n\n    return this;\n  }\n\n  addXY(a, b) {\n    this.x += a;\n    this.y += b;\n\n    return this;\n  }\n\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n\n    return this;\n  }\n\n  sub(v, w) {\n    if (w !== undefined) {\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n\n    return this;\n  }\n\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n\n    return this;\n  }\n\n  divideScalar(s) {\n    if (s !== 0) {\n      this.x /= s;\n      this.y /= s;\n    } else {\n      this.set(0, 0);\n    }\n\n    return this;\n  }\n\n  multiplyScalar(s) {\n    this.x *= s;\n    this.y *= s;\n\n    return this;\n  }\n\n  negate() {\n    return this.multiplyScalar(-1);\n  }\n\n  dot(v) {\n    return this.x * v.x + this.y * v.y;\n  }\n\n  lengthSq() {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  normalize() {\n    return this.divideScalar(this.length());\n  }\n\n  distanceTo(v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n\n  rotate(tha) {\n    const x = this.x;\n    const y = this.y;\n\n    this.x = x * Math.cos(tha) + y * Math.sin(tha);\n    this.y = -x * Math.sin(tha) + y * Math.cos(tha);\n\n    return this;\n  }\n\n  distanceToSquared(v) {\n    const dx = this.x - v.x;\n    const dy = this.y - v.y;\n\n    return dx * dx + dy * dy;\n  }\n\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n\n    return this;\n  }\n\n  equals(v) {\n    return v.x === this.x && v.y === this.y;\n  }\n\n  clear() {\n    this.x = 0.0;\n    this.y = 0.0;\n    return this;\n  }\n\n  clone() {\n    return new Vector2D(this.x, this.y);\n  }\n}\n","/** @typedef {import('../behaviour/Behaviour')} Behaviour */\n/** @typedef {import('../math/Vector2D')} Vector2D */\n/** @typedef {import('../utils/Rgb')} Rgb */\nimport Rgb from \"../utils/Rgb\";\nimport Puid from \"../utils/Puid\";\nimport Util from \"../utils/Util\";\nimport PropUtil from \"../utils/PropUtil\";\nimport ease from \"../math/ease\";\nimport Vector2D from \"../math/Vector2D\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Particle {\n  /** @type string */\n  id = \"\";\n\n  /** @type {{p:Vector2D,v:Vector2D,a:Vector2D}} */\n  old = {};\n\n  /** @type {object} */\n  data = {};\n\n  /** @type {Behaviour[]} */\n  behaviours = [];\n\n  /** @type {Vector2D} */\n  p = [];\n\n  /** @type {Vector2D} */\n  v = [];\n\n  /** @type {Vector2D} */\n  a = [];\n\n  /** @type {Rgb} */\n  rgb = {};\n\n  /**\n   * the Particle class\n   *\n   * @class Proton.Particle\n   * @constructor\n   * @param {Object} pObj the parameters object;\n   * for example {life:3,dead:false}\n   */\n  constructor(conf) {\n    /**\n     * The particle's id;\n     * @property id\n     * @type {string}\n     */\n    this.name = \"Particle\";\n    this.id = Puid.id(this.name);\n    this.old = {};\n    this.data = {};\n    this.behaviours = [];\n\n    this.p = new Vector2D();\n    this.v = new Vector2D();\n    this.a = new Vector2D();\n    this.old.p = new Vector2D();\n    this.old.v = new Vector2D();\n    this.old.a = new Vector2D();\n\n    this.rgb = new Rgb();\n    this.reset();\n    conf && PropUtil.setProp(this, conf);\n  }\n\n  getDirection() {\n    return Math.atan2(this.v.x, -this.v.y) * MathUtil.N180_PI;\n  }\n\n  reset() {\n    this.life = Infinity;\n    this.age = 0;\n\n    this.dead = false;\n    this.sleep = false;\n    this.body = null;\n    this.sprite = null;\n    this.parent = null;\n\n    this.energy = 1; // Energy Loss\n    this.mass = 1;\n    this.radius = 10;\n    this.alpha = 1;\n    this.scale = 1;\n    this.rotation = 0;\n    this.color = null;\n\n    this.p.set(0, 0);\n    this.v.set(0, 0);\n    this.a.set(0, 0);\n    this.old.p.set(0, 0);\n    this.old.v.set(0, 0);\n    this.old.a.set(0, 0);\n    this.easing = ease.easeLinear;\n\n    this.rgb.reset();\n    Util.emptyObject(this.data);\n    this.removeAllBehaviours();\n\n    return this;\n  }\n\n  update(time, index) {\n    if (!this.sleep) {\n      this.age += time;\n      this.applyBehaviours(time, index);\n    }\n\n    if (this.age < this.life) {\n      const scale = this.easing(this.age / this.life);\n      this.energy = Math.max(1 - scale, 0);\n    } else {\n      this.destroy();\n    }\n  }\n\n  applyBehaviours(time, index) {\n    const length = this.behaviours.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      this.behaviours[i] && this.behaviours[i].applyBehaviour(this, time, index);\n    }\n  }\n\n  /**\n   * @param {Behaviour} behaviour\n   */\n  addBehaviour(behaviour) {\n    this.behaviours.push(behaviour);\n\n    if (behaviour.hasOwnProperty(\"parents\")) behaviour.parents.push(this);\n    behaviour.initialize(this);\n  }\n\n  /**\n   * @param {Behaviour[]} behaviours\n   */\n  addBehaviours(behaviours) {\n    const length = behaviours.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      this.addBehaviour(behaviours[i]);\n    }\n  }\n\n  removeBehaviour(behaviour) {\n    const index = this.behaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      const behaviour = this.behaviours.splice(index, 1);\n      behaviour.parents = null;\n    }\n  }\n\n  removeAllBehaviours() {\n    Util.emptyArray(this.behaviours);\n  }\n\n  /**\n   * Destory this particle\n   * @method destroy\n   */\n  destroy() {\n    this.removeAllBehaviours();\n    this.energy = 0;\n    this.dead = true;\n    this.parent = null;\n  }\n}\n","export default {\n  /**\n   * @typedef  {Object} rgbObject\n   * @property {Number} r red value\n   * @property {Number} g green value\n   * @property {Number} b blue value\n   */\n  /**\n   * converts a hex value to a rgb object\n   *\n   * @memberof Proton#Proton.Util\n   * @method hexToRgb\n   *\n   * @param {String} h any hex value, e.g. #000000 or 000000 for black\n   *\n   * @return {rgbObject}\n   */\n  hexToRgb(h) {\n    const hex16 = h.charAt(0) === \"#\" ? h.substring(1, 7) : h;\n    const r = parseInt(hex16.substring(0, 2), 16);\n    const g = parseInt(hex16.substring(2, 4), 16);\n    const b = parseInt(hex16.substring(4, 6), 16);\n\n    return { r, g, b };\n  },\n\n  /**\n   * converts a rgb value to a rgb string\n   *\n   * @memberof Proton#Proton.Util\n   * @method rgbToHex\n   *\n   * @param {Object | Proton.hexToRgb} rgb a rgb object like in {@link Proton#Proton.}\n   *\n   * @return {String} rgb()\n   */\n  rgbToHex(rbg) {\n    return `rgb(${rbg.r}, ${rbg.g}, ${rbg.b})`;\n  },\n\n  getHex16FromParticle(p) {\n    return Number(p.rgb.r) * 65536 + Number(p.rgb.g) * 256 + Number(p.rgb.b);\n  }\n};\n","import Vector2D from \"./Vector2D\";\n\nexport default class Polar2D {\n  constructor(r, tha) {\n    this.r = Math.abs(r) || 0;\n    this.tha = tha || 0;\n  }\n\n  set(r, tha) {\n    this.r = r;\n    this.tha = tha;\n    return this;\n  }\n\n  setR(r) {\n    this.r = r;\n    return this;\n  }\n\n  setTha(tha) {\n    this.tha = tha;\n    return this;\n  }\n\n  copy(p) {\n    this.r = p.r;\n    this.tha = p.tha;\n    return this;\n  }\n\n  toVector() {\n    return new Vector2D(this.getX(), this.getY());\n  }\n\n  getX() {\n    return this.r * Math.sin(this.tha);\n  }\n\n  getY() {\n    return -this.r * Math.cos(this.tha);\n  }\n\n  normalize() {\n    this.r = 1;\n    return this;\n  }\n\n  equals(v) {\n    return v.r === this.r && v.tha === this.tha;\n  }\n\n  clear() {\n    this.r = 0.0;\n    this.tha = 0.0;\n    return this;\n  }\n\n  clone() {\n    return new Polar2D(this.r, this.tha);\n  }\n}\n","const Mat3 = {\n  create(mat3) {\n    const mat = new Float32Array(9);\n    if (mat3) this.set(mat3, mat);\n\n    return mat;\n  },\n\n  set(mat1, mat2) {\n    for (let i = 0; i < 9; i++) mat2[i] = mat1[i];\n\n    return mat2;\n  },\n\n  multiply(mat, mat2, mat3) {\n    let a00 = mat[0],\n      a01 = mat[1],\n      a02 = mat[2],\n      a10 = mat[3],\n      a11 = mat[4],\n      a20 = mat[6],\n      a21 = mat[7],\n      b00 = mat2[0],\n      b01 = mat2[1],\n      b02 = mat2[2],\n      b10 = mat2[3],\n      b11 = mat2[4],\n      b20 = mat2[6],\n      b21 = mat2[7];\n\n    mat3[0] = b00 * a00 + b01 * a10;\n    mat3[1] = b00 * a01 + b01 * a11;\n    mat3[2] = a02 * b02;\n    mat3[3] = b10 * a00 + b11 * a10;\n    mat3[4] = b10 * a01 + b11 * a11;\n    mat3[6] = b20 * a00 + b21 * a10 + a20;\n    mat3[7] = b20 * a01 + b21 * a11 + a21;\n\n    return mat3;\n  },\n\n  inverse(mat, mat3) {\n    let a00 = mat[0],\n      a01 = mat[1],\n      a10 = mat[3],\n      a11 = mat[4],\n      a20 = mat[6],\n      a21 = mat[7],\n      b01 = a11,\n      b11 = -a10,\n      b21 = a21 * a10 - a11 * a20,\n      d = a00 * b01 + a01 * b11,\n      id;\n\n    id = 1 / d;\n    mat3[0] = b01 * id;\n    mat3[1] = -a01 * id;\n    mat3[3] = b11 * id;\n    mat3[4] = a00 * id;\n    mat3[6] = b21 * id;\n    mat3[7] = (-a21 * a00 + a01 * a20) * id;\n\n    return mat3;\n  },\n\n  multiplyVec2(m, vec, mat3) {\n    let x = vec[0],\n      y = vec[1];\n\n    mat3[0] = x * m[0] + y * m[3] + m[6];\n    mat3[1] = x * m[1] + y * m[4] + m[7];\n\n    return mat3;\n  }\n};\n\nexport default Mat3;\n","import Util from \"../utils/Util\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Span {\n  constructor(a, b, center) {\n    if (Util.isArray(a)) {\n      this.isArray = true;\n      this.a = a;\n    } else {\n      this.isArray = false;\n      this.a = Util.initValue(a, 1);\n      this.b = Util.initValue(b, this.a);\n      this.center = Util.initValue(center, false);\n    }\n  }\n\n  getValue(isInt = false) {\n    if (this.isArray) {\n      return Util.getRandFromArray(this.a);\n    } else {\n      if (!this.center) {\n        return MathUtil.randomAToB(this.a, this.b, isInt);\n      } else {\n        return MathUtil.randomFloating(this.a, this.b, isInt);\n      }\n    }\n  }\n\n  /**\n   * Returns a new Span object\n   *\n   * @memberof Proton#Proton.Util\n   * @method setSpanValue\n   *\n   * @todo a, b and c should be 'Mixed' or 'Number'?\n   *\n   * @param {Mixed | Span} a\n   * @param {Mixed}               b\n   * @param {Mixed}               c\n   *\n   * @return {Span}\n   */\n  static setSpanValue(a, b, c) {\n    if (a instanceof Span) {\n      return a;\n    } else {\n      if (b === undefined) {\n        return new Span(a);\n      } else {\n        if (c === undefined) return new Span(a, b);\n        else return new Span(a, b, c);\n      }\n    }\n  }\n\n  /**\n   * Returns the value from a Span, if the param is not a Span it will return the given parameter\n   *\n   * @memberof Proton#Proton.Util\n   * @method getValue\n   *\n   * @param {Mixed | Span} pan\n   *\n   * @return {Mixed} the value of Span OR the parameter if it is not a Span\n   */\n  static getSpanValue(pan) {\n    return pan instanceof Span ? pan.getValue() : pan;\n  }\n}\n","import Span from \"./Span\";\nimport Util from \"../utils/Util\";\nimport MathUtil from \"./MathUtil\";\n\nexport default class ArraySpan extends Span {\n  constructor(color) {\n    super();\n    this._arr = Util.toArray(color);\n  }\n\n  getValue() {\n    const val = Util.getRandFromArray(this._arr);\n    return val === \"random\" || val === \"Random\" ? MathUtil.randomColor() : val;\n  }\n\n  /**\n   * Make sure that the color is an instance of Proton.ArraySpan, if not it makes a new instance\n   *\n   * @method setSpanValue\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  static createArraySpan(arr) {\n    if (!arr) return null;\n\n    if (arr instanceof ArraySpan) return arr;\n    else return new ArraySpan(arr);\n  }\n}\n","export default class Rectangle {\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n\n    this.width = w;\n    this.height = h;\n\n    this.bottom = this.y + this.height;\n    this.right = this.x + this.width;\n  }\n\n  contains(x, y) {\n    if (x <= this.right && x >= this.x && y <= this.bottom && y >= this.y) return true;\n    else return false;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\n\nexport default class Rate {\n  /**\n   * The number of particles per second emission (a [particle]/b [s]);\n   * @namespace\n   * @memberof! Proton#\n   * @constructor\n   * @alias Rate\n   *\n   * @param {Array | Number | Span} numpan the number of each emission;\n   * @param {Array | Number | Span} timepan the time of each emission;\n   * for example: new Rate(new Span(10, 20), new Span(.1, .25));\n   */\n  constructor(numpan, timepan) {\n    this.numPan = Span.setSpanValue(Util.initValue(numpan, 1));\n    this.timePan = Span.setSpanValue(Util.initValue(timepan, 1));\n\n    this.startTime = 0;\n    this.nextTime = 0;\n    this.init();\n  }\n\n  init() {\n    this.startTime = 0;\n    this.nextTime = this.timePan.getValue();\n  }\n\n  getValue(time) {\n    this.startTime += time;\n\n    if (this.startTime >= this.nextTime) {\n      this.startTime = 0;\n      this.nextTime = this.timePan.getValue();\n\n      if (this.numPan.b === 1) {\n        if (this.numPan.getValue(false) > 0.5) return 1;\n        else return 0;\n      } else {\n        return this.numPan.getValue(true);\n      }\n    }\n\n    return 0;\n  }\n}\n","export default class Initialize {\n  reset() {}\n\n  init(emitter, particle) {\n    if (particle) {\n      this.initialize(particle);\n    } else {\n      this.initialize(emitter);\n    }\n  }\n\n  // sub class init\n  initialize(target) {}\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Life extends Initialize {\n  constructor(a, b, c) {\n    super();\n\n    this.lifePan = Span.setSpanValue(a, b, c);\n    this.name = \"Life\";\n  }\n\n  initialize(target) {\n    if (this.lifePan.a === Infinity) target.life = Infinity;\n    else target.life = this.lifePan.getValue();\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\n\nexport default class Zone {\n  constructor() {\n    this.vector = new Vector2D(0, 0);\n    this.random = 0;\n    this.crossType = \"dead\";\n    this.alert = true;\n  }\n\n  getPosition() {}\n\n  crossing(particle) {}\n\n  destroy() {\n    this.vector = null;\n  }\n}\n","import Zone from \"./Zone\";\n\nexport default class PointZone extends Zone {\n  constructor(x, y) {\n    super();\n\n    this.x = x;\n    this.y = y;\n  }\n\n  getPosition() {\n    this.vector.x = this.x;\n    this.vector.y = this.y;\n\n    return this.vector;\n  }\n\n  crossing(particle) {\n    if (this.alert) {\n      console.error(\"Sorry, PointZone does not support crossing method!\");\n      this.alert = false;\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport PointZone from \"../zone/PointZone\";\nimport Initialize from \"./Initialize\";\n\nexport default class Position extends Initialize {\n  constructor(zone) {\n    super();\n    this.zone = Util.initValue(zone, new PointZone());\n    this.name = \"Position\";\n  }\n\n  reset(zone) {\n    this.zone = Util.initValue(zone, new PointZone());\n  }\n\n  initialize(target) {\n    this.zone.getPosition();\n\n    target.p.x = this.zone.vector.x;\n    target.p.y = this.zone.vector.y;\n  }\n}\n","import Proton from \"../core/Proton\";\nimport Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\nimport Initialize from \"./Initialize\";\nimport Polar2D from \"../math/Polar2D\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Velocity extends Initialize {\n  constructor(rpan, thapan, type) {\n    super();\n\n    this.rPan = Span.setSpanValue(rpan);\n    this.thaPan = Span.setSpanValue(thapan);\n    this.type = Util.initValue(type, \"vector\");\n\n    this.name = \"Velocity\";\n  }\n\n  reset(rpan, thapan, type) {\n    this.rPan = Span.setSpanValue(rpan);\n    this.thaPan = Span.setSpanValue(thapan);\n    this.type = Util.initValue(type, \"vector\");\n  }\n\n  normalizeVelocity(vr) {\n    return vr * Proton.MEASURE;\n  }\n\n  initialize(target) {\n    if (this.type === \"p\" || this.type === \"P\" || this.type === \"polar\") {\n      const polar2d = new Polar2D(\n        this.normalizeVelocity(this.rPan.getValue()),\n        this.thaPan.getValue() * MathUtil.PI_180\n      );\n\n      target.v.x = polar2d.getX();\n      target.v.y = polar2d.getY();\n    } else {\n      target.v.x = this.normalizeVelocity(this.rPan.getValue());\n      target.v.y = this.normalizeVelocity(this.thaPan.getValue());\n    }\n  }\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Mass extends Initialize {\n  constructor(a, b, c) {\n    super();\n    this.massPan = Span.setSpanValue(a, b, c);\n    this.name = \"Mass\";\n  }\n\n  initialize(target) {\n    target.mass = this.massPan.getValue();\n  }\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Radius extends Initialize {\n  constructor(a, b, c) {\n    super();\n    this.radius = Span.setSpanValue(a, b, c);\n\n    this.name = \"Radius\";\n  }\n\n  reset(a, b, c) {\n    this.radius = Span.setSpanValue(a, b, c);\n  }\n\n  initialize(particle) {\n    particle.radius = this.radius.getValue();\n    particle.data.oldRadius = particle.radius;\n  }\n}\n","import Util from \"../utils/Util\";\nimport ArraySpan from \"../math/ArraySpan\";\nimport Initialize from \"./Initialize\";\n\nexport default class Body extends Initialize {\n  constructor(image, w, h) {\n    super();\n\n    this.image = this.setSpanValue(image);\n    this.w = Util.initValue(w, 20);\n    this.h = Util.initValue(h, this.w);\n    this.name = \"Body\";\n  }\n\n  initialize(particle) {\n    const imageTarget = this.image.getValue();\n\n    if (typeof imageTarget === \"string\") {\n      particle.body = {\n        width: this.w,\n        height: this.h,\n        src: imageTarget,\n        isInner: true,\n        inner: true\n      };\n    } else {\n      particle.body = imageTarget;\n    }\n  }\n\n  setSpanValue(image) {\n    return image instanceof ArraySpan ? image : new ArraySpan(image);\n  }\n}\n","import Proton from \"../core/Proton\";\nimport Util from \"../utils/Util\";\nimport ease from \"../math/ease\";\n\nexport default class Behaviour {\n  static id = 0;\n\n  /**\n   * The Behaviour class is the base for the other Behaviour\n   *\n   * @memberof! -\n   * @interface\n   * @alias Proton.Behaviour\n   *\n   * @param {Number} life \tthe behaviours life\n   * @param {String} easing \tThe behaviour's decaying trend, for example ease.easeOutQuart\n   *\n   * @property {String}  id \t\tThe behaviours id\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   * @property {Number}  age=0 \tHow long the particle should be 'alife'\n   * @property {Number}  energy=1\n   * @property {Boolean} dead=false The particle is dead at first\n   * @property {Array}   parents \tThe behaviour's parents array\n   * @property {String}  name \tThe behaviour name\n   */\n  constructor(life, easing) {\n    this.life = Util.initValue(life, Infinity);\n    this.easing = ease.getEasing(easing);\n\n    this.age = 0;\n    this.energy = 1;\n    this.dead = false;\n    this.parents = [];\n\n    this.id = `Behaviour_${Behaviour.id++}`;\n    this.name = \"Behaviour\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton.Behaviour\n   * @instance\n   *\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(life, easing) {\n    this.life = Util.initValue(life, Infinity);\n    this.easing = ease.getEasing(easing);\n  }\n\n  /**\n   * Normalize a force by 1:100;\n   *\n   * @method normalizeForce\n   * @memberof Proton.Behaviour\n   * @instance\n   *\n   * @param {Proton.Vector2D} force\n   */\n  normalizeForce(force) {\n    return force.multiplyScalar(Proton.MEASURE);\n  }\n\n  /**\n   * Normalize a value by 1:100;\n   *\n   * @method normalizeValue\n   * @memberof Proton.Behaviour\n   * @instance\n   *\n   * @param {Number} value\n   */\n  normalizeValue(value) {\n    return value * Proton.MEASURE;\n  }\n\n  /**\n   * Initialize the behaviour's parameters for all particles\n   *\n   * @method initialize\n   * @memberof Proton.Behaviour\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   */\n  initialize(particle) {}\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton.Behaviour\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  calculate(particle, time, index) {\n    this.age += time;\n\n    if (this.age >= this.life || this.dead) {\n      this.energy = 0;\n      this.dead = true;\n      this.destroy();\n    } else {\n      const scale = this.easing(particle.age / particle.life);\n      this.energy = Math.max(1 - scale, 0);\n    }\n  }\n\n  /**\n   * Destory this behaviour\n   *\n   * @method destroy\n   * @memberof Proton.Behaviour\n   * @instance\n   */\n  destroy() {\n    let i = this.parents.length;\n    while (i--) {\n      this.parents[i].removeBehaviour(this);\n    }\n\n    this.parents.length = 0;\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Force extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Force\n   *\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(fx, fy, life, easing) {\n    super(life, easing);\n\n    this.force = this.normalizeForce(new Vector2D(fx, fy));\n    this.name = \"Force\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Force\n   * @instance\n   *\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(fx, fy, life, easing) {\n    this.force = this.normalizeForce(new Vector2D(fx, fy));\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Force\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n    particle.a.add(this.force);\n  }\n}\n","import Util from \"../utils/Util\";\nimport Vector2D from \"../math/Vector2D\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Attraction extends Behaviour {\n  /**\n   * This behaviour let the particles follow one specific Proton.Vector2D\n   *\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Attraction\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {Proton.Vector2D} targetPosition\n   * @property {Number} radius\n   * @property {Number} force\n   * @property {Number} radiusSq\n   * @property {Proton.Vector2D} attractionForce\n   * @property {Number} lengthSq\n   * @property {String} name The Behaviour name\n   */\n  constructor(targetPosition, force, radius, life, easing) {\n    super(life, easing);\n\n    this.targetPosition = Util.initValue(targetPosition, new Vector2D());\n    this.radius = Util.initValue(radius, 1000);\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector2D();\n    this.lengthSq = 0;\n\n    this.name = \"Attraction\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Attraction\n   * @instance\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(targetPosition, force, radius, life, easing) {\n    this.targetPosition = Util.initValue(targetPosition, new Vector2D());\n    this.radius = Util.initValue(radius, 1000);\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector2D();\n    this.lengthSq = 0;\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @memberof Proton#Proton.Attraction\n   * @method applyBehaviour\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    this.attractionForce.copy(this.targetPosition);\n    this.attractionForce.sub(particle.p);\n    this.lengthSq = this.attractionForce.lengthSq();\n\n    if (this.lengthSq > 0.00004 && this.lengthSq < this.radiusSq) {\n      this.attractionForce.normalize();\n      this.attractionForce.multiplyScalar(1 - this.lengthSq / this.radiusSq);\n      this.attractionForce.multiplyScalar(this.force);\n\n      particle.a.add(this.attractionForce);\n    }\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\nimport MathUtil from \"../math/MathUtil\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class RandomDrift extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Behaviour\n   * @constructor\n   * @alias RandomDrift\n   *\n   * @param {Number} driftX \t\t\t\tX value of the new Vector2D\n   * @param {Number} driftY  \t\t\t\tY value of the new Vector2D\n   * @param {Number} delay \t\t\t\tHow much delay the drift should have\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   *\n   * @property {Number} time The time of the drift\n   * @property {String} name The Behaviour name\n   */\n  constructor(driftX, driftY, delay, life, easing) {\n    super(life, easing);\n\n    this.reset(driftX, driftY, delay);\n    this.time = 0;\n    this.name = \"RandomDrift\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#RandomDrift\n   * @instance\n   *\n   * @param {Number} driftX \t\t\t\tX value of the new Vector2D\n   * @param {Number} driftY  \t\t\t\tY value of the new Vector2D\n   * @param {Number} delay \t\t\t\tHow much delay the drift should have\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(driftX, driftY, delay, life, easing) {\n    this.panFoce = new Vector2D(driftX, driftY);\n    this.panFoce = this.normalizeForce(this.panFoce);\n    this.delay = delay;\n\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    particle.data.time = 0;\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#RandomDrift\n   * @instance\n   *\n   * @param {Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n    particle.data.time += time;\n\n    if (particle.data.time >= this.delay) {\n      particle.a.addXY(\n        MathUtil.randomAToB(-this.panFoce.x, this.panFoce.x),\n        MathUtil.randomAToB(-this.panFoce.y, this.panFoce.y)\n      );\n\n      particle.data.time = 0;\n    }\n  }\n}\n","import Force from \"./Force\";\n\nexport default class Gravity extends Force {\n  /**\n   * @memberof! Proton#\n   * @augments Proton#Proton.Force\n   * @constructor\n   * @alias Proton.Gravity\n   *\n   * @param {Number} g \t\t\t\t\t\t\tGravity\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(g, life, easing) {\n    super(0, g, life, easing);\n    this.name = \"Gravity\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Gravity\n   * @instance\n   *\n   * @param {Number} g \t\t\t\t\t\t\tGravity\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(g, life, easing) {\n    super.reset(0, g, life, easing);\n  }\n}\n","import Util from \"../utils/Util\";\nimport Vector2D from \"../math/Vector2D\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Collision extends Behaviour {\n  /**\n   * The callback after collision\n   *\n   * @callback Callback\n   *\n   * @param {Proton.Particle} particle\n   * @param {Proton.Paritcle} otherParticle\n   */\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Collision\n   *\n   * @todo add description to mass\n   *\n   * @param {Proton.Emitter} \t[emitter=null] \t\tthe attraction point coordinates\n   * @param {Boolean} \t\t[mass=true]\n   * @param {Callback}\t \t[callback=null]\t\tthe callback after the collision\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(emitter, mass, callback, life, easing) {\n    super(life, easing);\n\n    this.reset(emitter, mass, callback);\n    this.name = \"Collision\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @memberof Proton#Proton.Collision\n   * @method reset\n   * @instance\n   *\n   * @todo add description to mass\n   *\n   * @param {Proton.Emitter} \t[emitter=null] \t\tthe attraction point coordinates\n   * @param {Boolean} \t\t[mass=true]\n   * @param {Callback}\t \t[callback=null]\t\tthe callback after the collision\n   * @param {Number} \t\t\t[life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(emitter, mass, callback, life, easing) {\n    this.emitter = Util.initValue(emitter, null);\n    this.mass = Util.initValue(mass, true);\n    this.callback = Util.initValue(callback, null);\n\n    this.collisionPool = [];\n    this.delta = new Vector2D();\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @memberof Proton#Proton.Collision\n   * @method applyBehaviour\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    const newPool = this.emitter ? this.emitter.particles.slice(index) : this.pool.slice(index);\n    const length = newPool.length;\n\n    let otherParticle;\n    let lengthSq;\n    let overlap;\n    let totalMass;\n    let averageMass1, averageMass2;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      otherParticle = newPool[i];\n\n      if (otherParticle !== particle) {\n        this.delta.copy(otherParticle.p);\n        this.delta.sub(particle.p);\n\n        lengthSq = this.delta.lengthSq();\n        const distance = particle.radius + otherParticle.radius;\n\n        if (lengthSq <= distance * distance) {\n          overlap = distance - Math.sqrt(lengthSq);\n          overlap += 0.5;\n\n          totalMass = particle.mass + otherParticle.mass;\n          averageMass1 = this.mass ? otherParticle.mass / totalMass : 0.5;\n          averageMass2 = this.mass ? particle.mass / totalMass : 0.5;\n\n          particle.p.add(\n            this.delta\n              .clone()\n              .normalize()\n              .multiplyScalar(overlap * -averageMass1)\n          );\n          otherParticle.p.add(this.delta.normalize().multiplyScalar(overlap * averageMass2));\n\n          this.callback && this.callback(particle, otherParticle);\n        }\n      }\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class CrossZone extends Behaviour {\n  /**\n   * Defines what happens if the particles come to the end of the specified zone\n   *\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.CrossZone\n   *\n   * @param {Proton.Zone} zone \t\t\t\t\t\tcan be any Proton.Zone - e.g. Proton.RectZone()\n   * @param {String} \t\t[crossType=dead] \t\t\twhat happens if the particles pass the zone - allowed strings: dead | bound | cross\n   * @param {Number} \t\t[life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} \t\t[easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(zone, crossType, life, easing) {\n    super(life, easing);\n\n    this.reset(zone, crossType);\n    this.name = \"CrossZone\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.CrossZone\n   * @instance\n   *\n   * @param {Proton.Zone} zone \t\t\t\tcan be any Proton.Zone - e.g. Proton.RectZone()\n   * @param {String} \t\t[crossType=dead] \twhat happens if the particles pass the zone - allowed strings: dead | bound | cross\n   * @param {Number} \t\t[life=Infinity] \tthis behaviour's life\n   * @param {String} \t\t[easing=easeLinear]\tthis behaviour's easing\n   */\n  reset(zone, crossType, life, easing) {\n    this.zone = zone;\n    this.zone.crossType = Util.initValue(crossType, \"dead\");\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.CrossZone\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n    this.zone.crossing(particle);\n  }\n}\n","import Util from \"../utils/Util\";\nimport Span from \"../math/Span\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Alpha extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Alpha\n   *\n   * @todo add description for 'a' and 'b'\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Alpha\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @todo add description for 'a' and 'b'\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, life, easing) {\n    this.same = b === null || b === undefined ? true : false;\n    this.a = Span.setSpanValue(Util.initValue(a, 1));\n    this.b = Span.setSpanValue(b);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Sets the new alpha value of the particle\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @param {Proton.Particle} particle A single Proton generated particle\n   */\n  initialize(particle) {\n    particle.data.alphaA = this.a.getValue();\n\n    if (this.same) particle.data.alphaB = particle.data.alphaA;\n    else particle.data.alphaB = this.b.getValue();\n  }\n\n  /**\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    particle.alpha = particle.data.alphaB + (particle.data.alphaA - particle.data.alphaB) * this.energy;\n\n    if (particle.alpha < 0.001) particle.alpha = 0;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Scale extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Scale\n   *\n   * @todo add description for 'a' and 'b'\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Scale\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Scale\n   * @instance\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, life, easing) {\n    this.same = b === null || b === undefined ? true : false;\n    this.a = Span.setSpanValue(Util.initValue(a, 1));\n    this.b = Span.setSpanValue(b);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initialize the behaviour's parameters for all particles\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Scale\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   */\n  initialize(particle) {\n    particle.data.scaleA = this.a.getValue();\n    particle.data.oldRadius = particle.radius;\n    particle.data.scaleB = this.same ? particle.data.scaleA : this.b.getValue();\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Scale\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n    particle.scale = particle.data.scaleB + (particle.data.scaleA - particle.data.scaleB) * this.energy;\n\n    if (particle.scale < 0.0001) particle.scale = 0;\n    particle.radius = particle.data.oldRadius * particle.scale;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Rotate extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Rotate\n   *\n   * @todo add description for 'a', 'b' and 'style'\n   *\n   * @param {String} [influence=Velocity] The rotation's influence\n   * @param {String} b\n   * @param {String} [style=to]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(influence, b, style, life, easing) {\n    super(life, easing);\n\n    this.reset(influence, b, style);\n    this.name = \"Rotate\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Rotate\n   * @instance\n   *\n   * @todo add description for 'a', 'b' and 'style'\n   *\n   * @param {String} a\n   * @param {String} b\n   * @param {String} [style=to]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, style, life, easing) {\n    this.same = b === null || b === undefined ? true : false;\n\n    this.a = Span.setSpanValue(Util.initValue(a, \"Velocity\"));\n    this.b = Span.setSpanValue(Util.initValue(b, 0));\n    this.style = Util.initValue(style, \"to\");\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initialize the behaviour's parameters for all particles\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Rotate\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   */\n  initialize(particle) {\n    particle.rotation = this.a.getValue();\n    particle.data.rotationA = this.a.getValue();\n\n    if (!this.same) particle.data.rotationB = this.b.getValue();\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Rotate\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    if (!this.same) {\n      if (this.style === \"to\" || this.style === \"TO\" || this.style === \"_\") {\n        particle.rotation +=\n          particle.data.rotationB + (particle.data.rotationA - particle.data.rotationB) * this.energy;\n      } else {\n        particle.rotation += particle.data.rotationB;\n      }\n    } else if (this.a.a === \"V\" || this.a.a === \"Velocity\" || this.a.a === \"v\") {\n      // beta...\n      particle.rotation = particle.getDirection();\n    }\n  }\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport ArraySpan from \"../math/ArraySpan\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Color extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Color\n   *\n   * @param {Proton.ArraySpan | String} a the string should be a hex e.g. #000000 for black\n   * @param {Proton.ArraySpan | String} b the string should be a hex e.g. #000000 for black\n   * @param {Number} [life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Color\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.ArraySpan | String} a the string should be a hex e.g. #000000 for black\n   * @param {Proton.ArraySpan | String} b the string should be a hex e.g. #000000 for black\n   * @param {Number} [life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, life, easing) {\n    this.a = ArraySpan.createArraySpan(a);\n    this.b = ArraySpan.createArraySpan(b);\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initialize the behaviour's parameters for all particles\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   */\n  initialize(particle) {\n    particle.color = this.a.getValue();\n    particle.data.colorA = ColorUtil.hexToRgb(particle.color);\n\n    if (this.b) particle.data.colorB = ColorUtil.hexToRgb(this.b.getValue());\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    if (this.b) {\n      this.calculate(particle, time, index);\n\n      particle.rgb.r = particle.data.colorB.r + (particle.data.colorA.r - particle.data.colorB.r) * this.energy;\n      particle.rgb.g = particle.data.colorB.g + (particle.data.colorA.g - particle.data.colorB.g) * this.energy;\n      particle.rgb.b = particle.data.colorB.b + (particle.data.colorA.b - particle.data.colorB.b) * this.energy;\n\n      particle.rgb.r = particle.rgb.r << 0;\n      particle.rgb.g = particle.rgb.g << 0;\n      particle.rgb.b = particle.rgb.b << 0;\n    } else {\n      particle.rgb.r = particle.data.colorA.r;\n      particle.rgb.g = particle.data.colorA.g;\n      particle.rgb.b = particle.data.colorA.b;\n    }\n  }\n}\n","import MathUtil from \"../math/MathUtil\";\nimport Vector2D from \"../math/Vector2D\";\nimport Span from \"../math/Span\";\nimport Behaviour from \"./Behaviour\";\n\nconst CHANGING = \"changing\";\n\nexport default class Cyclone extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Cyclone\n   *\n   * @param {Number} angle\n   * @param {Number} force\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(angle, force, life, easing) {\n    super(life, easing);\n    this.setAngleAndForce(angle, force);\n    this.name = \"Cyclone\";\n  }\n\n  setAngleAndForce(angle, force) {\n    this.force = CHANGING;\n    this.angle = MathUtil.PI / 2;\n\n    if (angle === \"right\") {\n      this.angle = MathUtil.PI / 2;\n    } else if (angle === \"left\") {\n      this.angle = -MathUtil.PI / 2;\n    } else if (angle === \"random\") {\n      this.angle = \"random\";\n    } else if (angle instanceof Span) {\n      this.angle = \"span\";\n      this.span = angle;\n    } else if (angle) {\n      this.angle = angle;\n    }\n\n    if (\n      String(force).toLowerCase() === \"changing\" ||\n      String(force).toLowerCase() === \"chang\" ||\n      String(force).toLowerCase() === \"auto\"\n    ) {\n      this.force = CHANGING;\n    } else if (force) {\n      this.force = force;\n    }\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Cyclone\n   * @instance\n   *\n   * @param {Number} angle\n   * @param {Number} force\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(angle, force, life, easing) {\n    this.angle = MathUtil.PI / 2;\n    this.setAngleAndForce(angle, force);\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    if (this.angle === \"random\") {\n      particle.data.cangle = MathUtil.randomAToB(-MathUtil.PI, MathUtil.PI);\n    } else if (this.angle === \"span\") {\n      particle.data.cangle = this.span.getValue();\n    }\n\n    particle.data.cyclone = new Vector2D(0, 0);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Cyclone\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    let length;\n    let gradient = particle.v.getGradient();\n    if (this.angle === \"random\" || this.angle === \"span\") {\n      gradient += particle.data.cangle;\n    } else {\n      gradient += this.angle;\n    }\n\n    if (this.force === CHANGING) {\n      length = particle.v.length() / 100;\n    } else {\n      length = this.force;\n    }\n\n    particle.data.cyclone.x = length * Math.cos(gradient);\n    particle.data.cyclone.y = length * Math.sin(gradient);\n    particle.data.cyclone = this.normalizeForce(particle.data.cyclone);\n    particle.a.add(particle.data.cyclone);\n  }\n}\n","import Attraction from \"./Attraction\";\n\nexport default class Repulsion extends Attraction {\n  /**\n   * The oppisite of Proton.Attraction - turns the force\n   *\n   * @memberof! Proton#\n   * @augments Proton#Proton.Attraction\n   * @constructor\n   * @alias Proton.Repulsion\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {Number} force\n   * @property {String} name The Behaviour name\n   */\n  constructor(targetPosition, force, radius, life, easing) {\n    super(targetPosition, force, radius, life, easing);\n\n    this.force *= -1;\n    this.name = \"Repulsion\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Repulsion\n   * @instance\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(targetPosition, force, radius, life, easing) {\n    super.reset(targetPosition, force, radius, life, easing);\n    this.force *= -1;\n  }\n}\n","import Util from \"../utils/Util\";\nimport Vector2D from \"../math/Vector2D\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class GravityWell extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Behaviour\n   * @constructor\n   * @alias GravityWell\n   *\n   * @param {Vector2D} [centerPoint=new Vector2D] The point in the center\n   * @param {Number} [force=100]\t\t\t\t\tThe force\n   * @param {Number} [life=Infinity]\t\t\t\tthis behaviour's life\n   * @param {String} [easing=easeLinear]\tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(centerPoint, force, life, easing) {\n    super(life, easing);\n\n    this.distanceVec = new Vector2D();\n    this.centerPoint = Util.initValue(centerPoint, new Vector2D());\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    this.name = \"GravityWell\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#GravityWell\n   * @instance\n   *\n   * @param {Vector2D} [centerPoint=new Vector2D] The point in the center\n   * @param {Number} [force=100]\t\t\t\t\tThe force\n   * @param {Number} [life=Infinity]\t\t\t\tthis behaviour's life\n   * @param {String} [easing=easeLinear]\tthis behaviour's easing\n   */\n  reset(centerPoint, force, life, easing) {\n    this.distanceVec = new Vector2D();\n    this.centerPoint = Util.initValue(centerPoint, new Vector2D());\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * @inheritdoc\n   */\n  initialize(particle) {}\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#GravityWell\n   * @instance\n   *\n   * @param {Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.distanceVec.set(this.centerPoint.x - particle.p.x, this.centerPoint.y - particle.p.y);\n    const distanceSq = this.distanceVec.lengthSq();\n\n    if (distanceSq !== 0) {\n      const distance = this.distanceVec.length();\n      const factor = (this.force * time) / (distanceSq * distance);\n\n      particle.v.x += factor * this.distanceVec.x;\n      particle.v.y += factor * this.distanceVec.y;\n    }\n  }\n}\n","import PropUtil from \"../utils/PropUtil\";\nimport Initialize from \"./Initialize\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default {\n  initialize(emitter, particle, initializes) {\n    const length = initializes.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      if (initializes[i] instanceof Initialize) {\n        initializes[i].init(emitter, particle);\n      } else {\n        this.init(emitter, particle, initializes[i]);\n      }\n    }\n\n    this.bindEmitter(emitter, particle);\n  },\n\n  // init\n  init(emitter, particle, initialize) {\n    PropUtil.setProp(particle, initialize);\n    PropUtil.setVectorVal(particle, initialize);\n  },\n\n  bindEmitter(emitter, particle) {\n    if (emitter.bindEmitter) {\n      particle.p.add(emitter.p);\n      particle.v.add(emitter.v);\n      particle.a.add(emitter.a);\n\n      particle.v.rotate(MathUtil.degreeTransform(emitter.rotation));\n    }\n  }\n};\n","import Util from \"../utils/Util\";\nimport Puid from \"../utils/Puid\";\nimport Particle from \"../core/Particle\";\nimport EventDispatcher from \"../events/EventDispatcher\";\n\nimport Rate from \"../initialize/Rate\";\nimport InitializeUtil from \"../initialize/InitializeUtil\";\n\nexport default class Emitter extends Particle {\n  /**\n   * You can use this emit particles.\n   *\n   * It will dispatch follow events:\n   * PARTICLE_CREATED\n   * PARTICLE_UPDATA\n   * PARTICLE_DEAD\n   *\n   * @class Emitter\n   * @constructor\n   * @param {Object} conf the parameters object;\n   * for example {damping:0.01,bindEmitter:false}\n   */\n  constructor(conf = {}) {\n    super(conf);\n\n    this.particles = [];\n    this.behaviours = [];\n    this.initializes = [];\n\n    this.emitTime = 0;\n    this.emitSpeed = 0;\n    this.totalTime = -1;\n\n    /**\n     * The friction coefficient for all particle emit by This;\n     * @property damping\n     * @type {Number}\n     * @default 0.006\n     */\n    this.damping = 0.006;\n\n    /**\n     * If bindEmitter the particles can bind this emitter's property;\n     * @property bindEmitter\n     * @type {Boolean}\n     * @default true\n     */\n    this.bindEmitter = true;\n\n    /**\n     * The number of particles per second emit (a [particle]/b [s]);\n     * @property rate\n     * @type {Rate}\n     * @default Rate(1, .1)\n     */\n    this.rate = new Rate(1, 0.1);\n\n    this.name = \"Emitter\";\n    this.id = Puid.id(this.name);\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   * @param {Number} emitTime begin emit time;\n   * @param {String} life the life of this emitter\n   */\n  emit(totalTime, life) {\n    this.stoped = false;\n    this.emitTime = 0;\n    this.totalTime = Util.initValue(totalTime, Infinity);\n\n    if (life === true || life === \"life\" || life === \"destroy\") {\n      this.life = totalTime === \"once\" ? 1 : this.totalTime;\n    } else if (!isNaN(life)) {\n      this.life = life;\n    }\n\n    this.rate.init();\n  }\n\n  /**\n   * stop emiting\n   * @method stop\n   */\n  stop() {\n    this.totalTime = -1;\n    this.emitTime = 0;\n    this.stoped = true;\n  }\n\n  preEmit(time) {\n    let oldStoped = this.stoped;\n    let oldEmitTime = this.emitTime;\n    let oldTotalTime = this.totalTime;\n\n    this.stoped = false;\n    this.emitTime = 0;\n    this.totalTime = time;\n    this.rate.init();\n\n    const step = 0.0167;\n    while (time > step) {\n      time -= step;\n      this.update(step);\n    }\n\n    this.stoped = oldStoped;\n    this.emitTime = oldEmitTime + Math.max(time, 0);\n    this.totalTime = oldTotalTime;\n  }\n\n  /**\n   * remove current all particles\n   * @method removeAllParticles\n   */\n  removeAllParticles() {\n    let i = this.particles.length;\n    while (i--) this.particles[i].dead = true;\n  }\n\n  /**\n   * add initialize to this emitter\n   * @method addSelfInitialize\n   */\n  addSelfInitialize(initialize) {\n    if (initialize[\"init\"]) {\n      initialize.init(this);\n    } else {\n      this.initAll();\n    }\n  }\n\n  /**\n   * add the Initialize to particles;\n   *\n   * you can use initializes array:for example emitter.addInitialize(initialize1,initialize2,initialize3);\n   * @method addInitialize\n   * @param {Initialize} initialize like this new Radius(1, 12)\n   */\n  addInitialize(...rest) {\n    let i = rest.length;\n    while (i--) this.initializes.push(rest[i]);\n  }\n\n  /**\n   * remove the Initialize\n   * @method removeInitialize\n   * @param {Initialize} initialize a initialize\n   */\n  removeInitialize(initializer) {\n    const index = this.initializes.indexOf(initializer);\n    if (index > -1) this.initializes.splice(index, 1);\n  }\n\n  /**\n   * remove all Initializes\n   * @method removeInitializers\n   */\n  removeAllInitializers() {\n    Util.emptyArray(this.initializes);\n  }\n\n  /**\n   * add the Behaviour to particles;\n   *\n   * you can use Behaviours array:emitter.addBehaviour(Behaviour1,Behaviour2,Behaviour3);\n   * @method addBehaviour\n   * @param {Behaviour} behaviour like this new Color('random')\n   */\n  addBehaviour(...rest) {\n    let i = arguments.length;\n    while (i--) {\n      let behaviour = rest[i];\n      this.behaviours.push(behaviour);\n      if (behaviour.parents) behaviour.parents.push(this);\n    }\n  }\n\n  /**\n   * remove the Behaviour\n   * @method removeBehaviour\n   * @param {Behaviour} behaviour a behaviour\n   */\n  removeBehaviour(behaviour) {\n    let index = this.behaviours.indexOf(behaviour);\n    this.behaviours.splice(index, 1);\n\n    if (behaviour.parents) {\n      index = behaviour.parents.indexOf(behaviour);\n      behaviour.parents.splice(index, 1);\n    }\n\n    return index;\n  }\n\n  /**\n   * remove all behaviours\n   * @method removeAllBehaviours\n   */\n  removeAllBehaviours() {\n    Util.emptyArray(this.behaviours);\n  }\n\n  // emitter update\n  update(time) {\n    this.age += time;\n    if (this.age >= this.life || this.dead) this.destroy();\n\n    this.emitting(time);\n    this.integrate(time);\n  }\n\n  integrate(time) {\n    if (!this.parent) return;\n\n    const damping = 1 - this.damping;\n    this.parent.integrator.calculate(this, time, damping);\n\n    const length = this.particles.length;\n    let i, particle;\n\n    for (i = length - 1; i >= 0; i--) {\n      particle = this.particles[i];\n\n      // particle update\n      particle.update(time, i);\n      this.parent.integrator.calculate(particle, time, damping);\n      this.dispatch(\"PARTICLE_UPDATE\", particle);\n\n      // check dead\n      if (particle.dead) {\n        this.dispatch(\"PARTICLE_DEAD\", particle);\n\n        this.parent.pool.expire(particle);\n        this.particles.splice(i, 1);\n      }\n    }\n  }\n\n  dispatch(event, target) {\n    this.parent && this.parent.dispatchEvent(event, target);\n    this.bindEvent && this.dispatchEvent(event, target);\n  }\n\n  emitting(time) {\n    if (this.totalTime === \"once\") {\n      let i;\n      const length = this.rate.getValue(99999);\n\n      if (length > 0) this.emitSpeed = length;\n      for (i = 0; i < length; i++) this.createParticle();\n      this.totalTime = \"none\";\n    } else {\n      this.emitTime += time;\n\n      if (this.emitTime < this.totalTime) {\n        const length = this.rate.getValue(time);\n        let i;\n\n        if (length > 0) this.emitSpeed = length;\n        for (i = 0; i < length; i++) this.createParticle();\n      }\n    }\n  }\n\n  /**\n   * create single particle;\n   *\n   * can use emit({x:10},new Gravity(10),{'particleUpdate',fun}) or emit([{x:10},new Initialize],new Gravity(10),{'particleUpdate',fun})\n   * @method removeAllParticles\n   */\n  createParticle(initialize, behaviour) {\n    const particle = this.parent.pool.get(Particle);\n    this.setupParticle(particle, initialize, behaviour);\n    this.dispatch(\"PARTICLE_CREATED\", particle);\n\n    return particle;\n  }\n\n  setupParticle(particle, initialize, behaviour) {\n    let initializes = this.initializes;\n    let behaviours = this.behaviours;\n\n    if (initialize) initializes = Util.toArray(initialize);\n    if (behaviour) behaviours = Util.toArray(behaviour);\n\n    particle.reset();\n    InitializeUtil.initialize(this, particle, initializes);\n    particle.addBehaviours(behaviours);\n    particle.parent = this;\n\n    this.particles.push(particle);\n  }\n\n  remove() {\n    this.stop();\n    Util.destroyAll(this.particles);\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    this.dead = true;\n    this.remove();\n    this.removeAllInitializers();\n    this.removeAllBehaviours();\n    this.parent && this.parent.removeEmitter(this);\n\n    this.rate = null;\n    this.old = null;\n    this.rgb = null;\n    this.v = null;\n    this.a = null;\n    this.p = null;\n  }\n}\n\nEventDispatcher.bind(Emitter);\n","import Types from \"../utils/Types\";\nimport ColorUtil from \"../utils/ColorUtil\";\nimport MathUtil from \"../math/MathUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nlet PIXIClass;\nexport default class PixiRenderer extends BaseRenderer {\n  constructor(element, stroke) {\n    super(element);\n\n    this.stroke = stroke;\n    this.color = false;\n    this.setColor = false;\n    this.blendMode = null;\n    this.pool.create = (body, particle) => this.createBody(body, particle);\n    this.setPIXI(window.PIXI);\n\n    this.name = \"PixiRenderer\";\n  }\n\n  setPIXI(PIXI) {\n    try {\n      PIXIClass = PIXI || { Sprite: {} };\n      this.createFromImage = PIXIClass.Sprite.from || PIXIClass.Sprite.fromImage;\n    } catch (e) {}\n  }\n\n  onProtonUpdate() {}\n\n  /**\n   * @param particle\n   */\n  onParticleCreated(particle) {\n    if (particle.body) {\n      particle.body = this.pool.get(particle.body, particle);\n    } else {\n      particle.body = this.pool.get(this.circleConf, particle);\n    }\n\n    if (this.blendMode) {\n      particle.body.blendMode = this.blendMode;\n    }\n\n    this.element.addChild(particle.body);\n  }\n\n  /**\n   * @param particle\n   */\n  onParticleUpdate(particle) {\n    this.transform(particle, particle.body);\n\n    if (this.setColor === true || this.color === true) {\n      particle.body.tint = ColorUtil.getHex16FromParticle(particle);\n    }\n  }\n\n  /**\n   * @param particle\n   */\n  onParticleDead(particle) {\n    this.element.removeChild(particle.body);\n    this.pool.expire(particle.body);\n    particle.body = null;\n  }\n\n  transform(particle, target) {\n    target.x = particle.p.x;\n    target.y = particle.p.y;\n\n    target.alpha = particle.alpha;\n\n    target.scale.x = particle.scale;\n    target.scale.y = particle.scale;\n\n    // using cached version of MathUtil.PI_180 for slight performance increase.\n    target.rotation = particle.rotation * MathUtil.PI_180; // MathUtil.PI_180;\n  }\n\n  createBody(body, particle) {\n    if (body.isCircle) return this.createCircle(particle);\n    else return this.createSprite(body);\n  }\n\n  createSprite(body) {\n    const sprite = body.isInner ? this.createFromImage(body.src) : new PIXIClass.Sprite(body);\n\n    sprite.anchor.x = 0.5;\n    sprite.anchor.y = 0.5;\n\n    return sprite;\n  }\n\n  createCircle(particle) {\n    const graphics = new PIXIClass.Graphics();\n\n    if (this.stroke) {\n      const stroke = Types.isString(this.stroke) ? this.stroke : 0x000000;\n      graphics.beginStroke(stroke);\n    }\n\n    graphics.beginFill(particle.color || 0x008ced);\n    graphics.drawCircle(0, 0, particle.radius);\n    graphics.endFill();\n\n    return graphics;\n  }\n\n  destroy(particles) {\n    super.destroy();\n\n    let i = particles.length;\n    while (i--) {\n      let particle = particles[i];\n      if (particle.body) {\n        this.element.removeChild(particle.body);\n      }\n    }\n  }\n}\n","import Emitter from \"./Emitter\";\n\nexport default class BehaviourEmitter extends Emitter {\n  /**\n   * The BehaviourEmitter class inherits from Proton.Emitter\n   *\n   * use the BehaviourEmitter you can add behaviours to self;\n   * @class Proton.BehaviourEmitter\n   * @constructor\n   * @param {Object} conf the parameters object;\n   */\n  constructor(conf) {\n    super(conf);\n\n    this.selfBehaviours = [];\n  }\n\n  /**\n   * add the Behaviour to emitter;\n   *\n   * you can use Behaviours array:emitter.addSelfBehaviour(Behaviour1,Behaviour2,Behaviour3);\n   * @method addSelfBehaviour\n   * @param {Proton.Behaviour} behaviour like this new Proton.Color('random')\n   */\n  addSelfBehaviour(...rest) {\n    let i,\n      length = rest.length;\n\n    for (i = 0; i < length; i++) {\n      let behaviour = rest[i];\n      this.selfBehaviours.push(behaviour);\n      behaviour.initialize(this);\n    }\n  }\n\n  /**\n   * remove the Behaviour for self\n   * @method removeSelfBehaviour\n   * @param {Proton.Behaviour} behaviour a behaviour\n   */\n  removeSelfBehaviour(behaviour) {\n    const index = this.selfBehaviours.indexOf(behaviour);\n    if (index > -1) this.selfBehaviours.splice(index, 1);\n  }\n\n  update(time) {\n    super.update(time);\n\n    if (!this.sleep) {\n      const length = this.selfBehaviours.length;\n      let i;\n\n      for (i = 0; i < length; i++) {\n        this.selfBehaviours[i].applyBehaviour(this, time, i);\n      }\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport Emitter from \"./Emitter\";\n\nexport default class FollowEmitter extends Emitter {\n  /**\n   * The FollowEmitter class inherits from Proton.Emitter\n   *\n   * use the FollowEmitter will emit particle when mousemoving\n   *\n   * @class Proton.FollowEmitter\n   * @constructor\n   * @param {Element} mouseTarget mouseevent's target;\n   * @param {Number} ease the easing of following speed;\n   * @default 0.7\n   * @param {Object} conf the parameters object;\n   */\n  constructor(mouseTarget, ease, conf) {\n    super(conf);\n\n    this.mouseTarget = Util.initValue(mouseTarget, window);\n    this.ease = Util.initValue(ease, 0.7);\n\n    this._allowEmitting = false;\n    this.initEventHandler();\n  }\n\n  initEventHandler() {\n    this.mousemoveHandler = e => this.mousemove.call(this, e);\n    this.mousedownHandler = e => this.mousedown.call(this, e);\n    this.mouseupHandler = e => this.mouseup.call(this, e);\n    this.mouseTarget.addEventListener(\"mousemove\", this.mousemoveHandler, false);\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   */\n  emit() {\n    this._allowEmitting = true;\n  }\n\n  /**\n   * stop emiting\n   * @method stop\n   */\n  stop() {\n    this._allowEmitting = false;\n  }\n\n  mousemove(e) {\n    if (e.layerX || e.layerX === 0) {\n      this.p.x += (e.layerX - this.p.x) * this.ease;\n      this.p.y += (e.layerY - this.p.y) * this.ease;\n    } else if (e.offsetX || e.offsetX === 0) {\n      this.p.x += (e.offsetX - this.p.x) * this.ease;\n      this.p.y += (e.offsetY - this.p.y) * this.ease;\n    }\n\n    if (this._allowEmitting) super.emit(\"once\");\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    super.destroy();\n    this.mouseTarget.removeEventListener(\"mousemove\", this.mousemoveHandler, false);\n  }\n}\n","export default {\n  /**\n   * Determine whether it is a picture object\n   *\n   * @return {boolean} is or no\n   */\n  isImage(obj) {\n    if (!obj) return false;\n\n    const tagName = `${obj.tagName}`.toUpperCase();\n    const nodeName = `${obj.nodeName}`.toUpperCase();\n    if (nodeName === \"IMG\" || tagName === \"IMG\") return true;\n    return false;\n  },\n\n  /**\n   * Determine whether it is a string object\n   *\n   * @return {boolean} is or no\n   */\n  isString(obj) {\n    return typeof obj === \"string\";\n  }\n};\n","import Pool from \"../core/Pool\";\n\nexport default class BaseRenderer {\n  constructor(element, stroke) {\n    this.pool = new Pool();\n    this.element = element;\n    this.stroke = stroke;\n    this.circleConf = { isCircle: true };\n\n    this.initEventHandler();\n    this.name = \"BaseRenderer\";\n  }\n\n  setStroke(color = \"#000000\", thinkness = 1) {\n    this.stroke = { color, thinkness };\n  }\n\n  initEventHandler() {\n    this._protonUpdateHandler = () => {\n      this.onProtonUpdate.call(this);\n    };\n\n    this._protonUpdateAfterHandler = () => {\n      this.onProtonUpdateAfter.call(this);\n    };\n\n    this._emitterAddedHandler = emitter => {\n      this.onEmitterAdded.call(this, emitter);\n    };\n\n    this._emitterRemovedHandler = emitter => {\n      this.onEmitterRemoved.call(this, emitter);\n    };\n\n    this._particleCreatedHandler = particle => {\n      this.onParticleCreated.call(this, particle);\n    };\n\n    this._particleUpdateHandler = particle => {\n      this.onParticleUpdate.call(this, particle);\n    };\n\n    this._particleDeadHandler = particle => {\n      this.onParticleDead.call(this, particle);\n    };\n  }\n\n  init(proton) {\n    this.parent = proton;\n\n    proton.addEventListener(\"PROTON_UPDATE\", this._protonUpdateHandler);\n    proton.addEventListener(\"PROTON_UPDATE_AFTER\", this._protonUpdateAfterHandler);\n\n    proton.addEventListener(\"EMITTER_ADDED\", this._emitterAddedHandler);\n    proton.addEventListener(\"EMITTER_REMOVED\", this._emitterRemovedHandler);\n\n    proton.addEventListener(\"PARTICLE_CREATED\", this._particleCreatedHandler);\n    proton.addEventListener(\"PARTICLE_UPDATE\", this._particleUpdateHandler);\n    proton.addEventListener(\"PARTICLE_DEAD\", this._particleDeadHandler);\n  }\n\n  resize(width, height) {}\n\n  destroy() {\n    this.remove();\n    this.pool.destroy();\n    this.pool = null;\n    this.element = null;\n    this.stroke = null;\n  }\n\n  remove(proton) {\n    this.parent.removeEventListener(\"PROTON_UPDATE\", this._protonUpdateHandler);\n    this.parent.removeEventListener(\"PROTON_UPDATE_AFTER\", this._protonUpdateAfterHandler);\n\n    this.parent.removeEventListener(\"EMITTER_ADDED\", this._emitterAddedHandler);\n    this.parent.removeEventListener(\"EMITTER_REMOVED\", this._emitterRemovedHandler);\n\n    this.parent.removeEventListener(\"PARTICLE_CREATED\", this._particleCreatedHandler);\n    this.parent.removeEventListener(\"PARTICLE_UPDATE\", this._particleUpdateHandler);\n    this.parent.removeEventListener(\"PARTICLE_DEAD\", this._particleDeadHandler);\n\n    this.parent = null;\n  }\n\n  onProtonUpdate() {}\n  onProtonUpdateAfter() {}\n\n  onEmitterAdded(emitter) {}\n  onEmitterRemoved(emitter) {}\n\n  onParticleCreated(particle) {}\n  onParticleUpdate(particle) {}\n  onParticleDead(particle) {}\n}\n","import Types from \"../utils/Types\";\nimport ImgUtil from \"../utils/ImgUtil\";\nimport ColorUtil from \"../utils/ColorUtil\";\nimport MathUtil from \"../math/MathUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class CanvasRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.stroke = null;\n    this.context = this.element.getContext(\"2d\");\n    this.bufferCache = {};\n    this.name = \"CanvasRenderer\";\n  }\n\n  resize(width, height) {\n    this.element.width = width;\n    this.element.height = height;\n  }\n\n  onProtonUpdate() {\n    this.context.clearRect(0, 0, this.element.width, this.element.height);\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n    } else {\n      particle.color = particle.color || \"#ff0000\";\n    }\n  }\n\n  onParticleUpdate(particle) {\n    if (particle.body) {\n      if (Types.isImage(particle.body)) {\n        this.drawImage(particle);\n      }\n    } else {\n      this.drawCircle(particle);\n    }\n  }\n\n  onParticleDead(particle) {\n    particle.body = null;\n  }\n\n  // private method\n  addImg2Body(img, particle) {\n    particle.body = img;\n  }\n\n  // private drawImage method\n  drawImage(particle) {\n    const w = (particle.body.width * particle.scale) | 0;\n    const h = (particle.body.height * particle.scale) | 0;\n    const x = particle.p.x - w / 2;\n    const y = particle.p.y - h / 2;\n\n    if (!!particle.color) {\n      if (!particle.data[\"buffer\"]) particle.data.buffer = this.createBuffer(particle.body);\n\n      const bufContext = particle.data.buffer.getContext(\"2d\");\n      bufContext.clearRect(0, 0, particle.data.buffer.width, particle.data.buffer.height);\n      bufContext.globalAlpha = particle.alpha;\n      bufContext.drawImage(particle.body, 0, 0);\n\n      bufContext.globalCompositeOperation = \"source-atop\";\n      bufContext.fillStyle = ColorUtil.rgbToHex(particle.rgb);\n      bufContext.fillRect(0, 0, particle.data.buffer.width, particle.data.buffer.height);\n      bufContext.globalCompositeOperation = \"source-over\";\n      bufContext.globalAlpha = 1;\n\n      this.context.drawImage(\n        particle.data.buffer,\n        0,\n        0,\n        particle.data.buffer.width,\n        particle.data.buffer.height,\n        x,\n        y,\n        w,\n        h\n      );\n    } else {\n      this.context.save();\n\n      this.context.globalAlpha = particle.alpha;\n      this.context.translate(particle.p.x, particle.p.y);\n      this.context.rotate(MathUtil.degreeTransform(particle.rotation));\n      this.context.translate(-particle.p.x, -particle.p.y);\n      this.context.drawImage(particle.body, 0, 0, particle.body.width, particle.body.height, x, y, w, h);\n\n      this.context.globalAlpha = 1;\n      this.context.restore();\n    }\n  }\n\n  // private drawCircle --\n  drawCircle(particle) {\n    if (particle.rgb) {\n      this.context.fillStyle = `rgba(${particle.rgb.r},${particle.rgb.g},${particle.rgb.b},${particle.alpha})`;\n    } else {\n      this.context.fillStyle = particle.color;\n    }\n\n    // draw circle\n    this.context.beginPath();\n    this.context.arc(particle.p.x, particle.p.y, particle.radius, 0, Math.PI * 2, true);\n\n    if (this.stroke) {\n      this.context.strokeStyle = this.stroke.color;\n      this.context.lineWidth = this.stroke.thinkness;\n      this.context.stroke();\n    }\n\n    this.context.closePath();\n    this.context.fill();\n  }\n\n  // private createBuffer\n  createBuffer(image) {\n    if (Types.isImage(image)) {\n      const size = image.width + \"_\" + image.height;\n      let canvas = this.bufferCache[size];\n\n      if (!canvas) {\n        canvas = document.createElement(\"canvas\");\n        canvas.width = image.width;\n        canvas.height = image.height;\n        this.bufferCache[size] = canvas;\n      }\n\n      return canvas;\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    this.stroke = null;\n    this.context = null;\n    this.bufferCache = null;\n  }\n}\n","import DomUtil from \"../utils/DomUtil\";\nimport ImgUtil from \"../utils/ImgUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class DomRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.stroke = null;\n    this.transform3d = false;\n    this.pool.create = (body, particle) => this.createBody(body, particle);\n    this.addImg2Body = this.addImg2Body.bind(this);\n\n    this.name = \"DomRenderer\";\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n    } else {\n      particle.body = this.pool.get(this.circleConf, particle);\n      this.element.appendChild(particle.body);\n    }\n  }\n\n  onParticleUpdate(particle) {\n    if (this.bodyReady(particle)) {\n      if (this.transform3d) {\n        DomUtil.transform3d(particle.body, particle.p.x, particle.p.y, particle.scale, particle.rotation);\n      } else {\n        DomUtil.transform(particle.body, particle.p.x, particle.p.y, particle.scale, particle.rotation);\n      }\n\n      particle.body.style.opacity = particle.alpha;\n\n      if (particle.body.isCircle) {\n        particle.body.style.backgroundColor = particle.color || \"#ff0000\";\n      }\n    }\n  }\n\n  onParticleDead(particle) {\n    if (this.bodyReady(particle)) {\n      this.element.removeChild(particle.body);\n      this.pool.expire(particle.body);\n      particle.body = null;\n    }\n  }\n\n  bodyReady(particle) {\n    return typeof particle.body === \"object\" && particle.body && !particle.body.isInner;\n  }\n\n  // private method\n  addImg2Body(img, particle) {\n    if (particle.dead) return;\n    particle.body = this.pool.get(img, particle);\n    DomUtil.resize(particle.body, img.width, img.height);\n\n    this.element.appendChild(particle.body);\n  }\n\n  createBody(body, particle) {\n    if (body.isCircle) return this.createCircle(particle);\n    return this.createSprite(body, particle);\n  }\n\n  // private methods\n  createCircle(particle) {\n    const dom = DomUtil.createDiv(`${particle.id}_dom`, 2 * particle.radius, 2 * particle.radius);\n    dom.style.borderRadius = `${particle.radius}px`;\n\n    if (this.stroke) {\n      dom.style.borderColor = this.stroke.color;\n      dom.style.borderWidth = `${this.stroke.thinkness}px`;\n    }\n    dom.isCircle = true;\n\n    return dom;\n  }\n\n  createSprite(body, particle) {\n    const url = typeof body === \"string\" ? body : body.src;\n    const dom = DomUtil.createDiv(`${particle.id}_dom`, body.width, body.height);\n    dom.style.backgroundImage = `url(${url})`;\n\n    return dom;\n  }\n\n  destroy() {\n    super.destroy();\n    this.stroke = null;\n  }\n}\n","import Types from \"../utils/Types\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class EaselRenderer extends BaseRenderer {\n  constructor(element, stroke) {\n    super(element);\n\n    this.stroke = stroke;\n    this.name = \"EaselRenderer\";\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      this.createSprite(particle);\n    } else {\n      this.createCircle(particle);\n    }\n\n    this.element.addChild(particle.body);\n  }\n\n  onParticleUpdate(particle) {\n    if (particle.body) {\n      particle.body.x = particle.p.x;\n      particle.body.y = particle.p.y;\n\n      particle.body.alpha = particle.alpha;\n      particle.body.scaleX = particle.body.scaleY = particle.scale;\n      particle.body.rotation = particle.rotation;\n    }\n  }\n\n  onParticleDead(particle) {\n    if (particle.body) {\n      particle.body.parent && particle.body.parent.removeChild(particle.body);\n      this.pool.expire(particle.body);\n      particle.body = null;\n    }\n\n    if (particle.graphics) this.pool.expire(particle.graphics);\n  }\n\n  // private\n  createSprite(particle) {\n    particle.body = this.pool.get(particle.body);\n\n    if (particle.body.parent) return;\n    if (particle.body[\"image\"]) {\n      particle.body.regX = particle.body.image.width / 2;\n      particle.body.regY = particle.body.image.height / 2;\n    }\n  }\n\n  createCircle(particle) {\n    const graphics = this.pool.get(createjs.Graphics);\n\n    if (this.stroke) {\n      if (Types.isString(this.stroke)) {\n        graphics.beginStroke(this.stroke);\n      } else {\n        graphics.beginStroke(\"#000000\");\n      }\n    }\n    graphics.beginFill(particle.color || \"#ff0000\").drawCircle(0, 0, particle.radius);\n    const shape = this.pool.get(createjs.Shape, [graphics]);\n\n    particle.body = shape;\n    particle.graphics = graphics;\n  }\n\n  destroy() {\n    super.destroy();\n    this.stroke = null;\n  }\n}\n","import Rectangle from \"../math/Rectangle\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class PixelRenderer extends BaseRenderer {\n  constructor(element, rectangle) {\n    super(element);\n\n    this.context = this.element.getContext(\"2d\");\n    this.imageData = null;\n    this.rectangle = rectangle;\n    this.createImageData(rectangle);\n\n    this.name = \"PixelRenderer\";\n  }\n\n  resize(width, height) {\n    this.element.width = width;\n    this.element.height = height;\n  }\n\n  createImageData(rectangle) {\n    this.rectangle = rectangle ? rectangle : new Rectangle(0, 0, this.element.width, this.element.height);\n    this.imageData = this.context.createImageData(this.rectangle.width, this.rectangle.height);\n    this.context.putImageData(this.imageData, this.rectangle.x, this.rectangle.y);\n  }\n\n  onProtonUpdate() {\n    this.context.clearRect(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n    this.imageData = this.context.getImageData(\n      this.rectangle.x,\n      this.rectangle.y,\n      this.rectangle.width,\n      this.rectangle.height\n    );\n  }\n\n  onProtonUpdateAfter() {\n    this.context.putImageData(this.imageData, this.rectangle.x, this.rectangle.y);\n  }\n\n  onParticleCreated(particle) {}\n\n  onParticleUpdate(particle) {\n    if (this.imageData) {\n      this.setPixel(\n        this.imageData,\n        (particle.p.x - this.rectangle.x) >> 0,\n        (particle.p.y - this.rectangle.y) >> 0,\n        particle\n      );\n    }\n  }\n\n  setPixel(imagedata, x, y, particle) {\n    const rgb = particle.rgb;\n    if (x < 0 || x > this.element.width || y < 0 || y > this.elementwidth) return;\n\n    const i = ((y >> 0) * imagedata.width + (x >> 0)) * 4;\n    imagedata.data[i] = rgb.r;\n    imagedata.data[i + 1] = rgb.g;\n    imagedata.data[i + 2] = rgb.b;\n    imagedata.data[i + 3] = particle.alpha * 255;\n  }\n\n  onParticleDead(particle) {}\n\n  destroy() {\n    super.destroy();\n    this.stroke = null;\n    this.context = null;\n    this.imageData = null;\n    this.rectangle = null;\n  }\n}\n","import Mat3 from \"../math/Mat3\";\n\nexport default class MStack {\n  constructor() {\n    this.mats = [];\n    this.size = 0;\n\n    for (let i = 0; i < 20; i++) this.mats.push(Mat3.create([0, 0, 0, 0, 0, 0, 0, 0, 0]));\n  }\n\n  set(m, i) {\n    if (i === 0) Mat3.set(m, this.mats[0]);\n    else Mat3.multiply(this.mats[i - 1], m, this.mats[i]);\n\n    this.size = Math.max(this.size, i + 1);\n  }\n\n  push(m) {\n    if (this.size === 0) Mat3.set(m, this.mats[0]);\n    else Mat3.multiply(this.mats[this.size - 1], m, this.mats[this.size]);\n\n    this.size++;\n  }\n\n  pop() {\n    if (this.size > 0) this.size--;\n  }\n\n  top() {\n    return this.mats[this.size - 1];\n  }\n}\n","import Mat3 from \"../math/Mat3\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nimport Util from \"../utils/Util\";\nimport ImgUtil from \"../utils/ImgUtil\";\nimport MStack from \"../utils/MStack\";\nimport DomUtil from \"../utils/DomUtil\";\nimport WebGLUtil from \"../utils/WebGLUtil\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class WebGLRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.gl = this.element.getContext(\"experimental-webgl\", { antialias: true, stencil: false, depth: false });\n    if (!this.gl) alert(\"Sorry your browser do not suppest WebGL!\");\n\n    this.initVar();\n    this.setMaxRadius();\n    this.initShaders();\n    this.initBuffers();\n\n    this.gl.blendEquation(this.gl.FUNC_ADD);\n    this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n    this.gl.enable(this.gl.BLEND);\n    this.addImg2Body = this.addImg2Body.bind(this);\n\n    this.name = \"WebGLRenderer\";\n  }\n\n  init(proton) {\n    super.init(proton);\n    this.resize(this.element.width, this.element.height);\n  }\n\n  resize(width, height) {\n    this.umat[4] = -2;\n    this.umat[7] = 1;\n\n    this.smat[0] = 1 / width;\n    this.smat[4] = 1 / height;\n\n    this.mstack.set(this.umat, 0);\n    this.mstack.set(this.smat, 1);\n\n    this.gl.viewport(0, 0, width, height);\n    this.element.width = width;\n    this.element.height = height;\n  }\n\n  setMaxRadius(radius) {\n    this.circleCanvasURL = this.createCircle(radius);\n  }\n\n  getVertexShader() {\n    const vsSource = [\n      \"uniform vec2 viewport;\",\n      \"attribute vec2 aVertexPosition;\",\n      \"attribute vec2 aTextureCoord;\",\n      \"uniform mat3 tMat;\",\n      \"varying vec2 vTextureCoord;\",\n      \"varying float alpha;\",\n      \"void main() {\",\n      \"vec3 v = tMat * vec3(aVertexPosition, 1.0);\",\n      \"gl_Position = vec4(v.x, v.y, 0, 1);\",\n      \"vTextureCoord = aTextureCoord;\",\n      \"alpha = tMat[0][2];\",\n      \"}\"\n    ].join(\"\\n\");\n    return vsSource;\n  }\n\n  getFragmentShader() {\n    const fsSource = [\n      \"precision mediump float;\",\n      \"varying vec2 vTextureCoord;\",\n      \"varying float alpha;\",\n      \"uniform sampler2D uSampler;\",\n      \"uniform vec4 color;\",\n      \"uniform bool useTexture;\",\n      \"uniform vec3 uColor;\",\n      \"void main() {\",\n      \"vec4 textureColor = texture2D(uSampler, vTextureCoord);\",\n      \"gl_FragColor = textureColor * vec4(uColor, 1.0);\",\n      \"gl_FragColor.w *= alpha;\",\n      \"}\"\n    ].join(\"\\n\");\n    return fsSource;\n  }\n\n  initVar() {\n    this.mstack = new MStack();\n    this.umat = Mat3.create([2, 0, 1, 0, -2, 0, -1, 1, 1]);\n    this.smat = Mat3.create([1 / 100, 0, 1, 0, 1 / 100, 0, 0, 0, 1]);\n    this.texturebuffers = {};\n  }\n\n  blendEquation(A) {\n    this.gl.blendEquation(this.gl[A]);\n  }\n\n  blendFunc(A, B) {\n    this.gl.blendFunc(this.gl[A], this.gl[B]);\n  }\n\n  getShader(gl, str, fs) {\n    const shader = fs ? gl.createShader(gl.FRAGMENT_SHADER) : gl.createShader(gl.VERTEX_SHADER);\n\n    gl.shaderSource(shader, str);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(shader));\n      return null;\n    }\n\n    return shader;\n  }\n\n  initShaders() {\n    const fragmentShader = this.getShader(this.gl, this.getFragmentShader(), true);\n    const vertexShader = this.getShader(this.gl, this.getVertexShader(), false);\n\n    this.sprogram = this.gl.createProgram();\n    this.gl.attachShader(this.sprogram, vertexShader);\n    this.gl.attachShader(this.sprogram, fragmentShader);\n    this.gl.linkProgram(this.sprogram);\n\n    if (!this.gl.getProgramParameter(this.sprogram, this.gl.LINK_STATUS)) alert(\"Could not initialise shaders\");\n\n    this.gl.useProgram(this.sprogram);\n    this.sprogram.vpa = this.gl.getAttribLocation(this.sprogram, \"aVertexPosition\");\n    this.sprogram.tca = this.gl.getAttribLocation(this.sprogram, \"aTextureCoord\");\n    this.gl.enableVertexAttribArray(this.sprogram.tca);\n    this.gl.enableVertexAttribArray(this.sprogram.vpa);\n\n    this.sprogram.tMatUniform = this.gl.getUniformLocation(this.sprogram, \"tMat\");\n    this.sprogram.samplerUniform = this.gl.getUniformLocation(this.sprogram, \"uSampler\");\n    this.sprogram.useTex = this.gl.getUniformLocation(this.sprogram, \"useTexture\");\n    this.sprogram.color = this.gl.getUniformLocation(this.sprogram, \"uColor\");\n    this.gl.uniform1i(this.sprogram.useTex, 1);\n  }\n\n  initBuffers() {\n    const vs = [0, 3, 1, 0, 2, 3];\n    let idx;\n\n    this.unitIBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(vs), this.gl.STATIC_DRAW);\n\n    let i;\n    let ids = [];\n    for (i = 0; i < 100; i++) ids.push(i);\n    idx = new Uint16Array(ids);\n\n    this.unitI33 = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitI33);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW);\n\n    ids = [];\n    for (i = 0; i < 100; i++) ids.push(i, i + 1, i + 2);\n    idx = new Uint16Array(ids);\n\n    this.stripBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.stripBuffer);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW);\n  }\n\n  createCircle(raidus) {\n    this.circleCanvasRadius = WebGLUtil.nhpot(Util.initValue(raidus, 32));\n    const canvas = DomUtil.createCanvas(\"circle_canvas\", this.circleCanvasRadius * 2, this.circleCanvasRadius * 2);\n    const context = canvas.getContext(\"2d\");\n\n    context.beginPath();\n    context.arc(this.circleCanvasRadius, this.circleCanvasRadius, this.circleCanvasRadius, 0, Math.PI * 2, true);\n    context.closePath();\n    context.fillStyle = \"#FFF\";\n    context.fill();\n\n    return canvas.toDataURL();\n  }\n\n  drawImg2Canvas(particle) {\n    const _w = particle.body.width;\n    const _h = particle.body.height;\n\n    const _width = WebGLUtil.nhpot(particle.body.width);\n    const _height = WebGLUtil.nhpot(particle.body.height);\n\n    const _scaleX = particle.body.width / _width;\n    const _scaleY = particle.body.height / _height;\n\n    if (!this.texturebuffers[particle.data.src])\n      this.texturebuffers[particle.data.src] = [\n        this.gl.createTexture(),\n        this.gl.createBuffer(),\n        this.gl.createBuffer()\n      ];\n\n    particle.data.texture = this.texturebuffers[particle.data.src][0];\n    particle.data.vcBuffer = this.texturebuffers[particle.data.src][1];\n    particle.data.tcBuffer = this.texturebuffers[particle.data.src][2];\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.tcBuffer);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      new Float32Array([0.0, 0.0, _scaleX, 0.0, 0.0, _scaleY, _scaleY, _scaleY]),\n      this.gl.STATIC_DRAW\n    );\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.vcBuffer);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      new Float32Array([0.0, 0.0, _w, 0.0, 0.0, _h, _w, _h]),\n      this.gl.STATIC_DRAW\n    );\n\n    const context = particle.data.canvas.getContext(\"2d\");\n    const data = context.getImageData(0, 0, _width, _height);\n\n    this.gl.bindTexture(this.gl.TEXTURE_2D, particle.data.texture);\n    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR_MIPMAP_NEAREST);\n    this.gl.generateMipmap(this.gl.TEXTURE_2D);\n\n    particle.data.textureLoaded = true;\n    particle.data.textureWidth = _w;\n    particle.data.textureHeight = _h;\n  }\n\n  onProtonUpdate() {\n    // this.gl.clearColor(0, 0, 0, 1);\n    // this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n  }\n\n  onParticleCreated(particle) {\n    particle.data.textureLoaded = false;\n    particle.data.tmat = Mat3.create();\n    particle.data.tmat[8] = 1;\n    particle.data.imat = Mat3.create();\n    particle.data.imat[8] = 1;\n\n    if (particle.body) {\n      ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n    } else {\n      ImgUtil.getImgFromCache(this.circleCanvasURL, this.addImg2Body, particle);\n      particle.data.oldScale = particle.radius / this.circleCanvasRadius;\n    }\n  }\n\n  // private\n  addImg2Body(img, particle) {\n    if (particle.dead) return;\n    particle.body = img;\n    particle.data.src = img.src;\n    particle.data.canvas = ImgUtil.getCanvasFromCache(img);\n    particle.data.oldScale = 1;\n\n    this.drawImg2Canvas(particle);\n  }\n\n  onParticleUpdate(particle) {\n    if (particle.data.textureLoaded) {\n      this.updateMatrix(particle);\n\n      this.gl.uniform3f(this.sprogram.color, particle.rgb.r / 255, particle.rgb.g / 255, particle.rgb.b / 255);\n      this.gl.uniformMatrix3fv(this.sprogram.tMatUniform, false, this.mstack.top());\n\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.vcBuffer);\n      this.gl.vertexAttribPointer(this.sprogram.vpa, 2, this.gl.FLOAT, false, 0, 0);\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.tcBuffer);\n      this.gl.vertexAttribPointer(this.sprogram.tca, 2, this.gl.FLOAT, false, 0, 0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, particle.data.texture);\n      this.gl.uniform1i(this.sprogram.samplerUniform, 0);\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer);\n\n      this.gl.drawElements(this.gl.TRIANGLES, 6, this.gl.UNSIGNED_SHORT, 0);\n      this.mstack.pop();\n    }\n  }\n\n  onParticleDead(particle) {}\n\n  updateMatrix(particle) {\n    const moveOriginMatrix = WebGLUtil.makeTranslation(\n      -particle.data.textureWidth / 2,\n      -particle.data.textureHeight / 2\n    );\n    const translationMatrix = WebGLUtil.makeTranslation(particle.p.x, particle.p.y);\n\n    const angel = particle.rotation * MathUtil.PI_180;\n    const rotationMatrix = WebGLUtil.makeRotation(angel);\n\n    const scale = particle.scale * particle.data.oldScale;\n    const scaleMatrix = WebGLUtil.makeScale(scale, scale);\n    let matrix = WebGLUtil.matrixMultiply(moveOriginMatrix, scaleMatrix);\n\n    matrix = WebGLUtil.matrixMultiply(matrix, rotationMatrix);\n    matrix = WebGLUtil.matrixMultiply(matrix, translationMatrix);\n\n    Mat3.inverse(matrix, particle.data.imat);\n    matrix[2] = particle.alpha;\n\n    this.mstack.push(matrix);\n  }\n\n  destroy() {\n    super.destroy();\n    this.gl = null;\n    this.mstack = null;\n    this.umat = null;\n    this.smat = null;\n    this.texturebuffers = null;\n  }\n}\n","import BaseRenderer from \"./BaseRenderer\";\n\nexport default class CustomRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.name = \"CustomRenderer\";\n  }\n}\n","import Zone from \"./Zone\";\nimport Util from \"../utils/Util\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class LineZone extends Zone {\n  constructor(x1, y1, x2, y2, direction) {\n    super();\n\n    if (x2 - x1 >= 0) {\n      this.x1 = x1;\n      this.y1 = y1;\n      this.x2 = x2;\n      this.y2 = y2;\n    } else {\n      this.x1 = x2;\n      this.y1 = y2;\n      this.x2 = x1;\n      this.y2 = y1;\n    }\n\n    this.dx = this.x2 - this.x1;\n    this.dy = this.y2 - this.y1;\n\n    this.minx = Math.min(this.x1, this.x2);\n    this.miny = Math.min(this.y1, this.y2);\n    this.maxx = Math.max(this.x1, this.x2);\n    this.maxy = Math.max(this.y1, this.y2);\n\n    this.dot = this.x2 * this.y1 - this.x1 * this.y2;\n    this.xxyy = this.dx * this.dx + this.dy * this.dy;\n\n    this.gradient = this.getGradient();\n    this.length = this.getLength();\n    this.direction = Util.initValue(direction, \">\");\n  }\n\n  getPosition() {\n    this.random = Math.random();\n    this.vector.x = this.x1 + this.random * this.length * Math.cos(this.gradient);\n    this.vector.y = this.y1 + this.random * this.length * Math.sin(this.gradient);\n\n    return this.vector;\n  }\n\n  getDirection(x, y) {\n    const A = this.dy;\n    const B = -this.dx;\n    const C = this.dot;\n    const D = B === 0 ? 1 : B;\n\n    if ((A * x + B * y + C) * D > 0) return true;\n    else return false;\n  }\n\n  getDistance(x, y) {\n    const A = this.dy;\n    const B = -this.dx;\n    const C = this.dot;\n    const D = A * x + B * y + C;\n\n    return D / Math.sqrt(this.xxyy);\n  }\n\n  getSymmetric(v) {\n    const tha2 = v.getGradient();\n    const tha1 = this.getGradient();\n    const tha = 2 * (tha1 - tha2);\n\n    const oldx = v.x;\n    const oldy = v.y;\n\n    v.x = oldx * Math.cos(tha) - oldy * Math.sin(tha);\n    v.y = oldx * Math.sin(tha) + oldy * Math.cos(tha);\n\n    return v;\n  }\n\n  getGradient() {\n    return Math.atan2(this.dy, this.dx);\n  }\n\n  rangeOut(particle) {\n    const angle = Math.abs(this.getGradient());\n\n    if (angle <= MathUtil.PI / 4) {\n      if (particle.p.x <= this.maxx && particle.p.x >= this.minx) return true;\n    } else {\n      if (particle.p.y <= this.maxy && particle.p.y >= this.miny) return true;\n    }\n\n    return false;\n  }\n\n  getLength() {\n    return Math.sqrt(this.dx * this.dx + this.dy * this.dy);\n  }\n\n  crossing(particle) {\n    if (this.crossType === \"dead\") {\n      if (this.direction === \">\" || this.direction === \"R\" || this.direction === \"right\" || this.direction === \"down\") {\n        if (!this.rangeOut(particle)) return;\n        if (this.getDirection(particle.p.x, particle.p.y)) particle.dead = true;\n      } else {\n        if (!this.rangeOut(particle)) return;\n        if (!this.getDirection(particle.p.x, particle.p.y)) particle.dead = true;\n      }\n    } else if (this.crossType === \"bound\") {\n      if (!this.rangeOut(particle)) return;\n\n      if (this.getDistance(particle.p.x, particle.p.y) <= particle.radius) {\n        if (this.dx === 0) {\n          particle.v.x *= -1;\n        } else if (this.dy === 0) {\n          particle.v.y *= -1;\n        } else {\n          this.getSymmetric(particle.v);\n        }\n      }\n    } else if (this.crossType === \"cross\") {\n      if (this.alert) {\n        console.error(\"Sorry, LineZone does not support cross method!\");\n        this.alert = false;\n      }\n    }\n  }\n}\n","import Zone from \"./Zone\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class CircleZone extends Zone {\n  constructor(x, y, radius) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.angle = 0;\n    this.center = { x, y };\n  }\n\n  getPosition() {\n    this.angle = MathUtil.PIx2 * Math.random();\n    this.randomRadius = Math.random() * this.radius;\n    this.vector.x = this.x + this.randomRadius * Math.cos(this.angle);\n    this.vector.y = this.y + this.randomRadius * Math.sin(this.angle);\n\n    return this.vector;\n  }\n\n  setCenter(x, y) {\n    this.center.x = x;\n    this.center.y = y;\n  }\n\n  crossing(particle) {\n    const d = particle.p.distanceTo(this.center);\n\n    if (this.crossType === \"dead\") {\n      if (d - particle.radius > this.radius) particle.dead = true;\n    } else if (this.crossType === \"bound\") {\n      if (d + particle.radius >= this.radius) this.getSymmetric(particle);\n    } else if (this.crossType === \"cross\") {\n      if (this.alert) {\n        console.error(\"Sorry, CircleZone does not support cross method!\");\n        this.alert = false;\n      }\n    }\n  }\n\n  getSymmetric(particle) {\n    const tha2 = particle.v.getGradient();\n    const tha1 = this.getGradient(particle);\n\n    const tha = 2 * (tha1 - tha2);\n    const oldx = particle.v.x;\n    const oldy = particle.v.y;\n\n    particle.v.x = oldx * Math.cos(tha) - oldy * Math.sin(tha);\n    particle.v.y = oldx * Math.sin(tha) + oldy * Math.cos(tha);\n  }\n\n  getGradient(particle) {\n    return -MathUtil.PI_2 + Math.atan2(particle.p.y - this.center.y, particle.p.x - this.center.x);\n  }\n}\n","import Zone from \"./Zone\";\n\nexport default class RectZone extends Zone {\n  constructor(x, y, width, height) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  getPosition() {\n    this.vector.x = this.x + Math.random() * this.width;\n    this.vector.y = this.y + Math.random() * this.height;\n\n    return this.vector;\n  }\n\n  crossing(particle) {\n    // particle dead zone\n    if (this.crossType === \"dead\") {\n      if (particle.p.x + particle.radius < this.x) particle.dead = true;\n      else if (particle.p.x - particle.radius > this.x + this.width) particle.dead = true;\n\n      if (particle.p.y + particle.radius < this.y) particle.dead = true;\n      else if (particle.p.y - particle.radius > this.y + this.height) particle.dead = true;\n    }\n\n    // particle bound zone\n    else if (this.crossType === \"bound\") {\n      if (particle.p.x - particle.radius < this.x) {\n        particle.p.x = this.x + particle.radius;\n        particle.v.x *= -1;\n      } else if (particle.p.x + particle.radius > this.x + this.width) {\n        particle.p.x = this.x + this.width - particle.radius;\n        particle.v.x *= -1;\n      }\n\n      if (particle.p.y - particle.radius < this.y) {\n        particle.p.y = this.y + particle.radius;\n        particle.v.y *= -1;\n      } else if (particle.p.y + particle.radius > this.y + this.height) {\n        particle.p.y = this.y + this.height - particle.radius;\n        particle.v.y *= -1;\n      }\n    }\n\n    // particle cross zone\n    else if (this.crossType === \"cross\") {\n      if (particle.p.x + particle.radius < this.x && particle.v.x <= 0) {\n        particle.p.x = this.x + this.width + particle.radius;\n      } else if (particle.p.x - particle.radius > this.x + this.width && particle.v.x >= 0) {\n        particle.p.x = this.x - particle.radius;\n      }\n\n      if (particle.p.y + particle.radius < this.y && particle.v.y <= 0) {\n        particle.p.y = this.y + this.height + particle.radius;\n      } else if (particle.p.y - particle.radius > this.y + this.height && particle.v.y >= 0) {\n        particle.p.y = this.y - particle.radius;\n      }\n    }\n  }\n}\n","import Zone from \"./Zone\";\nimport Util from \"../utils/Util\";\n\nexport default class ImageZone extends Zone {\n  constructor(imageData, x, y, d) {\n    super();\n    this.reset(imageData, x, y, d);\n  }\n\n  reset(imageData, x, y, d) {\n    this.imageData = imageData;\n    this.x = Util.initValue(x, 0);\n    this.y = Util.initValue(y, 0);\n    this.d = Util.initValue(d, 2);\n\n    this.vectors = [];\n    this.setVectors();\n  }\n\n  setVectors() {\n    let i, j;\n    const length1 = this.imageData.width;\n    const length2 = this.imageData.height;\n\n    for (i = 0; i < length1; i += this.d) {\n      for (j = 0; j < length2; j += this.d) {\n        let index = ((j >> 0) * length1 + (i >> 0)) * 4;\n\n        if (this.imageData.data[index + 3] > 0) {\n          this.vectors.push({ x: i + this.x, y: j + this.y });\n        }\n      }\n    }\n\n    return this.vector;\n  }\n\n  getBound(x, y) {\n    const index = ((y >> 0) * this.imageData.width + (x >> 0)) * 4;\n    if (this.imageData.data[index + 3] > 0) return true;\n    else return false;\n  }\n\n  getPosition() {\n    const vector = Util.getRandFromArray(this.vectors);\n    return this.vector.copy(vector);\n  }\n\n  getColor(x, y) {\n    x -= this.x;\n    y -= this.y;\n    const i = ((y >> 0) * this.imageData.width + (x >> 0)) * 4;\n\n    return {\n      r: this.imageData.data[i],\n      g: this.imageData.data[i + 1],\n      b: this.imageData.data[i + 2],\n      a: this.imageData.data[i + 3]\n    };\n  }\n\n  crossing(particle) {\n    if (this.crossType === \"dead\") {\n      if (this.getBound(particle.p.x - this.x, particle.p.y - this.y)) particle.dead = true;\n      else particle.dead = false;\n    } else if (this.crossType === \"bound\") {\n      if (!this.getBound(particle.p.x - this.x, particle.p.y - this.y)) particle.v.negate();\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    this.imageData = null;\n  }\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport CircleZone from \"../zone/CircleZone\";\nimport PointZone from \"../zone/PointZone\";\nimport LineZone from \"../zone/LineZone\";\nimport RectZone from \"../zone/RectZone\";\n\nexport default {\n  addEventListener(proton, func) {\n    proton.addEventListener(\"PROTON_UPDATE_AFTER\", () => func());\n  },\n\n  getStyle(color = \"#ff0000\") {\n    const rgb = ColorUtil.hexToRgb(color);\n    return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, 0.5)`;\n  },\n\n  drawZone(proton, canvas, zone, clear) {\n    const context = canvas.getContext(\"2d\");\n    const style = this.getStyle();\n\n    this.addEventListener(proton, () => {\n      if (clear) context.clearRect(0, 0, canvas.width, canvas.height);\n\n      if (zone instanceof PointZone) {\n        context.beginPath();\n        context.fillStyle = style;\n        context.arc(zone.x, zone.y, 10, 0, Math.PI * 2, true);\n        context.fill();\n        context.closePath();\n      } else if (zone instanceof LineZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.moveTo(zone.x1, zone.y1);\n        context.lineTo(zone.x2, zone.y2);\n        context.stroke();\n        context.closePath();\n      } else if (zone instanceof RectZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.drawRect(zone.x, zone.y, zone.width, zone.height);\n        context.stroke();\n        context.closePath();\n      } else if (zone instanceof CircleZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.arc(zone.x, zone.y, zone.radius, 0, Math.PI * 2, true);\n        context.stroke();\n        context.closePath();\n      }\n    });\n  },\n\n  drawEmitter(proton, canvas, emitter, clear) {\n    const context = canvas.getContext(\"2d\");\n    const style = this.getStyle();\n\n    this.addEventListener(proton, () => {\n      if (clear) context.clearRect(0, 0, canvas.width, canvas.height);\n\n      context.beginPath();\n      context.fillStyle = style;\n      context.arc(emitter.p.x, emitter.p.y, 10, 0, Math.PI * 2, true);\n      context.fill();\n      context.closePath();\n    });\n  }\n};\n","import Proton from \"./core/Proton\";\nimport Particle from \"./core/Particle\";\nimport Pool from \"./core/Pool\";\n\nimport Util from \"./utils/Util\";\nimport ColorUtil from \"./utils/ColorUtil\";\nimport MathUtil from \"./math/MathUtil\";\nimport Vector2D from \"./math/Vector2D\";\nimport Polar2D from \"./math/Polar2D\";\nimport Mat3 from \"./math/Mat3\";\nimport Span from \"./math/Span\";\nimport ArraySpan from \"./math/ArraySpan\";\nimport Rectangle from \"./math/Rectangle\";\nimport ease from \"./math/ease\";\n\nimport Rate from \"./initialize/Rate\";\nimport Initialize from \"./initialize/Initialize\";\nimport Life from \"./initialize/Life\";\nimport Position from \"./initialize/Position\";\nimport Velocity from \"./initialize/Velocity\";\nimport Mass from \"./initialize/Mass\";\nimport Radius from \"./initialize/Radius\";\nimport Body from \"./initialize/Body\";\n\nimport Behaviour from \"./behaviour/Behaviour\";\nimport Force from \"./behaviour/Force\";\nimport Attraction from \"./behaviour/Attraction\";\nimport RandomDrift from \"./behaviour/RandomDrift\";\nimport Gravity from \"./behaviour/Gravity\";\nimport Collision from \"./behaviour/Collision\";\nimport CrossZone from \"./behaviour/CrossZone\";\nimport Alpha from \"./behaviour/Alpha\";\nimport Scale from \"./behaviour/Scale\";\nimport Rotate from \"./behaviour/Rotate\";\nimport Color from \"./behaviour/Color\";\nimport Cyclone from \"./behaviour/Cyclone\";\nimport Repulsion from \"./behaviour/Repulsion\";\nimport GravityWell from \"./behaviour/GravityWell\";\n\nimport Emitter from \"./emitter/Emitter\";\nimport BehaviourEmitter from \"./emitter/BehaviourEmitter\";\nimport FollowEmitter from \"./emitter/FollowEmitter\";\n\nimport CanvasRenderer from \"./render/CanvasRenderer\";\nimport DomRenderer from \"./render/DomRenderer\";\nimport EaselRenderer from \"./render/EaselRenderer\";\nimport PixelRenderer from \"./render/PixelRenderer\";\nimport PixiRenderer from \"./render/PixiRenderer\";\nimport WebGLRenderer from \"./render/WebGLRenderer\";\nimport CustomRenderer from \"./render/CustomRenderer\";\n\nimport Zone from \"./zone/Zone\";\nimport LineZone from \"./zone/LineZone\";\nimport CircleZone from \"./zone/CircleZone\";\nimport PointZone from \"./zone/PointZone\";\nimport RectZone from \"./zone/RectZone\";\nimport ImageZone from \"./zone/ImageZone\";\n\nimport Debug from \"./debug/Debug\";\n\n// namespace\nProton.Particle = Particle;\nProton.Pool = Pool;\n\nProton.Util = Util;\nProton.ColorUtil = ColorUtil;\nProton.MathUtil = MathUtil;\nProton.Vector2D = Proton.Vector = Vector2D;\nProton.Polar2D = Proton.Polar = Polar2D;\nProton.ArraySpan = ArraySpan;\nProton.Rectangle = Rectangle;\nProton.Rate = Rate;\nProton.ease = ease;\nProton.Span = Span;\nProton.Mat3 = Mat3;\nProton.getSpan = (a, b, center) => new Span(a, b, center);\nProton.createArraySpan = ArraySpan.createArraySpan;\n\nProton.Initialize = Proton.Init = Initialize;\nProton.Life = Proton.L = Life;\nProton.Position = Proton.P = Position;\nProton.Velocity = Proton.V = Velocity;\nProton.Mass = Proton.M = Mass;\nProton.Radius = Proton.R = Radius;\nProton.Body = Proton.B = Body;\n\nProton.Behaviour = Behaviour;\nProton.Force = Proton.F = Force;\nProton.Attraction = Proton.A = Attraction;\nProton.RandomDrift = Proton.RD = RandomDrift;\nProton.Gravity = Proton.G = Gravity;\nProton.Collision = Collision;\nProton.CrossZone = CrossZone;\nProton.Alpha = Alpha;\nProton.Scale = Proton.S = Scale;\nProton.Rotate = Rotate;\nProton.Color = Color;\nProton.Repulsion = Repulsion;\nProton.Cyclone = Cyclone;\nProton.GravityWell = GravityWell;\n\nProton.Emitter = Emitter;\nProton.BehaviourEmitter = BehaviourEmitter;\nProton.FollowEmitter = FollowEmitter;\n\nProton.Zone = Zone;\nProton.LineZone = LineZone;\nProton.CircleZone = CircleZone;\nProton.PointZone = PointZone;\nProton.RectZone = RectZone;\nProton.ImageZone = ImageZone;\n\nProton.CanvasRenderer = CanvasRenderer;\nProton.DomRenderer = DomRenderer;\nProton.EaselRenderer = EaselRenderer;\nProton.PixiRenderer = PixiRenderer;\nProton.PixelRenderer = PixelRenderer;\nProton.WebGLRenderer = Proton.WebGlRenderer = WebGLRenderer;\nProton.CustomRenderer = CustomRenderer;\n\nProton.Debug = Debug;\nUtil.assign(Proton, ease);\n\n// export\nexport default Proton;\n"],"names":["length","i","tx","ty","angleInRadians","c","Math","cos","s","sin","sx","sy","a","b","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","createCanvas","id","width","height","position","dom","document","createElement","style","opacity","transform","createDiv","resize","marginLeft","marginTop","div","x","y","scale","rotate","willChange","css3","transform3d","key","val","bkey","charAt","toUpperCase","substr","imgsCache","canvasCache","canvasId","context","image","rect","drawImage","imagedata","getImageData","clearRect","img","callback","param","src","Image","onload","e","target","WebGLUtil","canvas","DomUtil","getContext","initValue","value","defaults","isArray","Object","prototype","toString","call","emptyArray","arr","toArray","this","getRandFromArray","floor","random","emptyObject","obj","ignore","indexOf","classApply","constructor","args","bind","apply","concat","ImgUtil","destroyAll","destroy","assign","source","hasOwnProperty","idsMap","Puid","_index","_cache","type","undefined","getId","uid","getIdFromCache","isBody","isInner","getTarget","Pool","num","total","cache","get","params","p","__puid","pop","createOrClone","expire","getCache","push","create","Util","clone","getCount","count","Stats","proton","container","emitterIndex","rendererIndex","update","body","add","emitter","getEmitter","renderer","getRenderer","str","emitters","emitSpeed","getEmitterPos","initializes","concatArr","behaviours","name","getCreatedNumber","pool","innerHTML","bg","color","cssText","join","addEventListener","_this","parentNode","appendChild","renderers","result","cpool","round","removeChild","EventDispatcher","_listeners","dispatchEvent","hasEventListener","removeEventListener","removeAllEventListeners","listener","splice","listeners","handler","PI","MathUtil","PIx2","PI_2","PI_180","N180_PI","Infinity","isInfinity","randomAToB","isInt","randomFloating","center","f","randomColor","slice","randomZone","display","k","digits","pow","degreeTransform","toColor16","Integration","calculate","particles","time","damping","eulerIntegrate","particle","sleep","old","copy","v","multiplyScalar","mass","clear","Proton","integrationType","now","then","elapsed","stats","EULER","integrator","_fps","_interval","DEFAULT_INTERVAL","addRenderer","render","init","removeRenderer","index","remove","addEmitter","parent","EMITTER_ADDED","removeEmitter","EMITTER_REMOVED","PROTON_UPDATE","USE_CLOCK","Date","getTime","amendChangeTabsBug","emittersUpdate","PROTON_UPDATE_AFTER","getAllParticles","destroyAllEmitters","destroyOther","setTimeout","fps","MEASURE","RK2","PARTICLE_CREATED","PARTICLE_UPDATE","PARTICLE_SLEEP","PARTICLE_DEAD","Rgb","r","g","reset","hasProp","setProp","props","prop","Span","getSpanValue","setVectorVal","conf","easeLinear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","getEasing","ease","Vector2D","set","setX","setY","getGradient","atan2","w","addVectors","addXY","sub","subVectors","divideScalar","negate","dot","lengthSq","normalize","distanceTo","distanceToSquared","tha","dx","dy","lerp","alpha","equals","Particle","data","rgb","PropUtil","getDirection","life","age","dead","sprite","energy","radius","rotation","easing","removeAllBehaviours","applyBehaviours","max","applyBehaviour","addBehaviour","behaviour","parents","initialize","addBehaviours","removeBehaviour","hexToRgb","h","hex16","substring","parseInt","rgbToHex","rbg","getHex16FromParticle","Number","Polar2D","abs","setR","setTha","toVector","getX","getY","Mat3","mat3","mat","Float32Array","mat1","mat2","multiply","inverse","multiplyVec2","m","vec","getValue","setSpanValue","pan","ArraySpan","_arr","createArraySpan","Rectangle","bottom","right","contains","Rate","numpan","timepan","numPan","timePan","startTime","nextTime","Initialize","Life","lifePan","Zone","vector","crossType","alert","getPosition","crossing","PointZone","console","error","Position","zone","Velocity","rpan","thapan","rPan","thaPan","normalizeVelocity","vr","polar2d","Mass","massPan","Radius","oldRadius","Body","imageTarget","inner","Behaviour","normalizeForce","force","normalizeValue","Force","fx","fy","Attraction","targetPosition","radiusSq","attractionForce","RandomDrift","driftX","driftY","delay","panFoce","Gravity","Collision","collisionPool","delta","otherParticle","overlap","totalMass","averageMass1","averageMass2","newPool","distance","CrossZone","Alpha","same","alphaA","alphaB","Scale","scaleA","scaleB","Rotate","influence","rotationA","rotationB","Color","colorA","ColorUtil","colorB","CHANGING","Cyclone","angle","setAngleAndForce","span","String","toLowerCase","cangle","cyclone","gradient","Repulsion","GravityWell","centerPoint","distanceVec","distanceSq","factor","bindEmitter","Emitter","emitTime","totalTime","rate","emit","stoped","isNaN","stop","preEmit","oldStoped","oldEmitTime","oldTotalTime","step","removeAllParticles","addSelfInitialize","initAll","addInitialize","rest","removeInitialize","initializer","removeAllInitializers","arguments","emitting","integrate","dispatch","event","bindEvent","createParticle","setupParticle","InitializeUtil","PIXIClass","BehaviourEmitter","selfBehaviours","addSelfBehaviour","removeSelfBehaviour","FollowEmitter","mouseTarget","window","_allowEmitting","initEventHandler","mousemoveHandler","_this2","mousemove","mousedownHandler","mousedown","mouseupHandler","mouseup","layerX","layerY","offsetX","offsetY","_Emitter","tagName","nodeName","BaseRenderer","element","stroke","circleConf","isCircle","setStroke","thinkness","_protonUpdateHandler","onProtonUpdate","_protonUpdateAfterHandler","onProtonUpdateAfter","_emitterAddedHandler","onEmitterAdded","_emitterRemovedHandler","onEmitterRemoved","_particleCreatedHandler","onParticleCreated","_particleUpdateHandler","onParticleUpdate","_particleDeadHandler","onParticleDead","CanvasRenderer","bufferCache","addImg2Body","Types","drawCircle","buffer","createBuffer","bufContext","globalAlpha","globalCompositeOperation","fillStyle","fillRect","save","translate","restore","beginPath","arc","strokeStyle","lineWidth","closePath","fill","size","DomRenderer","createBody","bodyReady","backgroundColor","createCircle","createSprite","borderRadius","borderColor","borderWidth","url","backgroundImage","EaselRenderer","addChild","scaleX","scaleY","graphics","regX","regY","createjs","Graphics","beginStroke","beginFill","shape","Shape","PixelRenderer","rectangle","imageData","createImageData","putImageData","setPixel","elementwidth","PixiRenderer","setColor","blendMode","setPIXI","PIXI","Sprite","createFromImage","from","fromImage","tint","anchor","endFill","MStack","mats","top","WebGLRenderer","gl","antialias","stencil","depth","initVar","setMaxRadius","initShaders","initBuffers","blendEquation","FUNC_ADD","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","umat","smat","mstack","viewport","circleCanvasURL","getVertexShader","getFragmentShader","texturebuffers","A","B","getShader","fs","shader","createShader","FRAGMENT_SHADER","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fragmentShader","vertexShader","sprogram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","vpa","getAttribLocation","tca","enableVertexAttribArray","tMatUniform","getUniformLocation","samplerUniform","useTex","uniform1i","idx","unitIBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","Uint16Array","STATIC_DRAW","ids","unitI33","stripBuffer","raidus","circleCanvasRadius","toDataURL","drawImg2Canvas","_w","_h","_width","_height","_scaleX","_scaleY","createTexture","texture","vcBuffer","tcBuffer","ARRAY_BUFFER","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","generateMipmap","textureLoaded","textureWidth","textureHeight","tmat","imat","oldScale","updateMatrix","uniform3f","uniformMatrix3fv","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","moveOriginMatrix","translationMatrix","angel","rotationMatrix","scaleMatrix","matrix","CustomRenderer","LineZone","x1","y1","x2","y2","direction","minx","min","miny","maxx","maxy","xxyy","getLength","getDistance","getSymmetric","tha2","oldx","oldy","rangeOut","CircleZone","randomRadius","setCenter","d","RectZone","ImageZone","vectors","setVectors","j","length1","length2","getBound","getColor","func","getStyle","drawZone","moveTo","lineTo","drawRect","drawEmitter","Vector","Polar","getSpan","Init","L","P","V","M","R","F","RD","G","S","WebGlRenderer","Debug"],"mappings":"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"}