{"version":3,"file":"proton.min.js","sources":["../src/utils/WebGLUtil.js","../src/utils/DomUtil.js","../src/utils/ImgUtil.js","../src/utils/Util.js","../src/utils/Puid.js","../src/core/Pool.js","../src/debug/Stats.js","../src/events/EventDispatcher.js","../src/math/MathUtil.js","../src/math/Integration.js","../src/core/Proton.js","../src/utils/Rgb.js","../src/utils/PropUtil.js","../src/math/ease.js","../src/math/Vector2D.js","../src/core/Particle.js","../src/utils/ColorUtil.js","../src/math/Polar2D.js","../src/math/Mat3.js","../src/math/Span.js","../src/math/ArraySpan.js","../src/math/Rectangle.js","../src/initialize/Rate.js","../src/initialize/Initialize.js","../src/initialize/Life.js","../src/zone/Zone.js","../src/zone/PointZone.js","../src/initialize/Position.js","../src/initialize/Velocity.js","../src/initialize/Mass.js","../src/initialize/Radius.js","../src/initialize/Body.js","../src/behaviour/Behaviour.js","../src/behaviour/Force.js","../src/behaviour/Attraction.js","../src/behaviour/RandomDrift.js","../src/behaviour/Gravity.js","../src/behaviour/Collision.js","../src/behaviour/CrossZone.js","../src/behaviour/Alpha.js","../src/behaviour/Scale.js","../src/behaviour/Rotate.js","../src/behaviour/Color.js","../src/behaviour/Cyclone.js","../src/behaviour/Repulsion.js","../src/behaviour/GravityWell.js","../src/initialize/InitializeUtil.js","../src/emitter/Emitter.js","../src/render/PixiRenderer.js","../src/emitter/BehaviourEmitter.js","../src/emitter/FollowEmitter.js","../src/utils/Types.js","../src/render/BaseRenderer.js","../src/render/CanvasRenderer.js","../src/render/DomRenderer.js","../src/render/EaselRenderer.js","../src/render/PixelRenderer.js","../src/utils/MStack.js","../src/render/WebGLRenderer.js","../src/render/CustomRenderer.js","../src/zone/LineZone.js","../src/zone/CircleZone.js","../src/zone/RectZone.js","../src/zone/ImageZone.js","../src/debug/Debug.js","../src/index.js"],"sourcesContent":["export default {\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method ipot\n   *\n   * @todo add description\n   * @todo add length description\n   *\n   * @param {Number} length\n   *\n   * @return {Boolean}\n   */\n  ipot(length) {\n    return (length & (length - 1)) === 0;\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method nhpot\n   *\n   * @todo add description\n   * @todo add length description\n   *\n   * @param {Number} length\n   *\n   * @return {Number}\n   */\n  nhpot(length) {\n    --length;\n    for (let i = 1; i < 32; i <<= 1) {\n      length = length | (length >> i);\n    }\n\n    return length + 1;\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeTranslation\n   *\n   * @todo add description\n   * @todo add tx, ty description\n   * @todo add return description\n   *\n   * @param {Number} tx either 0 or 1\n   * @param {Number} ty either 0 or 1\n   *\n   * @return {Object}\n   */\n  makeTranslation(tx, ty) {\n    return [1, 0, 0, 0, 1, 0, tx, ty, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeRotation\n   *\n   * @todo add description\n   * @todo add return description\n   *\n   * @param {Number} angleInRadians\n   *\n   * @return {Object}\n   */\n  makeRotation(angleInRadians) {\n    let c = Math.cos(angleInRadians);\n    let s = Math.sin(angleInRadians);\n\n    return [c, -s, 0, s, c, 0, 0, 0, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method makeScale\n   *\n   * @todo add description\n   * @todo add tx, ty description\n   * @todo add return description\n   *\n   * @param {Number} sx either 0 or 1\n   * @param {Number} sy either 0 or 1\n   *\n   * @return {Object}\n   */\n  makeScale(sx, sy) {\n    return [sx, 0, 0, 0, sy, 0, 0, 0, 1];\n  },\n\n  /**\n   * @memberof Proton#Proton.WebGLUtil\n   * @method matrixMultiply\n   *\n   * @todo add description\n   * @todo add a, b description\n   * @todo add return description\n   *\n   * @param {Object} a\n   * @param {Object} b\n   *\n   * @return {Object}\n   */\n  matrixMultiply(a, b) {\n    let a00 = a[0 * 3 + 0];\n    let a01 = a[0 * 3 + 1];\n    let a02 = a[0 * 3 + 2];\n    let a10 = a[1 * 3 + 0];\n    let a11 = a[1 * 3 + 1];\n    let a12 = a[1 * 3 + 2];\n    let a20 = a[2 * 3 + 0];\n    let a21 = a[2 * 3 + 1];\n    let a22 = a[2 * 3 + 2];\n    let b00 = b[0 * 3 + 0];\n    let b01 = b[0 * 3 + 1];\n    let b02 = b[0 * 3 + 2];\n    let b10 = b[1 * 3 + 0];\n    let b11 = b[1 * 3 + 1];\n    let b12 = b[1 * 3 + 2];\n    let b20 = b[2 * 3 + 0];\n    let b21 = b[2 * 3 + 1];\n    let b22 = b[2 * 3 + 2];\n\n    return [\n      a00 * b00 + a01 * b10 + a02 * b20,\n      a00 * b01 + a01 * b11 + a02 * b21,\n      a00 * b02 + a01 * b12 + a02 * b22,\n      a10 * b00 + a11 * b10 + a12 * b20,\n      a10 * b01 + a11 * b11 + a12 * b21,\n      a10 * b02 + a11 * b12 + a12 * b22,\n      a20 * b00 + a21 * b10 + a22 * b20,\n      a20 * b01 + a21 * b11 + a22 * b21,\n      a20 * b02 + a21 * b12 + a22 * b22\n    ];\n  }\n};\n","export default {\n  /**\n   * Creates and returns a new canvas. The opacity is by default set to 0\n   *\n   * @memberof Proton#Proton.DomUtil\n   * @method createCanvas\n   *\n   * @param {String} $id the canvas' id\n   * @param {Number} $width the canvas' width\n   * @param {Number} $height the canvas' height\n   * @param {String} [$position=absolute] the canvas' position, default is 'absolute'\n   *\n   * @return {Object}\n   */\n  createCanvas(id, width, height, position = \"absolute\") {\n    const dom = document.createElement(\"canvas\");\n\n    dom.id = id;\n    dom.width = width;\n    dom.height = height;\n    dom.style.opacity = 0;\n    dom.style.position = position;\n    this.transform(dom, -500, -500, 0, 0);\n\n    return dom;\n  },\n\n  createDiv(id, width, height) {\n    const dom = document.createElement(\"div\");\n\n    dom.id = id;\n    dom.style.position = \"absolute\";\n    this.resize(dom, width, height);\n\n    return dom;\n  },\n\n  resize(dom, width, height) {\n    dom.style.width = width + \"px\";\n    dom.style.height = height + \"px\";\n    dom.style.marginLeft = -width / 2 + \"px\";\n    dom.style.marginTop = -height / 2 + \"px\";\n  },\n\n  /**\n   * Adds a transform: translate(), scale(), rotate() to a given div dom for all browsers\n   *\n   * @memberof Proton#Proton.DomUtil\n   * @method transform\n   *\n   * @param {HTMLDivElement} div\n   * @param {Number} $x\n   * @param {Number} $y\n   * @param {Number} $scale\n   * @param {Number} $rotate\n   */\n  transform(div, x, y, scale, rotate) {\n    div.style.willChange = \"transform\";\n    const transform = `translate(${x}px, ${y}px) scale(${scale}) rotate(${rotate}deg)`;\n    this.css3(div, \"transform\", transform);\n  },\n\n  transform3d(div, x, y, scale, rotate) {\n    div.style.willChange = \"transform\";\n    const transform = `translate3d(${x}px, ${y}px, 0) scale(${scale}) rotate(${rotate}deg)`;\n    this.css3(div, \"backfaceVisibility\", \"hidden\");\n    this.css3(div, \"transform\", transform);\n  },\n\n  css3(div, key, val) {\n    const bkey = key.charAt(0).toUpperCase() + key.substr(1);\n\n    div.style[`Webkit${bkey}`] = val;\n    div.style[`Moz${bkey}`] = val;\n    div.style[`O${bkey}`] = val;\n    div.style[`ms${bkey}`] = val;\n    div.style[`${key}`] = val;\n  }\n};\n","import WebGLUtil from \"./WebGLUtil\";\nimport DomUtil from \"./DomUtil\";\n\nconst imgsCache = {};\nconst canvasCache = {};\nlet canvasId = 0;\n\nexport default {\n  /**\n   * This will get the image data. It could be necessary to create a Proton.Zone.\n   *\n   * @memberof Proton#Proton.Util\n   * @method getImageData\n   *\n   * @param {HTMLCanvasElement}   context any canvas, must be a 2dContext 'canvas.getContext('2d')'\n   * @param {Object}              image   could be any dom image, e.g. document.getElementById('thisIsAnImgTag');\n   * @param {Proton.Rectangle}    rect\n   */\n  getImageData(context, image, rect) {\n    context.drawImage(image, rect.x, rect.y);\n    const imagedata = context.getImageData(rect.x, rect.y, rect.width, rect.height);\n    context.clearRect(rect.x, rect.y, rect.width, rect.height);\n\n    return imagedata;\n  },\n\n  /**\n   * @memberof Proton#Proton.Util\n   * @method getImgFromCache\n   *\n   * @todo add description\n   * @todo describe func\n   *\n   * @param {Mixed}               img\n   * @param {Proton.Particle}     particle\n   * @param {Boolean}             drawCanvas  set to true if a canvas should be saved into particle.data.canvas\n   * @param {Boolean}             func\n   */\n  getImgFromCache(img, callback, param) {\n    const src = typeof img === \"string\" ? img : img.src;\n\n    if (imgsCache[src]) {\n      callback(imgsCache[src], param);\n    } else {\n      const image = new Image();\n      image.onload = e => {\n        imgsCache[src] = e.target;\n        callback(imgsCache[src], param);\n      };\n\n      image.src = src;\n    }\n  },\n\n  getCanvasFromCache(img, callback, param) {\n    const src = img.src;\n\n    if (!canvasCache[src]) {\n      const width = WebGLUtil.nhpot(img.width);\n      const height = WebGLUtil.nhpot(img.height);\n\n      const canvas = DomUtil.createCanvas(`proton_canvas_cache_${++canvasId}`, width, height);\n      const context = canvas.getContext(\"2d\");\n      context.drawImage(img, 0, 0, img.width, img.height);\n\n      canvasCache[src] = canvas;\n    }\n\n    callback && callback(canvasCache[src], param);\n\n    return canvasCache[src];\n  }\n};\n","import ImgUtil from \"./ImgUtil\";\n\nexport default {\n  /**\n   * Returns the default if the value is null or undefined\n   *\n   * @memberof Proton#Proton.Util\n   * @method initValue\n   *\n   * @param {Mixed} value a specific value, could be everything but null or undefined\n   * @param {Mixed} defaults the default if the value is null or undefined\n   */\n  initValue(value, defaults) {\n    value = value !== null && value !== undefined ? value : defaults;\n    return value;\n  },\n\n  /**\n   * Checks if the value is a valid array\n   *\n   * @memberof Proton#Proton.Util\n   * @method isArray\n   *\n   * @param {Array} value Any array\n   *\n   * @returns {Boolean}\n   */\n  isArray(value) {\n    return Object.prototype.toString.call(value) === \"[object Array]\";\n  },\n\n  /**\n   * Destroyes the given array\n   *\n   * @memberof Proton#Proton.Util\n   * @method emptyArray\n   *\n   * @param {Array} array Any array\n   */\n  emptyArray(arr) {\n    if (arr) arr.length = 0;\n  },\n\n  toArray(arr) {\n    return this.isArray(arr) ? arr : [arr];\n  },\n\n  sliceArray(arr1, index, arr2) {\n    this.emptyArray(arr2);\n    for (let i = index; i < arr1.length; i++) {\n      arr2.push(arr1[i]);\n    }\n  },\n\n  getRandFromArray(arr) {\n    if (!arr) return null;\n    return arr[Math.floor(arr.length * Math.random())];\n  },\n\n  /**\n   * Destroyes the given object\n   *\n   * @memberof Proton#Proton.Util\n   * @method emptyObject\n   *\n   * @param {Object} obj Any object\n   */\n  emptyObject(obj, ignore = null) {\n    for (let key in obj) {\n      if (ignore && ignore.indexOf(key) > -1) continue;\n      delete obj[key];\n    }\n  },\n\n  /**\n   * Makes an instance of a class and binds the given array\n   *\n   * @memberof Proton#Proton.Util\n   * @method classApply\n   *\n   * @param {Function} constructor A class to make an instance from\n   * @param {Array} [args] Any array to bind it to the constructor\n   *\n   * @return {Object} The instance of constructor, optionally bind with args\n   */\n  classApply(constructor, args = null) {\n    if (!args) {\n      return new constructor();\n    } else {\n      const FactoryFunc = constructor.bind.apply(constructor, [null].concat(args));\n      return new FactoryFunc();\n    }\n  },\n\n  /**\n   * This will get the image data. It could be necessary to create a Proton.Zone.\n   *\n   * @memberof Proton#Proton.Util\n   * @method getImageData\n   *\n   * @param {HTMLCanvasElement}   context any canvas, must be a 2dContext 'canvas.getContext('2d')'\n   * @param {Object}              image   could be any dom image, e.g. document.getElementById('thisIsAnImgTag');\n   * @param {Proton.Rectangle}    rect\n   */\n  getImageData(context, image, rect) {\n    return ImgUtil.getImageData(context, image, rect);\n  },\n\n  destroyAll(arr, param = null) {\n    let i = arr.length;\n\n    while (i--) {\n      try {\n        arr[i].destroy(param);\n      } catch (e) {}\n\n      delete arr[i];\n    }\n\n    arr.length = 0;\n  },\n\n  assign(target, source) {\n    if (typeof Object.assign !== \"function\") {\n      for (let key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n\n      return target;\n    } else {\n      return Object.assign(target, source);\n    }\n  }\n};\n","const idsMap = {};\n\nconst Puid = {\n  _index: 0,\n  _cache: {},\n\n  id(type) {\n    if (idsMap[type] === undefined || idsMap[type] === null) idsMap[type] = 0;\n    return `${type}_${idsMap[type]++}`;\n  },\n\n  getId(target) {\n    let uid = this.getIdFromCache(target);\n    if (uid) return uid;\n\n    uid = `PUID_${this._index++}`;\n    this._cache[uid] = target;\n    return uid;\n  },\n\n  getIdFromCache(target) {\n    let obj, id;\n\n    for (id in this._cache) {\n      obj = this._cache[id];\n\n      if (obj === target) return id;\n      if (this.isBody(obj, target) && obj.src === target.src) return id;\n    }\n\n    return null;\n  },\n\n  isBody(obj, target) {\n    return typeof obj === \"object\" && typeof target === \"object\" && obj.isInner && target.isInner;\n  },\n\n  getTarget(uid) {\n    return this._cache[uid];\n  }\n};\n\nexport default Puid;\n","/**\n * Pool is the cache pool of the proton engine, it is very important.\n *\n * get(target, params, uid)\n *  Class\n *    uid = Puid.getId -> Puid save target cache\n *    target.__puid = uid\n *\n *  body\n *    uid = Puid.getId -> Puid save target cache\n *\n *\n * expire(target)\n *  cache[target.__puid] push target\n *\n */\nimport Util from \"../utils/Util\";\nimport Puid from \"../utils/Puid\";\n\nexport default class Pool {\n  /**\n   * @memberof! Proton#\n   * @constructor\n   * @alias Proton.Pool\n   *\n   * @todo add description\n   * @todo add description of properties\n   *\n   * @property {Number} total\n   * @property {Object} cache\n   */\n  constructor(num) {\n    this.total = 0;\n    this.cache = {};\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method get\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object|Function} target\n   * @param {Object} [params] just add if `target` is a function\n   *\n   * @return {Object}\n   */\n  get(target, params, uid) {\n    let p;\n    uid = uid || target.__puid || Puid.getId(target);\n\n    if (this.cache[uid] && this.cache[uid].length > 0) {\n      p = this.cache[uid].pop();\n    } else {\n      p = this.createOrClone(target, params);\n    }\n\n    p.__puid = target.__puid || uid;\n    return p;\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method set\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object} target\n   *\n   * @return {Object}\n   */\n  expire(target) {\n    return this.getCache(target.__puid).push(target);\n  }\n\n  /**\n   * Creates a new class instance\n   *\n   * @todo add more documentation\n   *\n   * @method create\n   * @memberof Proton#Proton.Pool\n   *\n   * @param {Object|Function} target any Object or Function\n   * @param {Object} [params] just add if `target` is a function\n   *\n   * @return {Object}\n   */\n  createOrClone(target, params) {\n    this.total++;\n\n    if (this.create) {\n      return this.create(target, params);\n    } else if (typeof target === \"function\") {\n      return Util.classApply(target, params);\n    } else {\n      return target.clone();\n    }\n  }\n\n  /**\n   * @todo add description - what is in the cache?\n   *\n   * @method getCount\n   * @memberof Proton#Proton.Pool\n   *\n   * @return {Number}\n   */\n  getCount() {\n    let count = 0;\n    for (let id in this.cache) count += this.cache[id].length;\n    return count++;\n  }\n\n  /**\n   * Destroyes all items from Pool.cache\n   *\n   * @method destroy\n   * @memberof Proton#Proton.Pool\n   */\n  destroy() {\n    for (let id in this.cache) {\n      this.cache[id].length = 0;\n      delete this.cache[id];\n    }\n  }\n\n  /**\n   * Returns Pool.cache\n   *\n   * @method getCache\n   * @memberof Proton#Proton.Pool\n   * @private\n   *\n   * @param {Number} uid the unique id\n   *\n   * @return {Object}\n   */\n  getCache(uid = \"default\") {\n    if (!this.cache[uid]) this.cache[uid] = [];\n    return this.cache[uid];\n  }\n}\n","export default class Stats {\n  constructor(proton) {\n    this.proton = proton;\n    this.container = null;\n    this.type = 1;\n\n    this.emitterIndex = 0;\n    this.rendererIndex = 0;\n  }\n\n  update(style, body) {\n    this.add(style, body);\n\n    const emitter = this.getEmitter();\n    const renderer = this.getRenderer();\n    let str = \"\";\n\n    switch (this.type) {\n      case 2:\n        str += \"emitter:\" + this.proton.emitters.length + \"<br>\";\n        if (emitter) str += \"em speed:\" + emitter.emitSpeed + \"<br>\";\n        if (emitter) str += \"pos:\" + this.getEmitterPos(emitter);\n        break;\n\n      case 3:\n        if (emitter) str += \"initializes:\" + emitter.initializes.length + \"<br>\";\n        if (emitter)\n          str += '<span style=\"display:inline-block;\">' + this.concatArr(emitter.initializes) + \"</span><br>\";\n        if (emitter) str += \"behaviours:\" + emitter.behaviours.length + \"<br>\";\n        if (emitter) str += '<span style=\"display:inline-block;\">' + this.concatArr(emitter.behaviours) + \"</span><br>\";\n        break;\n\n      case 4:\n        if (renderer) str += renderer.name + \"<br>\";\n        if (renderer) str += \"body:\" + this.getCreatedNumber(renderer) + \"<br>\";\n        break;\n\n      default:\n        str += \"particles:\" + this.proton.getCount() + \"<br>\";\n        str += \"pool:\" + this.proton.pool.getCount() + \"<br>\";\n        str += \"total:\" + this.proton.pool.total;\n    }\n\n    this.container.innerHTML = str;\n  }\n\n  add(style, body) {\n    if (!this.container) {\n      this.type = 1;\n\n      this.container = document.createElement(\"div\");\n      this.container.style.cssText = [\n        \"position:absolute;bottom:0px;left:0;cursor:pointer;\",\n        \"opacity:0.9;z-index:10000;padding:10px;font-size:12px;font-family:Helvetica,Arial,sans-serif;\",\n        \"width:120px;height:50px;background-color:#002;color:#0ff;\"\n      ].join(\"\");\n\n      this.container.addEventListener(\n        \"click\",\n        e => {\n          this.type++;\n          if (this.type > 4) this.type = 1;\n        },\n        false\n      );\n\n      let bg, color;\n      switch (style) {\n        case 2:\n          bg = \"#201\";\n          color = \"#f08\";\n          break;\n\n        case 3:\n          bg = \"#020\";\n          color = \"#0f0\";\n          break;\n\n        default:\n          bg = \"#002\";\n          color = \"#0ff\";\n      }\n\n      this.container.style[\"background-color\"] = bg;\n      this.container.style[\"color\"] = color;\n    }\n\n    if (!this.container.parentNode) {\n      body = body || this.body || document.body;\n      body.appendChild(this.container);\n    }\n  }\n\n  getEmitter() {\n    return this.proton.emitters[this.emitterIndex];\n  }\n\n  getRenderer() {\n    return this.proton.renderers[this.rendererIndex];\n  }\n\n  concatArr(arr) {\n    let result = \"\";\n    if (!arr || !arr.length) return result;\n\n    for (let i = 0; i < arr.length; i++) {\n      result += (arr[i].name || \"\").substr(0, 1) + \".\";\n    }\n\n    return result;\n  }\n\n  getCreatedNumber(renderer) {\n    return renderer.pool.total || (renderer.cpool && renderer.cpool.total) || 0;\n  }\n\n  getEmitterPos(e) {\n    return Math.round(e.p.x) + \",\" + Math.round(e.p.y);\n  }\n\n  destroy() {\n    if (this.container && this.container.parentNode) {\n      const body = this.body || document.body;\n      body.removeChild(this.container);\n    }\n\n    this.proton = null;\n    this.container = null;\n  }\n}\n","/*\n * EventDispatcher\n * This code reference since http://createjs.com/.\n *\n **/\n\nexport default class EventDispatcher {\n  constructor() {\n    this._listeners = null;\n  }\n\n  static bind(target) {\n    target.prototype.dispatchEvent = EventDispatcher.prototype.dispatchEvent;\n    target.prototype.hasEventListener = EventDispatcher.prototype.hasEventListener;\n    target.prototype.addEventListener = EventDispatcher.prototype.addEventListener;\n    target.prototype.removeEventListener = EventDispatcher.prototype.removeEventListener;\n    target.prototype.removeAllEventListeners = EventDispatcher.prototype.removeAllEventListeners;\n  }\n\n  addEventListener(type, listener) {\n    if (!this._listeners) {\n      this._listeners = {};\n    } else {\n      this.removeEventListener(type, listener);\n    }\n\n    if (!this._listeners[type]) this._listeners[type] = [];\n    this._listeners[type].push(listener);\n\n    return listener;\n  }\n\n  removeEventListener(type, listener) {\n    if (!this._listeners) return;\n    if (!this._listeners[type]) return;\n\n    const arr = this._listeners[type];\n    const length = arr.length;\n\n    for (let i = 0; i < length; i++) {\n      if (arr[i] === listener) {\n        if (length === 1) {\n          delete this._listeners[type];\n        }\n\n        // allows for faster checks.\n        else {\n          arr.splice(i, 1);\n        }\n\n        break;\n      }\n    }\n  }\n\n  removeAllEventListeners(type) {\n    if (!type) this._listeners = null;\n    else if (this._listeners) delete this._listeners[type];\n  }\n\n  dispatchEvent(type, args) {\n    let result = false;\n    const listeners = this._listeners;\n\n    if (type && listeners) {\n      let arr = listeners[type];\n      if (!arr) return result;\n\n      // arr = arr.slice();\n      // to avoid issues with items being removed or added during the dispatch\n\n      let handler;\n      let i = arr.length;\n      while (i--) {\n        handler = arr[i];\n        result = result || handler(args);\n      }\n    }\n\n    return !!result;\n  }\n\n  hasEventListener(type) {\n    const listeners = this._listeners;\n    return !!(listeners && listeners[type]);\n  }\n}\n","const PI = 3.1415926;\nconst INFINITY = Infinity;\n\nconst MathUtil = {\n  PI: PI,\n  PIx2: PI * 2,\n  PI_2: PI / 2,\n  PI_180: PI / 180,\n  N180_PI: 180 / PI,\n  Infinity: -999,\n\n  isInfinity(num) {\n    return num === this.Infinity || num === INFINITY;\n  },\n\n  randomAToB(a, b, isInt = false) {\n    if (!isInt) return a + Math.random() * (b - a);\n    else return ((Math.random() * (b - a)) >> 0) + a;\n  },\n\n  randomFloating(center, f, isInt) {\n    return this.randomAToB(center - f, center + f, isInt);\n  },\n\n  randomColor() {\n    return \"#\" + (\"00000\" + ((Math.random() * 0x1000000) << 0).toString(16)).slice(-6);\n  },\n\n  randomZone(display) {},\n\n  floor(num, k = 4) {\n    const digits = Math.pow(10, k);\n    return Math.floor(num * digits) / digits;\n  },\n\n  degreeTransform(a) {\n    return (a * PI) / 180;\n  },\n\n  toColor16(num) {\n    return `#${num.toString(16)}`;\n  }\n};\n\nexport default MathUtil;\n","export default class Integration {\n  constructor(type) {\n    this.type = type;\n  }\n\n  calculate(particles, time, damping) {\n    this.eulerIntegrate(particles, time, damping);\n  }\n\n  // Euler Integrate\n  // https://rosettacode.org/wiki/Euler_method\n  eulerIntegrate(particle, time, damping) {\n    if (!particle.sleep) {\n      particle.old.p.copy(particle.p);\n      particle.old.v.copy(particle.v);\n\n      particle.a.multiplyScalar(1 / particle.mass);\n      particle.v.add(particle.a.multiplyScalar(time));\n      particle.p.add(particle.old.v.multiplyScalar(time));\n\n      if (damping) particle.v.multiplyScalar(damping);\n\n      particle.a.clear();\n    }\n  }\n}\n","import Pool from \"./Pool\";\nimport Util from \"../utils/Util\";\nimport Stats from \"../debug/Stats\";\nimport EventDispatcher from \"../events/EventDispatcher\";\nimport MathUtil from \"../math/MathUtil\";\nimport Integration from \"../math/Integration\";\n\nexport default class Proton {\n  static USE_CLOCK = false;\n\n  // measure 1:100\n  static MEASURE = 100;\n  static EULER = \"euler\";\n  static RK2 = \"runge-kutta2\";\n\n  // event name\n  static PARTICLE_CREATED = \"PARTICLE_CREATED\";\n  static PARTICLE_UPDATE = \"PARTICLE_UPDATE\";\n  static PARTICLE_SLEEP = \"PARTICLE_SLEEP\";\n  static PARTICLE_DEAD = \"PARTICLE_DEAD\";\n\n  static EMITTER_ADDED = \"EMITTER_ADDED\";\n  static EMITTER_REMOVED = \"EMITTER_REMOVED\";\n\n  static PROTON_UPDATE = \"PROTON_UPDATE\";\n  static PROTON_UPDATE_AFTER = \"PROTON_UPDATE_AFTER\";\n  static DEFAULT_INTERVAL = 0.0167;\n\n  static amendChangeTabsBug = true;\n\n  /**\n   * The constructor to add emitters\n   *\n   * @constructor Proton\n   *\n   * @todo proParticleCount is not in use\n   * @todo add more documentation of the single properties and parameters\n   *\n   * @param {Number} [proParticleCount] not in use?\n   * @param {Number} [integrationType=Proton.EULER]\n   *\n   * @property {String} [integrationType=Proton.EULER]\n   * @property {Array} emitters   All added emitter\n   * @property {Array} renderers  All added renderer\n   * @property {Number} time      The active time\n   * @property {Number} oldtime   The old time\n   */\n  constructor(integrationType) {\n    this.emitters = [];\n    this.renderers = [];\n\n    this.time = 0;\n    this.now = 0;\n    this.then = 0;\n    this.elapsed = 0;\n\n    this.stats = new Stats(this);\n    this.pool = new Pool(80);\n\n    this.integrationType = Util.initValue(integrationType, Proton.EULER);\n    this.integrator = new Integration(this.integrationType);\n\n    this._fps = \"auto\";\n    this._interval = Proton.DEFAULT_INTERVAL;\n  }\n\n  set fps(fps) {\n    this._fps = fps;\n    this._interval = fps === \"auto\" ? Proton.DEFAULT_INTERVAL : MathUtil.floor(1 / fps, 7);\n  }\n\n  get fps() {\n    return this._fps;\n  }\n\n  /**\n   * add a type of Renderer\n   *\n   * @method addRenderer\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Renderer} render\n   */\n  addRenderer(render) {\n    render.init(this);\n    this.renderers.push(render);\n  }\n\n  /**\n   * @name add a type of Renderer\n   *\n   * @method addRenderer\n   * @param {Renderer} render\n   */\n  removeRenderer(render) {\n    const index = this.renderers.indexOf(render);\n    this.renderers.splice(index, 1);\n    render.remove(this);\n  }\n\n  /**\n   * add the Emitter\n   *\n   * @method addEmitter\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Emitter} emitter\n   */\n  addEmitter(emitter) {\n    this.emitters.push(emitter);\n    emitter.parent = this;\n\n    this.dispatchEvent(Proton.EMITTER_ADDED, emitter);\n  }\n\n  /**\n   * Removes an Emitter\n   *\n   * @method removeEmitter\n   * @memberof Proton\n   * @instance\n   *\n   * @param {Proton.Emitter} emitter\n   */\n  removeEmitter(emitter) {\n    const index = this.emitters.indexOf(emitter);\n    this.emitters.splice(index, 1);\n    emitter.parent = null;\n\n    this.dispatchEvent(Proton.EMITTER_REMOVED, emitter);\n  }\n\n  /**\n   * Updates all added emitters\n   *\n   * @method update\n   * @memberof Proton\n   * @instance\n   */\n  update() {\n    // 'auto' is the default browser refresh rate, the vast majority is 60fps\n    if (this._fps === \"auto\") {\n      this.dispatchEvent(Proton.PROTON_UPDATE);\n\n      if (Proton.USE_CLOCK) {\n        if (!this.then) this.then = new Date().getTime();\n        this.now = new Date().getTime();\n        this.elapsed = (this.now - this.then) * 0.001;\n        // Fix bugs such as chrome browser switching tabs causing excessive time difference\n        this.amendChangeTabsBug();\n\n        if (this.elapsed > 0) this.emittersUpdate(this.elapsed);\n        this.then = this.now;\n      } else {\n        this.emittersUpdate(Proton.DEFAULT_INTERVAL);\n      }\n\n      this.dispatchEvent(Proton.PROTON_UPDATE_AFTER);\n    }\n\n    // If the fps frame rate is set\n    else {\n      if (!this.then) this.then = new Date().getTime();\n      this.now = new Date().getTime();\n      this.elapsed = (this.now - this.then) * 0.001;\n\n      if (this.elapsed > this._interval) {\n        this.dispatchEvent(Proton.PROTON_UPDATE);\n        this.emittersUpdate(this._interval);\n        // https://stackoverflow.com/questions/19764018/controlling-fps-with-requestanimationframe\n        this.then = this.now - (this.elapsed % this._interval) * 1000;\n        this.dispatchEvent(Proton.PROTON_UPDATE_AFTER);\n      }\n    }\n  }\n\n  emittersUpdate(elapsed) {\n    let i = this.emitters.length;\n    while (i--) this.emitters[i].update(elapsed);\n  }\n\n  /**\n   * @todo add description\n   *\n   * @method amendChangeTabsBug\n   * @memberof Proton\n   * @instance\n   */\n  amendChangeTabsBug() {\n    if (!Proton.amendChangeTabsBug) return;\n    if (this.elapsed > 0.5) {\n      this.then = new Date().getTime();\n      this.elapsed = 0;\n    }\n  }\n\n  /**\n   * Counts all particles from all emitters\n   *\n   * @method getCount\n   * @memberof Proton\n   * @instance\n   */\n  getCount() {\n    let total = 0;\n    let i = this.emitters.length;\n\n    while (i--) total += this.emitters[i].particles.length;\n    return total;\n  }\n\n  getAllParticles() {\n    let particles = [];\n    let i = this.emitters.length;\n\n    while (i--) particles = particles.concat(this.emitters[i].particles);\n    return particles;\n  }\n\n  destroyAllEmitters() {\n    Util.destroyAll(this.emitters);\n  }\n\n  /**\n   * Destroys everything related to this Proton instance. This includes all emitters, and all properties\n   *\n   * @method destroy\n   * @memberof Proton\n   * @instance\n   */\n  destroy(remove = false) {\n    const destroyOther = () => {\n      this.time = 0;\n      this.then = 0;\n      this.pool.destroy();\n      this.stats.destroy();\n\n      Util.destroyAll(this.emitters);\n      Util.destroyAll(this.renderers, this.getAllParticles());\n\n      this.integrator = null;\n      this.renderers = null;\n      this.emitters = null;\n      this.stats = null;\n      this.pool = null;\n    };\n\n    if (remove) {\n      setTimeout(destroyOther, 200);\n    } else {\n      destroyOther();\n    }\n  }\n}\n\nEventDispatcher.bind(Proton);\n","export default class Rgb {\n  constructor(r = 255, g = 255, b = 255) {\n    this.r = r;\n    this.g = g;\n    this.b = b;\n  }\n\n  reset() {\n    this.r = 255;\n    this.g = 255;\n    this.b = 255;\n  }\n}\n","export default {\n  hasProp(target, key) {\n    if (!target) return false;\n    return target[key] !== undefined;\n    // return obj.hasOwnProperty(key);\n  },\n\n  /**\n   * set the prototype in a given prototypeObject\n   *\n   * @memberof Proton#Proton.Util\n   * @method setProp\n   *\n   * @todo add description for param `target`\n   * @todo translate desription from chinese to english\n   *\n   * @param {Object} target\n   * @param {Object} prototypeObject An object of single prototypes\n   *\n   * @return {Object} target\n   */\n  setProp(target, props) {\n    for (let prop in props) {\n      if (target.hasOwnProperty(prop)) {\n        target[prop] = Span.getSpanValue(props[prop]);\n      }\n    }\n\n    return target;\n  },\n\n  /**\n   * @memberof Proton#Proton.Util\n   * @method setVectorVal\n   *\n   * @todo add description for param `target`\n   * @todo add description for param `conf`\n   * @todo add description for function\n   *\n   * @param {Object} target\n   * @param {Object} conf\n   */\n  setVectorVal(particle, conf = null) {\n    if (!conf) return;\n\n    if (this.hasProp(conf, \"x\")) particle.p.x = conf[\"x\"];\n    if (this.hasProp(conf, \"y\")) particle.p.y = conf[\"y\"];\n\n    if (this.hasProp(conf, \"vx\")) particle.v.x = conf[\"vx\"];\n    if (this.hasProp(conf, \"vy\")) particle.v.y = conf[\"vy\"];\n\n    if (this.hasProp(conf, \"ax\")) particle.a.x = conf[\"ax\"];\n    if (this.hasProp(conf, \"ay\")) particle.a.y = conf[\"ay\"];\n\n    if (this.hasProp(conf, \"p\")) particle.p.copy(conf[\"p\"]);\n    if (this.hasProp(conf, \"v\")) particle.v.copy(conf[\"v\"]);\n    if (this.hasProp(conf, \"a\")) particle.a.copy(conf[\"a\"]);\n\n    if (this.hasProp(conf, \"position\")) particle.p.copy(conf[\"position\"]);\n    if (this.hasProp(conf, \"velocity\")) particle.v.copy(conf[\"velocity\"]);\n    if (this.hasProp(conf, \"accelerate\")) particle.a.copy(conf[\"accelerate\"]);\n  }\n};\n","import MathUtil from \"./MathUtil\";\n\nexport default {\n  easeLinear(value) {\n    return value;\n  },\n\n  easeInQuad(value) {\n    return Math.pow(value, 2);\n  },\n\n  easeOutQuad(value) {\n    return -(Math.pow(value - 1, 2) - 1);\n  },\n\n  easeInOutQuad(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 2);\n\n    return -0.5 * ((value -= 2) * value - 2);\n  },\n\n  easeInCubic(value) {\n    return Math.pow(value, 3);\n  },\n\n  easeOutCubic(value) {\n    return Math.pow(value - 1, 3) + 1;\n  },\n\n  easeInOutCubic(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 3);\n\n    return 0.5 * (Math.pow(value - 2, 3) + 2);\n  },\n\n  easeInQuart(value) {\n    return Math.pow(value, 4);\n  },\n\n  easeOutQuart(value) {\n    return -(Math.pow(value - 1, 4) - 1);\n  },\n\n  easeInOutQuart(value) {\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(value, 4);\n\n    return -0.5 * ((value -= 2) * Math.pow(value, 3) - 2);\n  },\n\n  easeInSine(value) {\n    return -Math.cos(value * MathUtil.PI_2) + 1;\n  },\n\n  easeOutSine(value) {\n    return Math.sin(value * MathUtil.PI_2);\n  },\n\n  easeInOutSine(value) {\n    return -0.5 * (Math.cos(Math.PI * value) - 1);\n  },\n\n  easeInExpo(value) {\n    return value === 0 ? 0 : Math.pow(2, 10 * (value - 1));\n  },\n\n  easeOutExpo(value) {\n    return value === 1 ? 1 : -Math.pow(2, -10 * value) + 1;\n  },\n\n  easeInOutExpo(value) {\n    if (value === 0) return 0;\n\n    if (value === 1) return 1;\n\n    if ((value /= 0.5) < 1) return 0.5 * Math.pow(2, 10 * (value - 1));\n\n    return 0.5 * (-Math.pow(2, -10 * --value) + 2);\n  },\n\n  easeInCirc(value) {\n    return -(Math.sqrt(1 - value * value) - 1);\n  },\n\n  easeOutCirc(value) {\n    return Math.sqrt(1 - Math.pow(value - 1, 2));\n  },\n\n  easeInOutCirc(value) {\n    if ((value /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - value * value) - 1);\n    return 0.5 * (Math.sqrt(1 - (value -= 2) * value) + 1);\n  },\n\n  easeInBack(value) {\n    let s = 1.70158;\n    return value * value * ((s + 1) * value - s);\n  },\n\n  easeOutBack(value) {\n    let s = 1.70158;\n    return (value = value - 1) * value * ((s + 1) * value + s) + 1;\n  },\n\n  easeInOutBack(value) {\n    let s = 1.70158;\n    if ((value /= 0.5) < 1) return 0.5 * (value * value * (((s *= 1.525) + 1) * value - s));\n    return 0.5 * ((value -= 2) * value * (((s *= 1.525) + 1) * value + s) + 2);\n  },\n\n  getEasing(ease) {\n    if (typeof ease === \"function\") return ease;\n    else return this[ease] || this.easeLinear;\n  }\n};\n","import MathUtil from \"../math/MathUtil\";\n\nexport default class Vector2D {\n  constructor(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n\n  getGradient() {\n    if (this.x !== 0) return Math.atan2(this.y, this.x);\n    else if (this.y > 0) return MathUtil.PI_2;\n    else if (this.y < 0) return -MathUtil.PI_2;\n  }\n\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n\n    return this;\n  }\n\n  add(v, w) {\n    if (w !== undefined) {\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n\n    return this;\n  }\n\n  addXY(a, b) {\n    this.x += a;\n    this.y += b;\n\n    return this;\n  }\n\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n\n    return this;\n  }\n\n  sub(v, w) {\n    if (w !== undefined) {\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n\n    return this;\n  }\n\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n\n    return this;\n  }\n\n  divideScalar(s) {\n    if (s !== 0) {\n      this.x /= s;\n      this.y /= s;\n    } else {\n      this.set(0, 0);\n    }\n\n    return this;\n  }\n\n  multiplyScalar(s) {\n    this.x *= s;\n    this.y *= s;\n\n    return this;\n  }\n\n  negate() {\n    return this.multiplyScalar(-1);\n  }\n\n  dot(v) {\n    return this.x * v.x + this.y * v.y;\n  }\n\n  lengthSq() {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n\n  normalize() {\n    return this.divideScalar(this.length());\n  }\n\n  distanceTo(v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n\n  rotate(tha) {\n    const x = this.x;\n    const y = this.y;\n\n    this.x = x * Math.cos(tha) + y * Math.sin(tha);\n    this.y = -x * Math.sin(tha) + y * Math.cos(tha);\n\n    return this;\n  }\n\n  distanceToSquared(v) {\n    const dx = this.x - v.x;\n    const dy = this.y - v.y;\n\n    return dx * dx + dy * dy;\n  }\n\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n\n    return this;\n  }\n\n  equals(v) {\n    return v.x === this.x && v.y === this.y;\n  }\n\n  clear() {\n    this.x = 0.0;\n    this.y = 0.0;\n    return this;\n  }\n\n  clone() {\n    return new Vector2D(this.x, this.y);\n  }\n}\n","/** @typedef {import('../behaviour/Behaviour')} Behaviour */\n/** @typedef {import('../math/Vector2D')} Vector2D */\n/** @typedef {import('../utils/Rgb')} Rgb */\nimport Rgb from \"../utils/Rgb\";\nimport Puid from \"../utils/Puid\";\nimport Util from \"../utils/Util\";\nimport PropUtil from \"../utils/PropUtil\";\nimport ease from \"../math/ease\";\nimport Vector2D from \"../math/Vector2D\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Particle {\n  /** @type string */\n  id = \"\";\n\n  /** @type {{p:Vector2D,v:Vector2D,a:Vector2D}} */\n  old = null;\n\n  /** @type {object} */\n  data = null;\n\n  /** @type {Behaviour[]} */\n  behaviours = null;\n\n  /** @type {Vector2D} */\n  p = null;\n\n  /** @type {Vector2D} */\n  v = null;\n\n  /** @type {Vector2D} */\n  a = null;\n\n  /** @type {Rgb} */\n  rgb = null;\n\n  /**\n   * the Particle class\n   *\n   * @class Proton.Particle\n   * @constructor\n   * @param {Object} pObj the parameters object;\n   * for example {life:3,dead:false}\n   */\n  constructor(conf) {\n    /**\n     * The particle's id;\n     * @property id\n     * @type {string}\n     */\n    this.name = \"Particle\";\n    this.id = Puid.id(this.name);\n    this.old = {};\n    this.data = {};\n    this.behaviours = [];\n\n    this.p = new Vector2D();\n    this.v = new Vector2D();\n    this.a = new Vector2D();\n    this.old.p = new Vector2D();\n    this.old.v = new Vector2D();\n    this.old.a = new Vector2D();\n\n    this.rgb = new Rgb();\n    this.reset();\n    conf && PropUtil.setProp(this, conf);\n  }\n\n  getDirection() {\n    return Math.atan2(this.v.x, -this.v.y) * MathUtil.N180_PI;\n  }\n\n  reset() {\n    this.life = Infinity;\n    this.age = 0;\n\n    this.dead = false;\n    this.sleep = false;\n    this.body = null;\n    this.sprite = null;\n    this.parent = null;\n\n    this.energy = 1; // Energy Loss\n    this.mass = 1;\n    this.radius = 10;\n    this.alpha = 1;\n    this.scale = 1;\n    this.rotation = 0;\n    this.color = null;\n\n    this.p.set(0, 0);\n    this.v.set(0, 0);\n    this.a.set(0, 0);\n    this.old.p.set(0, 0);\n    this.old.v.set(0, 0);\n    this.old.a.set(0, 0);\n    this.easing = ease.easeLinear;\n\n    this.rgb.reset();\n    Util.emptyObject(this.data);\n    this.removeAllBehaviours();\n\n    return this;\n  }\n\n  update(time, index) {\n    if (!this.sleep) {\n      this.age += time;\n      this.applyBehaviours(time, index);\n    }\n\n    if (this.age < this.life) {\n      const scale = this.easing(this.age / this.life);\n      this.energy = Math.max(1 - scale, 0);\n    } else {\n      this.destroy();\n    }\n  }\n\n  applyBehaviours(time, index) {\n    const length = this.behaviours.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      this.behaviours[i] && this.behaviours[i].applyBehaviour(this, time, index);\n    }\n  }\n\n  /**\n   * @param {Behaviour} behaviour\n   */\n  addBehaviour(behaviour) {\n    this.behaviours.push(behaviour);\n\n    if (behaviour.hasOwnProperty(\"parents\")) behaviour.parents.push(this);\n    behaviour.initialize(this);\n  }\n\n  /**\n   * @param {Behaviour[]} behaviours\n   */\n  addBehaviours(behaviours) {\n    const length = behaviours.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      this.addBehaviour(behaviours[i]);\n    }\n  }\n\n  removeBehaviour(behaviour) {\n    const index = this.behaviours.indexOf(behaviour);\n\n    if (index > -1) {\n      const behaviour = this.behaviours.splice(index, 1);\n      behaviour.parents = null;\n    }\n  }\n\n  removeAllBehaviours() {\n    Util.emptyArray(this.behaviours);\n  }\n\n  /**\n   * Destory this particle\n   * @method destroy\n   */\n  destroy() {\n    this.removeAllBehaviours();\n    this.energy = 0;\n    this.dead = true;\n    this.parent = null;\n  }\n}\n","export default {\n  /**\n   * @typedef  {Object} rgbObject\n   * @property {Number} r red value\n   * @property {Number} g green value\n   * @property {Number} b blue value\n   */\n  /**\n   * converts a hex value to a rgb object\n   *\n   * @memberof Proton#Proton.Util\n   * @method hexToRgb\n   *\n   * @param {String} h any hex value, e.g. #000000 or 000000 for black\n   *\n   * @return {rgbObject}\n   */\n  hexToRgb(h) {\n    const hex16 = h.charAt(0) === \"#\" ? h.substring(1, 7) : h;\n    const r = parseInt(hex16.substring(0, 2), 16);\n    const g = parseInt(hex16.substring(2, 4), 16);\n    const b = parseInt(hex16.substring(4, 6), 16);\n\n    return { r, g, b };\n  },\n\n  /**\n   * converts a rgb value to a rgb string\n   *\n   * @memberof Proton#Proton.Util\n   * @method rgbToHex\n   *\n   * @param {Object | Proton.hexToRgb} rgb a rgb object like in {@link Proton#Proton.}\n   *\n   * @return {String} rgb()\n   */\n  rgbToHex(rbg) {\n    return `rgb(${rbg.r}, ${rbg.g}, ${rbg.b})`;\n  },\n\n  getHex16FromParticle(p) {\n    return Number(p.rgb.r) * 65536 + Number(p.rgb.g) * 256 + Number(p.rgb.b);\n  }\n};\n","import Vector2D from \"./Vector2D\";\n\nexport default class Polar2D {\n  constructor(r, tha) {\n    this.r = Math.abs(r) || 0;\n    this.tha = tha || 0;\n  }\n\n  set(r, tha) {\n    this.r = r;\n    this.tha = tha;\n    return this;\n  }\n\n  setR(r) {\n    this.r = r;\n    return this;\n  }\n\n  setTha(tha) {\n    this.tha = tha;\n    return this;\n  }\n\n  copy(p) {\n    this.r = p.r;\n    this.tha = p.tha;\n    return this;\n  }\n\n  toVector() {\n    return new Vector2D(this.getX(), this.getY());\n  }\n\n  getX() {\n    return this.r * Math.sin(this.tha);\n  }\n\n  getY() {\n    return -this.r * Math.cos(this.tha);\n  }\n\n  normalize() {\n    this.r = 1;\n    return this;\n  }\n\n  equals(v) {\n    return v.r === this.r && v.tha === this.tha;\n  }\n\n  clear() {\n    this.r = 0.0;\n    this.tha = 0.0;\n    return this;\n  }\n\n  clone() {\n    return new Polar2D(this.r, this.tha);\n  }\n}\n","const Mat3 = {\n  create(mat3) {\n    const mat = new Float32Array(9);\n    if (mat3) this.set(mat3, mat);\n\n    return mat;\n  },\n\n  set(mat1, mat2) {\n    for (let i = 0; i < 9; i++) mat2[i] = mat1[i];\n\n    return mat2;\n  },\n\n  multiply(mat, mat2, mat3) {\n    let a00 = mat[0],\n      a01 = mat[1],\n      a02 = mat[2],\n      a10 = mat[3],\n      a11 = mat[4],\n      a20 = mat[6],\n      a21 = mat[7],\n      b00 = mat2[0],\n      b01 = mat2[1],\n      b02 = mat2[2],\n      b10 = mat2[3],\n      b11 = mat2[4],\n      b20 = mat2[6],\n      b21 = mat2[7];\n\n    mat3[0] = b00 * a00 + b01 * a10;\n    mat3[1] = b00 * a01 + b01 * a11;\n    mat3[2] = a02 * b02;\n    mat3[3] = b10 * a00 + b11 * a10;\n    mat3[4] = b10 * a01 + b11 * a11;\n    mat3[6] = b20 * a00 + b21 * a10 + a20;\n    mat3[7] = b20 * a01 + b21 * a11 + a21;\n\n    return mat3;\n  },\n\n  inverse(mat, mat3) {\n    let a00 = mat[0],\n      a01 = mat[1],\n      a10 = mat[3],\n      a11 = mat[4],\n      a20 = mat[6],\n      a21 = mat[7],\n      b01 = a11,\n      b11 = -a10,\n      b21 = a21 * a10 - a11 * a20,\n      d = a00 * b01 + a01 * b11,\n      id;\n\n    id = 1 / d;\n    mat3[0] = b01 * id;\n    mat3[1] = -a01 * id;\n    mat3[3] = b11 * id;\n    mat3[4] = a00 * id;\n    mat3[6] = b21 * id;\n    mat3[7] = (-a21 * a00 + a01 * a20) * id;\n\n    return mat3;\n  },\n\n  multiplyVec2(m, vec, mat3) {\n    let x = vec[0],\n      y = vec[1];\n\n    mat3[0] = x * m[0] + y * m[3] + m[6];\n    mat3[1] = x * m[1] + y * m[4] + m[7];\n\n    return mat3;\n  }\n};\n\nexport default Mat3;\n","import Util from \"../utils/Util\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Span {\n  constructor(a, b, center) {\n    if (Util.isArray(a)) {\n      this.isArray = true;\n      this.a = a;\n    } else {\n      this.isArray = false;\n      this.a = Util.initValue(a, 1);\n      this.b = Util.initValue(b, this.a);\n      this.center = Util.initValue(center, false);\n    }\n  }\n\n  getValue(isInt = false) {\n    if (this.isArray) {\n      return Util.getRandFromArray(this.a);\n    } else {\n      if (!this.center) {\n        return MathUtil.randomAToB(this.a, this.b, isInt);\n      } else {\n        return MathUtil.randomFloating(this.a, this.b, isInt);\n      }\n    }\n  }\n\n  /**\n   * Returns a new Span object\n   *\n   * @memberof Proton#Proton.Util\n   * @method setSpanValue\n   *\n   * @todo a, b and c should be 'Mixed' or 'Number'?\n   *\n   * @param {Mixed | Span} a\n   * @param {Mixed}               b\n   * @param {Mixed}               c\n   *\n   * @return {Span}\n   */\n  static setSpanValue(a, b, c) {\n    if (a instanceof Span) {\n      return a;\n    } else {\n      if (b === undefined) {\n        return new Span(a);\n      } else {\n        if (c === undefined) return new Span(a, b);\n        else return new Span(a, b, c);\n      }\n    }\n  }\n\n  /**\n   * Returns the value from a Span, if the param is not a Span it will return the given parameter\n   *\n   * @memberof Proton#Proton.Util\n   * @method getValue\n   *\n   * @param {Mixed | Span} pan\n   *\n   * @return {Mixed} the value of Span OR the parameter if it is not a Span\n   */\n  static getSpanValue(pan) {\n    return pan instanceof Span ? pan.getValue() : pan;\n  }\n}\n","import Span from \"./Span\";\nimport Util from \"../utils/Util\";\nimport MathUtil from \"./MathUtil\";\n\nexport default class ArraySpan extends Span {\n  constructor(color) {\n    super();\n    this._arr = Util.toArray(color);\n  }\n\n  getValue() {\n    const val = Util.getRandFromArray(this._arr);\n    return val === \"random\" || val === \"Random\" ? MathUtil.randomColor() : val;\n  }\n\n  /**\n   * Make sure that the color is an instance of Proton.ArraySpan, if not it makes a new instance\n   *\n   * @method setSpanValue\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  static createArraySpan(arr) {\n    if (!arr) return null;\n\n    if (arr instanceof ArraySpan) return arr;\n    else return new ArraySpan(arr);\n  }\n}\n","export default class Rectangle {\n  constructor(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n\n    this.width = w;\n    this.height = h;\n\n    this.bottom = this.y + this.height;\n    this.right = this.x + this.width;\n  }\n\n  contains(x, y) {\n    if (x <= this.right && x >= this.x && y <= this.bottom && y >= this.y) return true;\n    else return false;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\n\nexport default class Rate {\n  /**\n   * The number of particles per second emission (a [particle]/b [s]);\n   * @namespace\n   * @memberof! Proton#\n   * @constructor\n   * @alias Rate\n   *\n   * @param {Array | Number | Span} numpan the number of each emission;\n   * @param {Array | Number | Span} timepan the time of each emission;\n   * for example: new Rate(new Span(10, 20), new Span(.1, .25));\n   */\n  constructor(numpan, timepan) {\n    this.numPan = Span.setSpanValue(Util.initValue(numpan, 1));\n    this.timePan = Span.setSpanValue(Util.initValue(timepan, 1));\n\n    this.startTime = 0;\n    this.nextTime = 0;\n    this.init();\n  }\n\n  init() {\n    this.startTime = 0;\n    this.nextTime = this.timePan.getValue();\n  }\n\n  getValue(time) {\n    this.startTime += time;\n\n    if (this.startTime >= this.nextTime) {\n      this.startTime = 0;\n      this.nextTime = this.timePan.getValue();\n\n      if (this.numPan.b === 1) {\n        if (this.numPan.getValue(false) > 0.5) return 1;\n        else return 0;\n      } else {\n        return this.numPan.getValue(true);\n      }\n    }\n\n    return 0;\n  }\n}\n","export default class Initialize {\n  reset() {}\n\n  init(emitter, particle) {\n    if (particle) {\n      this.initialize(particle);\n    } else {\n      this.initialize(emitter);\n    }\n  }\n\n  // sub class init\n  initialize(target) {}\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Life extends Initialize {\n  constructor(a, b, c) {\n    super();\n\n    this.lifePan = Span.setSpanValue(a, b, c);\n    this.name = \"Life\";\n  }\n\n  initialize(target) {\n    if (this.lifePan.a === Infinity) target.life = Infinity;\n    else target.life = this.lifePan.getValue();\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\n\nexport default class Zone {\n  constructor() {\n    this.vector = new Vector2D(0, 0);\n    this.random = 0;\n    this.crossType = \"dead\";\n    this.alert = true;\n  }\n\n  getPosition() {}\n\n  crossing(particle) {}\n\n  destroy() {\n    this.vector = null;\n  }\n}\n","import Zone from \"./Zone\";\n\nexport default class PointZone extends Zone {\n  constructor(x, y) {\n    super();\n\n    this.x = x;\n    this.y = y;\n  }\n\n  getPosition() {\n    this.vector.x = this.x;\n    this.vector.y = this.y;\n\n    return this.vector;\n  }\n\n  crossing(particle) {\n    if (this.alert) {\n      console.error(\"Sorry, PointZone does not support crossing method!\");\n      this.alert = false;\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport PointZone from \"../zone/PointZone\";\nimport Initialize from \"./Initialize\";\n\nexport default class Position extends Initialize {\n  constructor(zone) {\n    super();\n    this.zone = Util.initValue(zone, new PointZone());\n    this.name = \"Position\";\n  }\n\n  reset(zone) {\n    this.zone = Util.initValue(zone, new PointZone());\n  }\n\n  initialize(target) {\n    this.zone.getPosition();\n\n    target.p.x = this.zone.vector.x;\n    target.p.y = this.zone.vector.y;\n  }\n}\n","import Proton from \"../core/Proton\";\nimport Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\nimport Initialize from \"./Initialize\";\nimport Polar2D from \"../math/Polar2D\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class Velocity extends Initialize {\n  constructor(rpan, thapan, type) {\n    super();\n\n    this.rPan = Span.setSpanValue(rpan);\n    this.thaPan = Span.setSpanValue(thapan);\n    this.type = Util.initValue(type, \"vector\");\n\n    this.name = \"Velocity\";\n  }\n\n  reset(rpan, thapan, type) {\n    this.rPan = Span.setSpanValue(rpan);\n    this.thaPan = Span.setSpanValue(thapan);\n    this.type = Util.initValue(type, \"vector\");\n  }\n\n  normalizeVelocity(vr) {\n    return vr * Proton.MEASURE;\n  }\n\n  initialize(target) {\n    if (this.type === \"p\" || this.type === \"P\" || this.type === \"polar\") {\n      const polar2d = new Polar2D(\n        this.normalizeVelocity(this.rPan.getValue()),\n        this.thaPan.getValue() * MathUtil.PI_180\n      );\n\n      target.v.x = polar2d.getX();\n      target.v.y = polar2d.getY();\n    } else {\n      target.v.x = this.normalizeVelocity(this.rPan.getValue());\n      target.v.y = this.normalizeVelocity(this.thaPan.getValue());\n    }\n  }\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Mass extends Initialize {\n  constructor(a, b, c) {\n    super();\n    this.massPan = Span.setSpanValue(a, b, c);\n    this.name = \"Mass\";\n  }\n\n  initialize(target) {\n    target.mass = this.massPan.getValue();\n  }\n}\n","import Span from \"../math/Span\";\nimport Initialize from \"./Initialize\";\n\nexport default class Radius extends Initialize {\n  constructor(a, b, c) {\n    super();\n    this.radius = Span.setSpanValue(a, b, c);\n\n    this.name = \"Radius\";\n  }\n\n  reset(a, b, c) {\n    this.radius = Span.setSpanValue(a, b, c);\n  }\n\n  initialize(particle) {\n    particle.radius = this.radius.getValue();\n    particle.data.oldRadius = particle.radius;\n  }\n}\n","import Util from \"../utils/Util\";\nimport ArraySpan from \"../math/ArraySpan\";\nimport Initialize from \"./Initialize\";\n\nexport default class Body extends Initialize {\n  constructor(image, w, h) {\n    super();\n\n    this.image = this.setSpanValue(image);\n    this.w = Util.initValue(w, 20);\n    this.h = Util.initValue(h, this.w);\n    this.name = \"Body\";\n  }\n\n  initialize(particle) {\n    const imageTarget = this.image.getValue();\n\n    if (typeof imageTarget === \"string\") {\n      particle.body = {\n        width: this.w,\n        height: this.h,\n        src: imageTarget,\n        isInner: true,\n        inner: true\n      };\n    } else {\n      particle.body = imageTarget;\n    }\n  }\n\n  setSpanValue(image) {\n    return image instanceof ArraySpan ? image : new ArraySpan(image);\n  }\n}\n","import Proton from \"../core/Proton\";\nimport Util from \"../utils/Util\";\nimport ease from \"../math/ease\";\n\nexport default class Behaviour {\n  static id = 0;\n\n  /**\n   * The Behaviour class is the base for the other Behaviour\n   *\n   * @memberof! -\n   * @interface\n   * @alias Proton.Behaviour\n   *\n   * @param {Number} life \tthe behaviours life\n   * @param {String} easing \tThe behaviour's decaying trend, for example ease.easeOutQuart\n   *\n   * @property {String}  id \t\tThe behaviours id\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   * @property {Number}  age=0 \tHow long the particle should be 'alife'\n   * @property {Number}  energy=1\n   * @property {Boolean} dead=false The particle is dead at first\n   * @property {Array}   parents \tThe behaviour's parents array\n   * @property {String}  name \tThe behaviour name\n   */\n  constructor(life, easing) {\n    this.life = Util.initValue(life, Infinity);\n    this.easing = ease.getEasing(easing);\n\n    this.age = 0;\n    this.energy = 1;\n    this.dead = false;\n    this.parents = [];\n\n    this.id = `Behaviour_${Behaviour.id++}`;\n    this.name = \"Behaviour\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton.Behaviour\n   * @instance\n   *\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(life, easing) {\n    this.life = Util.initValue(life, Infinity);\n    this.easing = ease.getEasing(easing);\n  }\n\n  /**\n   * Normalize a force by 1:100;\n   *\n   * @method normalizeForce\n   * @memberof Proton.Behaviour\n   * @instance\n   *\n   * @param {Proton.Vector2D} force\n   */\n  normalizeForce(force) {\n    return force.multiplyScalar(Proton.MEASURE);\n  }\n\n  /**\n   * Normalize a value by 1:100;\n   *\n   * @method normalizeValue\n   * @memberof Proton.Behaviour\n   * @instance\n   *\n   * @param {Number} value\n   */\n  normalizeValue(value) {\n    return value * Proton.MEASURE;\n  }\n\n  /**\n   * Initialize the behaviour's parameters for all particles\n   *\n   * @method initialize\n   * @memberof Proton.Behaviour\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   */\n  initialize(particle) {}\n\n  /**\n   * computing life cycle\n   *\n   * @method calculate\n   * @memberof Proton.Behaviour\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  calculate(particle, time, index) {\n    this.age += time;\n\n    if (this.age >= this.life || this.dead) {\n      this.energy = 0;\n      this.dead = true;\n      this.destroy();\n    } else {\n      const scale = this.easing(particle.age / particle.life);\n      this.energy = Math.max(1 - scale, 0);\n    }\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n  }\n\n  /**\n   * Destory this behaviour\n   *\n   * @method destroy\n   * @memberof Proton.Behaviour\n   * @instance\n   */\n  destroy() {\n    let i = this.parents.length;\n    while (i--) {\n      this.parents[i].removeBehaviour(this);\n    }\n\n    this.parents.length = 0;\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Force extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Force\n   *\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(fx, fy, life, easing) {\n    super(life, easing);\n\n    this.force = this.normalizeForce(new Vector2D(fx, fy));\n    this.name = \"Force\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Force\n   * @instance\n   *\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(fx, fy, life, easing) {\n    this.force = this.normalizeForce(new Vector2D(fx, fy));\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Force\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n    particle.a.add(this.force);\n  }\n}\n","import Util from \"../utils/Util\";\nimport Vector2D from \"../math/Vector2D\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Attraction extends Behaviour {\n  /**\n   * This behaviour let the particles follow one specific Proton.Vector2D\n   *\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Attraction\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {Proton.Vector2D} targetPosition\n   * @property {Number} radius\n   * @property {Number} force\n   * @property {Number} radiusSq\n   * @property {Proton.Vector2D} attractionForce\n   * @property {Number} lengthSq\n   * @property {String} name The Behaviour name\n   */\n  constructor(targetPosition, force, radius, life, easing) {\n    super(life, easing);\n\n    this.targetPosition = Util.initValue(targetPosition, new Vector2D());\n    this.radius = Util.initValue(radius, 1000);\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector2D();\n    this.lengthSq = 0;\n\n    this.name = \"Attraction\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Attraction\n   * @instance\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(targetPosition, force, radius, life, easing) {\n    this.targetPosition = Util.initValue(targetPosition, new Vector2D());\n    this.radius = Util.initValue(radius, 1000);\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    this.radiusSq = this.radius * this.radius;\n    this.attractionForce = new Vector2D();\n    this.lengthSq = 0;\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @memberof Proton#Proton.Attraction\n   * @method applyBehaviour\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    this.attractionForce.copy(this.targetPosition);\n    this.attractionForce.sub(particle.p);\n    this.lengthSq = this.attractionForce.lengthSq();\n\n    if (this.lengthSq > 0.00004 && this.lengthSq < this.radiusSq) {\n      this.attractionForce.normalize();\n      this.attractionForce.multiplyScalar(1 - this.lengthSq / this.radiusSq);\n      this.attractionForce.multiplyScalar(this.force);\n\n      particle.a.add(this.attractionForce);\n    }\n  }\n}\n","import Vector2D from \"../math/Vector2D\";\nimport MathUtil from \"../math/MathUtil\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class RandomDrift extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Behaviour\n   * @constructor\n   * @alias RandomDrift\n   *\n   * @param {Number} driftX \t\t\t\tX value of the new Vector2D\n   * @param {Number} driftY  \t\t\t\tY value of the new Vector2D\n   * @param {Number} delay \t\t\t\tHow much delay the drift should have\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   *\n   * @property {Number} time The time of the drift\n   * @property {String} name The Behaviour name\n   */\n  constructor(driftX, driftY, delay, life, easing) {\n    super(life, easing);\n\n    this.reset(driftX, driftY, delay);\n    this.time = 0;\n    this.name = \"RandomDrift\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#RandomDrift\n   * @instance\n   *\n   * @param {Number} driftX \t\t\t\tX value of the new Vector2D\n   * @param {Number} driftY  \t\t\t\tY value of the new Vector2D\n   * @param {Number} delay \t\t\t\tHow much delay the drift should have\n   * @param {Number} [life=Infinity] \t\tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(driftX, driftY, delay, life, easing) {\n    this.panFoce = new Vector2D(driftX, driftY);\n    this.panFoce = this.normalizeForce(this.panFoce);\n    this.delay = delay;\n\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    particle.data.time = 0;\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#RandomDrift\n   * @instance\n   *\n   * @param {Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n    particle.data.time += time;\n\n    if (particle.data.time >= this.delay) {\n      particle.a.addXY(\n        MathUtil.randomAToB(-this.panFoce.x, this.panFoce.x),\n        MathUtil.randomAToB(-this.panFoce.y, this.panFoce.y)\n      );\n\n      particle.data.time = 0;\n    }\n  }\n}\n","import Force from \"./Force\";\n\nexport default class Gravity extends Force {\n  /**\n   * @memberof! Proton#\n   * @augments Proton#Proton.Force\n   * @constructor\n   * @alias Proton.Gravity\n   *\n   * @param {Number} g \t\t\t\t\t\t\tGravity\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(g, life, easing) {\n    super(0, g, life, easing);\n    this.name = \"Gravity\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Gravity\n   * @instance\n   *\n   * @param {Number} g \t\t\t\t\t\t\tGravity\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(g, life, easing) {\n    super.reset(0, g, life, easing);\n  }\n}\n","import Util from \"../utils/Util\";\nimport Vector2D from \"../math/Vector2D\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Collision extends Behaviour {\n  /**\n   * The callback after collision\n   *\n   * @callback Callback\n   *\n   * @param {Proton.Particle} particle\n   * @param {Proton.Paritcle} otherParticle\n   */\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Collision\n   *\n   * @todo add description to mass\n   *\n   * @param {Proton.Emitter} \t[emitter=null] \t\tthe attraction point coordinates\n   * @param {Boolean} \t\t[mass=true]\n   * @param {Callback}\t \t[callback=null]\t\tthe callback after the collision\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(emitter, mass, callback, life, easing) {\n    super(life, easing);\n    this.reset(emitter, mass, callback);\n    this.newPool = [];\n    this.pool = [];\n    this.name = \"Collision\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @memberof Proton#Proton.Collision\n   * @method reset\n   * @instance\n   *\n   * @todo add description to mass\n   *\n   * @param {Proton.Emitter} \t[emitter=null] \t\tthe attraction point coordinates\n   * @param {Boolean} \t\t[mass=true]\n   * @param {Callback}\t \t[callback=null]\t\tthe callback after the collision\n   * @param {Number} \t\t\t[life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(emitter, mass, callback, life, easing) {\n    this.emitter = Util.initValue(emitter, null);\n    this.mass = Util.initValue(mass, true);\n    this.callback = Util.initValue(callback, null);\n\n    this.collisionPool = [];\n    this.delta = new Vector2D();\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @memberof Proton#Proton.Collision\n   * @method applyBehaviour\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    if (this.emitter) {\n      Util.sliceArray(this.emitter.particles, index, this.newPool);\n    } else {\n      Util.sliceArray(this.pool, index, this.newPool);\n    }\n\n    const length = this.newPool.length;\n    let otherParticle;\n    let lengthSq;\n    let overlap;\n    let totalMass;\n    let averageMass1, averageMass2;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      otherParticle = this.newPool[i];\n\n      if (otherParticle !== particle) {\n        this.delta.copy(otherParticle.p);\n        this.delta.sub(particle.p);\n\n        lengthSq = this.delta.lengthSq();\n        const distance = particle.radius + otherParticle.radius;\n\n        if (lengthSq <= distance * distance) {\n          overlap = distance - Math.sqrt(lengthSq);\n          overlap += 0.5;\n\n          totalMass = particle.mass + otherParticle.mass;\n          averageMass1 = this.mass ? otherParticle.mass / totalMass : 0.5;\n          averageMass2 = this.mass ? particle.mass / totalMass : 0.5;\n\n          particle.p.add(\n            this.delta\n              .clone()\n              .normalize()\n              .multiplyScalar(overlap * -averageMass1)\n          );\n          otherParticle.p.add(this.delta.normalize().multiplyScalar(overlap * averageMass2));\n\n          this.callback && this.callback(particle, otherParticle);\n        }\n      }\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class CrossZone extends Behaviour {\n  /**\n   * Defines what happens if the particles come to the end of the specified zone\n   *\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.CrossZone\n   *\n   * @param {Proton.Zone} zone \t\t\t\t\t\tcan be any Proton.Zone - e.g. Proton.RectZone()\n   * @param {String} \t\t[crossType=dead] \t\t\twhat happens if the particles pass the zone - allowed strings: dead | bound | cross\n   * @param {Number} \t\t[life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} \t\t[easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(zone, crossType, life, easing) {\n    super(life, easing);\n\n    this.reset(zone, crossType);\n    this.name = \"CrossZone\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.CrossZone\n   * @instance\n   *\n   * @param {Proton.Zone} zone \t\t\t\tcan be any Proton.Zone - e.g. Proton.RectZone()\n   * @param {String} \t\t[crossType=dead] \twhat happens if the particles pass the zone - allowed strings: dead | bound | cross\n   * @param {Number} \t\t[life=Infinity] \tthis behaviour's life\n   * @param {String} \t\t[easing=easeLinear]\tthis behaviour's easing\n   */\n  reset(zone, crossType, life, easing) {\n    this.zone = zone;\n    this.zone.crossType = Util.initValue(crossType, \"dead\");\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.CrossZone\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n    this.zone.crossing(particle);\n  }\n}\n","import Util from \"../utils/Util\";\nimport Span from \"../math/Span\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Alpha extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Alpha\n   *\n   * @todo add description for 'a' and 'b'\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Alpha\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @todo add description for 'a' and 'b'\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, life, easing) {\n    this.same = b === null || b === undefined ? true : false;\n    this.a = Span.setSpanValue(Util.initValue(a, 1));\n    this.b = Span.setSpanValue(b);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Sets the new alpha value of the particle\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @param {Proton.Particle} particle A single Proton generated particle\n   */\n  initialize(particle) {\n    particle.data.alphaA = this.a.getValue();\n\n    if (this.same) particle.data.alphaB = particle.data.alphaA;\n    else particle.data.alphaB = this.b.getValue();\n  }\n\n  /**\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Alpha\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    particle.alpha = particle.data.alphaB + (particle.data.alphaA - particle.data.alphaB) * this.energy;\n\n    if (particle.alpha < 0.001) particle.alpha = 0;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Scale extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Scale\n   *\n   * @todo add description for 'a' and 'b'\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Scale\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Scale\n   * @instance\n   *\n   * @param {Number} a\n   * @param {String} b\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, life, easing) {\n    this.same = b === null || b === undefined ? true : false;\n    this.a = Span.setSpanValue(Util.initValue(a, 1));\n    this.b = Span.setSpanValue(b);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initialize the behaviour's parameters for all particles\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Scale\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   */\n  initialize(particle) {\n    particle.data.scaleA = this.a.getValue();\n    particle.data.oldRadius = particle.radius;\n    particle.data.scaleB = this.same ? particle.data.scaleA : this.b.getValue();\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Scale\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n    particle.scale = particle.data.scaleB + (particle.data.scaleA - particle.data.scaleB) * this.energy;\n\n    if (particle.scale < 0.0001) particle.scale = 0;\n    particle.radius = particle.data.oldRadius * particle.scale;\n  }\n}\n","import Span from \"../math/Span\";\nimport Util from \"../utils/Util\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Rotate extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Rotate\n   *\n   * @todo add description for 'a', 'b' and 'style'\n   *\n   * @param {String} [influence=Velocity] The rotation's influence\n   * @param {String} b\n   * @param {String} [style=to]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(influence, b, style, life, easing) {\n    super(life, easing);\n\n    this.reset(influence, b, style);\n    this.name = \"Rotate\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Rotate\n   * @instance\n   *\n   * @todo add description for 'a', 'b' and 'style'\n   *\n   * @param {String} a\n   * @param {String} b\n   * @param {String} [style=to]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, style, life, easing) {\n    this.same = b === null || b === undefined ? true : false;\n\n    this.a = Span.setSpanValue(Util.initValue(a, \"Velocity\"));\n    this.b = Span.setSpanValue(Util.initValue(b, 0));\n    this.style = Util.initValue(style, \"to\");\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initialize the behaviour's parameters for all particles\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Rotate\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   */\n  initialize(particle) {\n    particle.rotation = this.a.getValue();\n    particle.data.rotationA = this.a.getValue();\n\n    if (!this.same) particle.data.rotationB = this.b.getValue();\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Rotate\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} \t\t\ttime the integrate time 1/ms\n   * @param {Int} \t\t\tindex the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    if (!this.same) {\n      if (this.style === \"to\" || this.style === \"TO\" || this.style === \"_\") {\n        particle.rotation +=\n          particle.data.rotationB + (particle.data.rotationA - particle.data.rotationB) * this.energy;\n      } else {\n        particle.rotation += particle.data.rotationB;\n      }\n    } else if (this.a.a === \"V\" || this.a.a === \"Velocity\" || this.a.a === \"v\") {\n      // beta...\n      particle.rotation = particle.getDirection();\n    }\n  }\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport ArraySpan from \"../math/ArraySpan\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class Color extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Color\n   *\n   * @param {Proton.ArraySpan | String} a the string should be a hex e.g. #000000 for black\n   * @param {Proton.ArraySpan | String} b the string should be a hex e.g. #000000 for black\n   * @param {Number} [life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(a, b, life, easing) {\n    super(life, easing);\n\n    this.reset(a, b);\n    this.name = \"Color\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.ArraySpan | String} a the string should be a hex e.g. #000000 for black\n   * @param {Proton.ArraySpan | String} b the string should be a hex e.g. #000000 for black\n   * @param {Number} [life=Infinity] \tthis behaviour's life\n   * @param {String} [easing=easeLinear] \tthis behaviour's easing\n   */\n  reset(a, b, life, easing) {\n    this.a = ArraySpan.createArraySpan(a);\n    this.b = ArraySpan.createArraySpan(b);\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * Initialize the behaviour's parameters for all particles\n   *\n   * @method initialize\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   */\n  initialize(particle) {\n    particle.color = this.a.getValue();\n    particle.data.colorA = ColorUtil.hexToRgb(particle.color);\n\n    if (this.b) particle.data.colorB = ColorUtil.hexToRgb(this.b.getValue());\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Color\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    if (this.b) {\n      this.calculate(particle, time, index);\n\n      particle.rgb.r = particle.data.colorB.r + (particle.data.colorA.r - particle.data.colorB.r) * this.energy;\n      particle.rgb.g = particle.data.colorB.g + (particle.data.colorA.g - particle.data.colorB.g) * this.energy;\n      particle.rgb.b = particle.data.colorB.b + (particle.data.colorA.b - particle.data.colorB.b) * this.energy;\n\n      particle.rgb.r = particle.rgb.r << 0;\n      particle.rgb.g = particle.rgb.g << 0;\n      particle.rgb.b = particle.rgb.b << 0;\n    } else {\n      particle.rgb.r = particle.data.colorA.r;\n      particle.rgb.g = particle.data.colorA.g;\n      particle.rgb.b = particle.data.colorA.b;\n    }\n  }\n}\n","import MathUtil from \"../math/MathUtil\";\nimport Vector2D from \"../math/Vector2D\";\nimport Span from \"../math/Span\";\nimport Behaviour from \"./Behaviour\";\n\nconst CHANGING = \"changing\";\n\nexport default class Cyclone extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Proton.Behaviour\n   * @constructor\n   * @alias Proton.Cyclone\n   *\n   * @param {Number} angle\n   * @param {Number} force\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(angle, force, life, easing) {\n    super(life, easing);\n    this.setAngleAndForce(angle, force);\n    this.name = \"Cyclone\";\n  }\n\n  setAngleAndForce(angle, force) {\n    this.force = CHANGING;\n    this.angle = MathUtil.PI / 2;\n\n    if (angle === \"right\") {\n      this.angle = MathUtil.PI / 2;\n    } else if (angle === \"left\") {\n      this.angle = -MathUtil.PI / 2;\n    } else if (angle === \"random\") {\n      this.angle = \"random\";\n    } else if (angle instanceof Span) {\n      this.angle = \"span\";\n      this.span = angle;\n    } else if (angle) {\n      this.angle = angle;\n    }\n\n    if (\n      String(force).toLowerCase() === \"changing\" ||\n      String(force).toLowerCase() === \"chang\" ||\n      String(force).toLowerCase() === \"auto\"\n    ) {\n      this.force = CHANGING;\n    } else if (force) {\n      this.force = force;\n    }\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Cyclone\n   * @instance\n   *\n   * @param {Number} angle\n   * @param {Number} force\n   * @param {Number} [life=Infinity] \t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(angle, force, life, easing) {\n    this.angle = MathUtil.PI / 2;\n    this.setAngleAndForce(angle, force);\n    life && super.reset(life, easing);\n  }\n\n  initialize(particle) {\n    if (this.angle === \"random\") {\n      particle.data.cangle = MathUtil.randomAToB(-MathUtil.PI, MathUtil.PI);\n    } else if (this.angle === \"span\") {\n      particle.data.cangle = this.span.getValue();\n    }\n\n    particle.data.cyclone = new Vector2D(0, 0);\n  }\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#Proton.Cyclone\n   * @instance\n   *\n   * @param {Proton.Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.calculate(particle, time, index);\n\n    let length;\n    let gradient = particle.v.getGradient();\n    if (this.angle === \"random\" || this.angle === \"span\") {\n      gradient += particle.data.cangle;\n    } else {\n      gradient += this.angle;\n    }\n\n    if (this.force === CHANGING) {\n      length = particle.v.length() / 100;\n    } else {\n      length = this.force;\n    }\n\n    particle.data.cyclone.x = length * Math.cos(gradient);\n    particle.data.cyclone.y = length * Math.sin(gradient);\n    particle.data.cyclone = this.normalizeForce(particle.data.cyclone);\n    particle.a.add(particle.data.cyclone);\n  }\n}\n","import Attraction from \"./Attraction\";\n\nexport default class Repulsion extends Attraction {\n  /**\n   * The oppisite of Proton.Attraction - turns the force\n   *\n   * @memberof! Proton#\n   * @augments Proton#Proton.Attraction\n   * @constructor\n   * @alias Proton.Repulsion\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   *\n   * @property {Number} force\n   * @property {String} name The Behaviour name\n   */\n  constructor(targetPosition, force, radius, life, easing) {\n    super(targetPosition, force, radius, life, easing);\n\n    this.force *= -1;\n    this.name = \"Repulsion\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#Proton.Repulsion\n   * @instance\n   *\n   * @todo add description for 'force' and 'radius'\n   *\n   * @param {Proton.Vector2D} targetPosition the attraction point coordinates\n   * @param {Number} [force=100]\n   * @param {Number} [radius=1000]\n   * @param {Number} [life=Infinity] \t\t\t\tthis behaviour's life\n   * @param {String} [easing=ease.easeLinear] \tthis behaviour's easing\n   */\n  reset(targetPosition, force, radius, life, easing) {\n    super.reset(targetPosition, force, radius, life, easing);\n    this.force *= -1;\n  }\n}\n","import Util from \"../utils/Util\";\nimport Vector2D from \"../math/Vector2D\";\nimport Behaviour from \"./Behaviour\";\n\nexport default class GravityWell extends Behaviour {\n  /**\n   * @memberof! Proton#\n   * @augments Behaviour\n   * @constructor\n   * @alias GravityWell\n   *\n   * @param {Vector2D} [centerPoint=new Vector2D] The point in the center\n   * @param {Number} [force=100]\t\t\t\t\tThe force\n   * @param {Number} [life=Infinity]\t\t\t\tthis behaviour's life\n   * @param {String} [easing=easeLinear]\tthis behaviour's easing\n   *\n   * @property {String} name The Behaviour name\n   */\n  constructor(centerPoint, force, life, easing) {\n    super(life, easing);\n\n    this.distanceVec = new Vector2D();\n    this.centerPoint = Util.initValue(centerPoint, new Vector2D());\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    this.name = \"GravityWell\";\n  }\n\n  /**\n   * Reset this behaviour's parameters\n   *\n   * @method reset\n   * @memberof Proton#GravityWell\n   * @instance\n   *\n   * @param {Vector2D} [centerPoint=new Vector2D] The point in the center\n   * @param {Number} [force=100]\t\t\t\t\tThe force\n   * @param {Number} [life=Infinity]\t\t\t\tthis behaviour's life\n   * @param {String} [easing=easeLinear]\tthis behaviour's easing\n   */\n  reset(centerPoint, force, life, easing) {\n    this.distanceVec = new Vector2D();\n    this.centerPoint = Util.initValue(centerPoint, new Vector2D());\n    this.force = Util.initValue(this.normalizeValue(force), 100);\n\n    life && super.reset(life, easing);\n  }\n\n  /**\n   * @inheritdoc\n   */\n  initialize(particle) {}\n\n  /**\n   * Apply this behaviour for all particles every time\n   *\n   * @method applyBehaviour\n   * @memberof Proton#GravityWell\n   * @instance\n   *\n   * @param {Particle} particle\n   * @param {Number} the integrate time 1/ms\n   * @param {Int} the particle index\n   */\n  applyBehaviour(particle, time, index) {\n    this.distanceVec.set(this.centerPoint.x - particle.p.x, this.centerPoint.y - particle.p.y);\n    const distanceSq = this.distanceVec.lengthSq();\n\n    if (distanceSq !== 0) {\n      const distance = this.distanceVec.length();\n      const factor = (this.force * time) / (distanceSq * distance);\n\n      particle.v.x += factor * this.distanceVec.x;\n      particle.v.y += factor * this.distanceVec.y;\n    }\n  }\n}\n","import PropUtil from \"../utils/PropUtil\";\nimport Initialize from \"./Initialize\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default {\n  initialize(emitter, particle, initializes) {\n    const length = initializes.length;\n    let i;\n\n    for (i = 0; i < length; i++) {\n      if (initializes[i] instanceof Initialize) {\n        initializes[i].init(emitter, particle);\n      } else {\n        this.init(emitter, particle, initializes[i]);\n      }\n    }\n\n    this.bindEmitter(emitter, particle);\n  },\n\n  // init\n  init(emitter, particle, initialize) {\n    PropUtil.setProp(particle, initialize);\n    PropUtil.setVectorVal(particle, initialize);\n  },\n\n  bindEmitter(emitter, particle) {\n    if (emitter.bindEmitter) {\n      particle.p.add(emitter.p);\n      particle.v.add(emitter.v);\n      particle.a.add(emitter.a);\n      particle.v.rotate(MathUtil.degreeTransform(emitter.rotation));\n    }\n  }\n};\n","import Util from \"../utils/Util\";\nimport Puid from \"../utils/Puid\";\nimport Particle from \"../core/Particle\";\nimport EventDispatcher from \"../events/EventDispatcher\";\n\nimport Rate from \"../initialize/Rate\";\nimport InitializeUtil from \"../initialize/InitializeUtil\";\n\nexport default class Emitter extends Particle {\n  /**\n   * You can use this emit particles.\n   *\n   * It will dispatch follow events:\n   * PARTICLE_CREATED\n   * PARTICLE_UPDATA\n   * PARTICLE_DEAD\n   *\n   * @class Emitter\n   * @constructor\n   * @param {Object} conf the parameters object;\n   * for example {damping:0.01,bindEmitter:false}\n   */\n  constructor(conf = {}) {\n    super(conf);\n\n    this.particles = [];\n    this.behaviours = [];\n    this.initializes = [];\n\n    this.emitTime = 0;\n    this.emitSpeed = 0;\n    this.totalTime = -1;\n\n    /**\n     * The friction coefficient for all particle emit by This;\n     * @property damping\n     * @type {Number}\n     * @default 0.006\n     */\n    this.damping = 0.006;\n\n    /**\n     * If bindEmitter the particles can bind this emitter's property;\n     * @property bindEmitter\n     * @type {Boolean}\n     * @default true\n     */\n    this.bindEmitter = true;\n\n    /**\n     * The number of particles per second emit (a [particle]/b [s]);\n     * @property rate\n     * @type {Rate}\n     * @default Rate(1, .1)\n     */\n    this.rate = new Rate(1, 0.1);\n\n    this.name = \"Emitter\";\n    this.id = Puid.id(this.name);\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   * @param {Number} emitTime begin emit time;\n   * @param {String} life the life of this emitter\n   */\n  emit(totalTime, life) {\n    this.stoped = false;\n    this.emitTime = 0;\n    this.totalTime = Util.initValue(totalTime, Infinity);\n\n    if (life === true || life === \"life\" || life === \"destroy\") {\n      this.life = totalTime === \"once\" ? 1 : this.totalTime;\n    } else if (!isNaN(life)) {\n      this.life = life;\n    }\n\n    this.rate.init();\n  }\n\n  /**\n   * stop emiting\n   * @method stop\n   */\n  stop() {\n    this.totalTime = -1;\n    this.emitTime = 0;\n    this.stoped = true;\n  }\n\n  preEmit(time) {\n    let oldStoped = this.stoped;\n    let oldEmitTime = this.emitTime;\n    let oldTotalTime = this.totalTime;\n\n    this.stoped = false;\n    this.emitTime = 0;\n    this.totalTime = time;\n    this.rate.init();\n\n    const step = 0.0167;\n    while (time > step) {\n      time -= step;\n      this.update(step);\n    }\n\n    this.stoped = oldStoped;\n    this.emitTime = oldEmitTime + Math.max(time, 0);\n    this.totalTime = oldTotalTime;\n  }\n\n  /**\n   * remove current all particles\n   * @method removeAllParticles\n   */\n  removeAllParticles() {\n    let i = this.particles.length;\n    while (i--) this.particles[i].dead = true;\n  }\n\n  /**\n   * add initialize to this emitter\n   * @method addSelfInitialize\n   */\n  addSelfInitialize(initialize) {\n    if (initialize[\"init\"]) {\n      initialize.init(this);\n    } else {\n      // this.initAll();\n    }\n  }\n\n  /**\n   * add the Initialize to particles;\n   *\n   * you can use initializes array:for example emitter.addInitialize(initialize1,initialize2,initialize3);\n   * @method addInitialize\n   * @param {Initialize} initialize like this new Radius(1, 12)\n   */\n  addInitialize(...rest) {\n    let i = rest.length;\n    while (i--) this.initializes.push(rest[i]);\n  }\n\n  /**\n   * remove the Initialize\n   * @method removeInitialize\n   * @param {Initialize} initialize a initialize\n   */\n  removeInitialize(initializer) {\n    const index = this.initializes.indexOf(initializer);\n    if (index > -1) this.initializes.splice(index, 1);\n  }\n\n  /**\n   * remove all Initializes\n   * @method removeInitializers\n   */\n  removeAllInitializers() {\n    Util.emptyArray(this.initializes);\n  }\n\n  /**\n   * add the Behaviour to particles;\n   *\n   * you can use Behaviours array:emitter.addBehaviour(Behaviour1,Behaviour2,Behaviour3);\n   * @method addBehaviour\n   * @param {Behaviour} behaviour like this new Color('random')\n   */\n  addBehaviour(...rest) {\n    let i = arguments.length;\n    while (i--) {\n      let behaviour = rest[i];\n      this.behaviours.push(behaviour);\n      if (behaviour.parents) behaviour.parents.push(this);\n    }\n  }\n\n  /**\n   * remove the Behaviour\n   * @method removeBehaviour\n   * @param {Behaviour} behaviour a behaviour\n   */\n  removeBehaviour(behaviour) {\n    let index = this.behaviours.indexOf(behaviour);\n    this.behaviours.splice(index, 1);\n\n    if (behaviour.parents) {\n      index = behaviour.parents.indexOf(behaviour);\n      behaviour.parents.splice(index, 1);\n    }\n\n    return index;\n  }\n\n  /**\n   * remove all behaviours\n   * @method removeAllBehaviours\n   */\n  removeAllBehaviours() {\n    Util.emptyArray(this.behaviours);\n  }\n\n  // emitter update\n  update(time) {\n    this.age += time;\n    if (this.age >= this.life || this.dead) this.destroy();\n\n    this.emitting(time);\n    this.integrate(time);\n  }\n\n  integrate(time) {\n    if (!this.parent) return;\n\n    const damping = 1 - this.damping;\n    this.parent.integrator.calculate(this, time, damping);\n\n    const length = this.particles.length;\n    let i, particle;\n\n    for (i = length - 1; i >= 0; i--) {\n      particle = this.particles[i];\n\n      // particle update\n      particle.update(time, i);\n      this.parent.integrator.calculate(particle, time, damping);\n      this.dispatch(\"PARTICLE_UPDATE\", particle);\n\n      // check dead\n      if (particle.dead) {\n        this.dispatch(\"PARTICLE_DEAD\", particle);\n\n        this.parent.pool.expire(particle);\n        this.particles.splice(i, 1);\n      }\n    }\n  }\n\n  dispatch(event, target) {\n    this.parent && this.parent.dispatchEvent(event, target);\n    this.bindEvent && this.dispatchEvent(event, target);\n  }\n\n  emitting(time) {\n    if (this.totalTime === \"once\") {\n      let i;\n      const length = this.rate.getValue(99999);\n\n      if (length > 0) this.emitSpeed = length;\n      for (i = 0; i < length; i++) this.createParticle();\n      this.totalTime = \"none\";\n    } else {\n      this.emitTime += time;\n\n      if (this.emitTime < this.totalTime) {\n        const length = this.rate.getValue(time);\n        let i;\n\n        if (length > 0) this.emitSpeed = length;\n        for (i = 0; i < length; i++) this.createParticle();\n      }\n    }\n  }\n\n  /**\n   * create single particle;\n   *\n   * can use emit({x:10},new Gravity(10),{'particleUpdate',fun}) or emit([{x:10},new Initialize],new Gravity(10),{'particleUpdate',fun})\n   * @method removeAllParticles\n   */\n  createParticle(initialize, behaviour) {\n    const particle = this.parent.pool.get(Particle);\n    this.setupParticle(particle, initialize, behaviour);\n    this.dispatch(\"PARTICLE_CREATED\", particle);\n\n    return particle;\n  }\n\n  setupParticle(particle, initialize, behaviour) {\n    let initializes = this.initializes;\n    let behaviours = this.behaviours;\n\n    if (initialize) initializes = Util.toArray(initialize);\n    if (behaviour) behaviours = Util.toArray(behaviour);\n\n    particle.reset();\n    InitializeUtil.initialize(this, particle, initializes);\n    particle.addBehaviours(behaviours);\n    particle.parent = this;\n\n    this.particles.push(particle);\n  }\n\n  remove() {\n    this.stop();\n    Util.destroyAll(this.particles);\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    this.dead = true;\n    this.remove();\n    this.removeAllInitializers();\n    this.removeAllBehaviours();\n    this.parent && this.parent.removeEmitter(this);\n\n    this.rate = null;\n    this.old = null;\n    this.rgb = null;\n    this.v = null;\n    this.a = null;\n    this.p = null;\n  }\n}\n\nEventDispatcher.bind(Emitter);\n","import Types from \"../utils/Types\";\nimport ColorUtil from \"../utils/ColorUtil\";\nimport MathUtil from \"../math/MathUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nlet PIXIClass;\nexport default class PixiRenderer extends BaseRenderer {\n  constructor(element, stroke) {\n    super(element);\n\n    this.stroke = stroke;\n    this.color = false;\n    this.setColor = false;\n    this.blendMode = null;\n    this.pool.create = (body, particle) => this.createBody(body, particle);\n    this.setPIXI(window.PIXI);\n\n    this.name = \"PixiRenderer\";\n  }\n\n  setPIXI(PIXI) {\n    try {\n      PIXIClass = PIXI || { Sprite: {} };\n      this.createFromImage = PIXIClass.Sprite.from || PIXIClass.Sprite.fromImage;\n    } catch (e) {}\n  }\n\n  onProtonUpdate() {}\n\n  /**\n   * @param particle\n   */\n  onParticleCreated(particle) {\n    if (particle.body) {\n      particle.body = this.pool.get(particle.body, particle);\n    } else {\n      particle.body = this.pool.get(this.circleConf, particle);\n    }\n\n    if (this.blendMode) {\n      particle.body.blendMode = this.blendMode;\n    }\n\n    this.element.addChild(particle.body);\n  }\n\n  /**\n   * @param particle\n   */\n  onParticleUpdate(particle) {\n    this.transform(particle, particle.body);\n\n    if (this.setColor === true || this.color === true) {\n      particle.body.tint = ColorUtil.getHex16FromParticle(particle);\n    }\n  }\n\n  /**\n   * @param particle\n   */\n  onParticleDead(particle) {\n    this.element.removeChild(particle.body);\n    this.pool.expire(particle.body);\n    particle.body = null;\n  }\n\n  transform(particle, target) {\n    target.x = particle.p.x;\n    target.y = particle.p.y;\n\n    target.alpha = particle.alpha;\n\n    target.scale.x = particle.scale;\n    target.scale.y = particle.scale;\n\n    // using cached version of MathUtil.PI_180 for slight performance increase.\n    target.rotation = particle.rotation * MathUtil.PI_180; // MathUtil.PI_180;\n  }\n\n  createBody(body, particle) {\n    if (body.isCircle) return this.createCircle(particle);\n    else return this.createSprite(body);\n  }\n\n  createSprite(body) {\n    const sprite = body.isInner ? this.createFromImage(body.src) : new PIXIClass.Sprite(body);\n\n    sprite.anchor.x = 0.5;\n    sprite.anchor.y = 0.5;\n\n    return sprite;\n  }\n\n  createCircle(particle) {\n    const graphics = new PIXIClass.Graphics();\n\n    if (this.stroke) {\n      const stroke = Types.isString(this.stroke) ? this.stroke : 0x000000;\n      graphics.beginStroke(stroke);\n    }\n\n    graphics.beginFill(particle.color || 0x008ced);\n    graphics.drawCircle(0, 0, particle.radius);\n    graphics.endFill();\n\n    return graphics;\n  }\n\n  destroy(particles) {\n    super.destroy();\n\n    let i = particles.length;\n    while (i--) {\n      let particle = particles[i];\n      if (particle.body) {\n        this.element.removeChild(particle.body);\n      }\n    }\n  }\n}\n","import Emitter from \"./Emitter\";\n\nexport default class BehaviourEmitter extends Emitter {\n  /**\n   * The BehaviourEmitter class inherits from Proton.Emitter\n   *\n   * use the BehaviourEmitter you can add behaviours to self;\n   * @class Proton.BehaviourEmitter\n   * @constructor\n   * @param {Object} conf the parameters object;\n   */\n  constructor(conf) {\n    super(conf);\n\n    this.selfBehaviours = [];\n  }\n\n  /**\n   * add the Behaviour to emitter;\n   *\n   * you can use Behaviours array:emitter.addSelfBehaviour(Behaviour1,Behaviour2,Behaviour3);\n   * @method addSelfBehaviour\n   * @param {Proton.Behaviour} behaviour like this new Proton.Color('random')\n   */\n  addSelfBehaviour(...rest) {\n    let i,\n      length = rest.length;\n\n    for (i = 0; i < length; i++) {\n      let behaviour = rest[i];\n      this.selfBehaviours.push(behaviour);\n      behaviour.initialize(this);\n    }\n  }\n\n  /**\n   * remove the Behaviour for self\n   * @method removeSelfBehaviour\n   * @param {Proton.Behaviour} behaviour a behaviour\n   */\n  removeSelfBehaviour(behaviour) {\n    const index = this.selfBehaviours.indexOf(behaviour);\n    if (index > -1) this.selfBehaviours.splice(index, 1);\n  }\n\n  update(time) {\n    super.update(time);\n\n    if (!this.sleep) {\n      const length = this.selfBehaviours.length;\n      let i;\n\n      for (i = 0; i < length; i++) {\n        this.selfBehaviours[i].applyBehaviour(this, time, i);\n      }\n    }\n  }\n}\n","import Util from \"../utils/Util\";\nimport Emitter from \"./Emitter\";\n\nexport default class FollowEmitter extends Emitter {\n  /**\n   * The FollowEmitter class inherits from Proton.Emitter\n   *\n   * use the FollowEmitter will emit particle when mousemoving\n   *\n   * @class Proton.FollowEmitter\n   * @constructor\n   * @param {Element} mouseTarget mouseevent's target;\n   * @param {Number} ease the easing of following speed;\n   * @default 0.7\n   * @param {Object} conf the parameters object;\n   */\n  constructor(mouseTarget, ease, conf) {\n    super(conf);\n\n    this.mouseTarget = Util.initValue(mouseTarget, window);\n    this.ease = Util.initValue(ease, 0.7);\n\n    this._allowEmitting = false;\n    this.initEventHandler();\n  }\n\n  initEventHandler() {\n    this.mousemoveHandler = e => this.mousemove.call(this, e);\n    this.mousedownHandler = e => this.mousedown.call(this, e);\n    this.mouseupHandler = e => this.mouseup.call(this, e);\n    this.mouseTarget.addEventListener(\"mousemove\", this.mousemoveHandler, false);\n  }\n\n  /**\n   * start emit particle\n   * @method emit\n   */\n  emit() {\n    this._allowEmitting = true;\n  }\n\n  /**\n   * stop emiting\n   * @method stop\n   */\n  stop() {\n    this._allowEmitting = false;\n  }\n\n  mousemove(e) {\n    if (e.layerX || e.layerX === 0) {\n      this.p.x += (e.layerX - this.p.x) * this.ease;\n      this.p.y += (e.layerY - this.p.y) * this.ease;\n    } else if (e.offsetX || e.offsetX === 0) {\n      this.p.x += (e.offsetX - this.p.x) * this.ease;\n      this.p.y += (e.offsetY - this.p.y) * this.ease;\n    }\n\n    if (this._allowEmitting) super.emit(\"once\");\n  }\n\n  /**\n   * Destory this Emitter\n   * @method destroy\n   */\n  destroy() {\n    super.destroy();\n    this.mouseTarget.removeEventListener(\"mousemove\", this.mousemoveHandler, false);\n  }\n}\n","export default {\n  /**\n   * Determine whether it is a picture object\n   *\n   * @return {boolean} is or no\n   */\n  isImage(obj) {\n    if (!obj) return false;\n    if (obj.__isImage) return true;\n\n    const tagName = `${obj.tagName}`.toUpperCase();\n    const nodeName = `${obj.nodeName}`.toUpperCase();\n    if (nodeName === \"IMG\" || tagName === \"IMG\") {\n      obj.__isImage = true;\n      return true;\n    }\n\n    return false;\n  },\n\n  /**\n   * Determine whether it is a string object\n   *\n   * @return {boolean} is or no\n   */\n  isString(obj) {\n    return typeof obj === \"string\";\n  }\n};\n","import Pool from \"../core/Pool\";\n\nexport default class BaseRenderer {\n  constructor(element, stroke) {\n    this.pool = new Pool();\n    this.element = element;\n    this.stroke = stroke;\n    this.circleConf = { isCircle: true };\n\n    this.initEventHandler();\n    this.name = \"BaseRenderer\";\n  }\n\n  setStroke(color = \"#000000\", thinkness = 1) {\n    this.stroke = { color, thinkness };\n  }\n\n  initEventHandler() {\n    this._protonUpdateHandler = () => {\n      this.onProtonUpdate.call(this);\n    };\n\n    this._protonUpdateAfterHandler = () => {\n      this.onProtonUpdateAfter.call(this);\n    };\n\n    this._emitterAddedHandler = emitter => {\n      this.onEmitterAdded.call(this, emitter);\n    };\n\n    this._emitterRemovedHandler = emitter => {\n      this.onEmitterRemoved.call(this, emitter);\n    };\n\n    this._particleCreatedHandler = particle => {\n      this.onParticleCreated.call(this, particle);\n    };\n\n    this._particleUpdateHandler = particle => {\n      this.onParticleUpdate.call(this, particle);\n    };\n\n    this._particleDeadHandler = particle => {\n      this.onParticleDead.call(this, particle);\n    };\n  }\n\n  init(proton) {\n    this.parent = proton;\n\n    proton.addEventListener(\"PROTON_UPDATE\", this._protonUpdateHandler);\n    proton.addEventListener(\"PROTON_UPDATE_AFTER\", this._protonUpdateAfterHandler);\n\n    proton.addEventListener(\"EMITTER_ADDED\", this._emitterAddedHandler);\n    proton.addEventListener(\"EMITTER_REMOVED\", this._emitterRemovedHandler);\n\n    proton.addEventListener(\"PARTICLE_CREATED\", this._particleCreatedHandler);\n    proton.addEventListener(\"PARTICLE_UPDATE\", this._particleUpdateHandler);\n    proton.addEventListener(\"PARTICLE_DEAD\", this._particleDeadHandler);\n  }\n\n  resize(width, height) {}\n\n  destroy() {\n    this.remove();\n    this.pool.destroy();\n    this.pool = null;\n    this.element = null;\n    this.stroke = null;\n  }\n\n  remove(proton) {\n    this.parent.removeEventListener(\"PROTON_UPDATE\", this._protonUpdateHandler);\n    this.parent.removeEventListener(\"PROTON_UPDATE_AFTER\", this._protonUpdateAfterHandler);\n\n    this.parent.removeEventListener(\"EMITTER_ADDED\", this._emitterAddedHandler);\n    this.parent.removeEventListener(\"EMITTER_REMOVED\", this._emitterRemovedHandler);\n\n    this.parent.removeEventListener(\"PARTICLE_CREATED\", this._particleCreatedHandler);\n    this.parent.removeEventListener(\"PARTICLE_UPDATE\", this._particleUpdateHandler);\n    this.parent.removeEventListener(\"PARTICLE_DEAD\", this._particleDeadHandler);\n\n    this.parent = null;\n  }\n\n  onProtonUpdate() {}\n  onProtonUpdateAfter() {}\n\n  onEmitterAdded(emitter) {}\n  onEmitterRemoved(emitter) {}\n\n  onParticleCreated(particle) {}\n  onParticleUpdate(particle) {}\n  onParticleDead(particle) {}\n}\n","import Types from \"../utils/Types\";\nimport ImgUtil from \"../utils/ImgUtil\";\nimport ColorUtil from \"../utils/ColorUtil\";\nimport MathUtil from \"../math/MathUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class CanvasRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.stroke = null;\n    this.context = this.element.getContext(\"2d\");\n    this.bufferCache = {};\n    this.name = \"CanvasRenderer\";\n  }\n\n  resize(width, height) {\n    this.element.width = width;\n    this.element.height = height;\n  }\n\n  onProtonUpdate() {\n    this.context.clearRect(0, 0, this.element.width, this.element.height);\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n    } else {\n      particle.color = particle.color || \"#ff0000\";\n    }\n  }\n\n  onParticleUpdate(particle) {\n    if (particle.body) {\n      if (Types.isImage(particle.body)) {\n        this.drawImage(particle);\n      }\n    } else {\n      this.drawCircle(particle);\n    }\n  }\n\n  onParticleDead(particle) {\n    particle.body = null;\n  }\n\n  // private method\n  addImg2Body(img, particle) {\n    particle.body = img;\n  }\n\n  // private drawImage method\n  drawImage(particle) {\n    const w = (particle.body.width * particle.scale) | 0;\n    const h = (particle.body.height * particle.scale) | 0;\n    const x = particle.p.x - w / 2;\n    const y = particle.p.y - h / 2;\n\n    if (!!particle.color) {\n      if (!particle.data[\"buffer\"]) particle.data.buffer = this.createBuffer(particle.body);\n\n      const bufContext = particle.data.buffer.getContext(\"2d\");\n      bufContext.clearRect(0, 0, particle.data.buffer.width, particle.data.buffer.height);\n      bufContext.globalAlpha = particle.alpha;\n      bufContext.drawImage(particle.body, 0, 0);\n\n      bufContext.globalCompositeOperation = \"source-atop\";\n      bufContext.fillStyle = ColorUtil.rgbToHex(particle.rgb);\n      bufContext.fillRect(0, 0, particle.data.buffer.width, particle.data.buffer.height);\n      bufContext.globalCompositeOperation = \"source-over\";\n      bufContext.globalAlpha = 1;\n\n      this.context.drawImage(\n        particle.data.buffer,\n        0,\n        0,\n        particle.data.buffer.width,\n        particle.data.buffer.height,\n        x,\n        y,\n        w,\n        h\n      );\n    } else {\n      this.context.save();\n\n      this.context.globalAlpha = particle.alpha;\n      this.context.translate(particle.p.x, particle.p.y);\n      this.context.rotate(MathUtil.degreeTransform(particle.rotation));\n      this.context.translate(-particle.p.x, -particle.p.y);\n      this.context.drawImage(particle.body, 0, 0, particle.body.width, particle.body.height, x, y, w, h);\n\n      this.context.globalAlpha = 1;\n      this.context.restore();\n    }\n  }\n\n  // private drawCircle --\n  drawCircle(particle) {\n    if (particle.rgb) {\n      this.context.fillStyle = `rgba(${particle.rgb.r},${particle.rgb.g},${particle.rgb.b},${particle.alpha})`;\n    } else {\n      this.context.fillStyle = particle.color;\n    }\n\n    // draw circle\n    this.context.beginPath();\n    this.context.arc(particle.p.x, particle.p.y, particle.radius, 0, Math.PI * 2, true);\n\n    if (this.stroke) {\n      this.context.strokeStyle = this.stroke.color;\n      this.context.lineWidth = this.stroke.thinkness;\n      this.context.stroke();\n    }\n\n    this.context.closePath();\n    this.context.fill();\n  }\n\n  // private createBuffer\n  createBuffer(image) {\n    if (Types.isImage(image)) {\n      const size = image.width + \"_\" + image.height;\n      let canvas = this.bufferCache[size];\n\n      if (!canvas) {\n        canvas = document.createElement(\"canvas\");\n        canvas.width = image.width;\n        canvas.height = image.height;\n        this.bufferCache[size] = canvas;\n      }\n\n      return canvas;\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    this.stroke = null;\n    this.context = null;\n    this.bufferCache = null;\n  }\n}\n","import DomUtil from \"../utils/DomUtil\";\nimport ImgUtil from \"../utils/ImgUtil\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class DomRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.stroke = null;\n    this.transform3d = false;\n    this.pool.create = (body, particle) => this.createBody(body, particle);\n    this.addImg2Body = this.addImg2Body.bind(this);\n\n    this.name = \"DomRenderer\";\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n    } else {\n      particle.body = this.pool.get(this.circleConf, particle);\n      this.element.appendChild(particle.body);\n    }\n  }\n\n  onParticleUpdate(particle) {\n    if (this.bodyReady(particle)) {\n      if (this.transform3d) {\n        DomUtil.transform3d(particle.body, particle.p.x, particle.p.y, particle.scale, particle.rotation);\n      } else {\n        DomUtil.transform(particle.body, particle.p.x, particle.p.y, particle.scale, particle.rotation);\n      }\n\n      particle.body.style.opacity = particle.alpha;\n\n      if (particle.body.isCircle) {\n        particle.body.style.backgroundColor = particle.color || \"#ff0000\";\n      }\n    }\n  }\n\n  onParticleDead(particle) {\n    if (this.bodyReady(particle)) {\n      this.element.removeChild(particle.body);\n      this.pool.expire(particle.body);\n      particle.body = null;\n    }\n  }\n\n  bodyReady(particle) {\n    return typeof particle.body === \"object\" && particle.body && !particle.body.isInner;\n  }\n\n  // private method\n  addImg2Body(img, particle) {\n    if (particle.dead) return;\n    particle.body = this.pool.get(img, particle);\n    DomUtil.resize(particle.body, img.width, img.height);\n\n    this.element.appendChild(particle.body);\n  }\n\n  createBody(body, particle) {\n    if (body.isCircle) return this.createCircle(particle);\n    return this.createSprite(body, particle);\n  }\n\n  // private methods\n  createCircle(particle) {\n    const dom = DomUtil.createDiv(`${particle.id}_dom`, 2 * particle.radius, 2 * particle.radius);\n    dom.style.borderRadius = `${particle.radius}px`;\n\n    if (this.stroke) {\n      dom.style.borderColor = this.stroke.color;\n      dom.style.borderWidth = `${this.stroke.thinkness}px`;\n    }\n    dom.isCircle = true;\n\n    return dom;\n  }\n\n  createSprite(body, particle) {\n    const url = typeof body === \"string\" ? body : body.src;\n    const dom = DomUtil.createDiv(`${particle.id}_dom`, body.width, body.height);\n    dom.style.backgroundImage = `url(${url})`;\n\n    return dom;\n  }\n\n  destroy() {\n    super.destroy();\n    this.stroke = null;\n  }\n}\n","import Types from \"../utils/Types\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class EaselRenderer extends BaseRenderer {\n  constructor(element, stroke) {\n    super(element);\n\n    this.stroke = stroke;\n    this.name = \"EaselRenderer\";\n  }\n\n  onParticleCreated(particle) {\n    if (particle.body) {\n      this.createSprite(particle);\n    } else {\n      this.createCircle(particle);\n    }\n\n    this.element.addChild(particle.body);\n  }\n\n  onParticleUpdate(particle) {\n    if (particle.body) {\n      particle.body.x = particle.p.x;\n      particle.body.y = particle.p.y;\n\n      particle.body.alpha = particle.alpha;\n      particle.body.scaleX = particle.body.scaleY = particle.scale;\n      particle.body.rotation = particle.rotation;\n    }\n  }\n\n  onParticleDead(particle) {\n    if (particle.body) {\n      particle.body.parent && particle.body.parent.removeChild(particle.body);\n      this.pool.expire(particle.body);\n      particle.body = null;\n    }\n\n    if (particle.graphics) this.pool.expire(particle.graphics);\n  }\n\n  // private\n  createSprite(particle) {\n    particle.body = this.pool.get(particle.body);\n\n    if (particle.body.parent) return;\n    if (particle.body[\"image\"]) {\n      particle.body.regX = particle.body.image.width / 2;\n      particle.body.regY = particle.body.image.height / 2;\n    }\n  }\n\n  createCircle(particle) {\n    const graphics = this.pool.get(createjs.Graphics);\n\n    if (this.stroke) {\n      if (Types.isString(this.stroke)) {\n        graphics.beginStroke(this.stroke);\n      } else {\n        graphics.beginStroke(\"#000000\");\n      }\n    }\n    graphics.beginFill(particle.color || \"#ff0000\").drawCircle(0, 0, particle.radius);\n    const shape = this.pool.get(createjs.Shape, [graphics]);\n\n    particle.body = shape;\n    particle.graphics = graphics;\n  }\n\n  destroy() {\n    super.destroy();\n    this.stroke = null;\n  }\n}\n","import Rectangle from \"../math/Rectangle\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nexport default class PixelRenderer extends BaseRenderer {\n  constructor(element, rectangle) {\n    super(element);\n\n    this.context = this.element.getContext(\"2d\");\n    this.imageData = null;\n    this.rectangle = rectangle;\n    this.createImageData(rectangle);\n\n    this.name = \"PixelRenderer\";\n  }\n\n  resize(width, height) {\n    this.element.width = width;\n    this.element.height = height;\n  }\n\n  createImageData(rectangle) {\n    this.rectangle = rectangle ? rectangle : new Rectangle(0, 0, this.element.width, this.element.height);\n    this.imageData = this.context.createImageData(this.rectangle.width, this.rectangle.height);\n    this.context.putImageData(this.imageData, this.rectangle.x, this.rectangle.y);\n  }\n\n  onProtonUpdate() {\n    this.context.clearRect(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n    this.imageData = this.context.getImageData(\n      this.rectangle.x,\n      this.rectangle.y,\n      this.rectangle.width,\n      this.rectangle.height\n    );\n  }\n\n  onProtonUpdateAfter() {\n    this.context.putImageData(this.imageData, this.rectangle.x, this.rectangle.y);\n  }\n\n  onParticleCreated(particle) {}\n\n  onParticleUpdate(particle) {\n    if (this.imageData) {\n      this.setPixel(\n        this.imageData,\n        (particle.p.x - this.rectangle.x) >> 0,\n        (particle.p.y - this.rectangle.y) >> 0,\n        particle\n      );\n    }\n  }\n\n  setPixel(imagedata, x, y, particle) {\n    const rgb = particle.rgb;\n    if (x < 0 || x > this.element.width || y < 0 || y > this.element.height) return;\n\n    const i = ((y >> 0) * imagedata.width + (x >> 0)) * 4;\n    imagedata.data[i] = rgb.r;\n    imagedata.data[i + 1] = rgb.g;\n    imagedata.data[i + 2] = rgb.b;\n    imagedata.data[i + 3] = particle.alpha * 255;\n  }\n\n  onParticleDead(particle) {}\n\n  destroy() {\n    super.destroy();\n    this.stroke = null;\n    this.context = null;\n    this.imageData = null;\n    this.rectangle = null;\n  }\n}\n","import Mat3 from \"../math/Mat3\";\n\nexport default class MStack {\n  constructor() {\n    this.mats = [];\n    this.size = 0;\n\n    for (let i = 0; i < 20; i++) this.mats.push(Mat3.create([0, 0, 0, 0, 0, 0, 0, 0, 0]));\n  }\n\n  set(m, i) {\n    if (i === 0) Mat3.set(m, this.mats[0]);\n    else Mat3.multiply(this.mats[i - 1], m, this.mats[i]);\n\n    this.size = Math.max(this.size, i + 1);\n  }\n\n  push(m) {\n    if (this.size === 0) Mat3.set(m, this.mats[0]);\n    else Mat3.multiply(this.mats[this.size - 1], m, this.mats[this.size]);\n\n    this.size++;\n  }\n\n  pop() {\n    if (this.size > 0) this.size--;\n  }\n\n  top() {\n    return this.mats[this.size - 1];\n  }\n}\n","import Mat3 from \"../math/Mat3\";\nimport BaseRenderer from \"./BaseRenderer\";\n\nimport Util from \"../utils/Util\";\nimport ImgUtil from \"../utils/ImgUtil\";\nimport MStack from \"../utils/MStack\";\nimport DomUtil from \"../utils/DomUtil\";\nimport WebGLUtil from \"../utils/WebGLUtil\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class WebGLRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.gl = this.element.getContext(\"experimental-webgl\", { antialias: true, stencil: false, depth: false });\n    if (!this.gl) alert(\"Sorry your browser do not suppest WebGL!\");\n\n    this.initVar();\n    this.setMaxRadius();\n    this.initShaders();\n    this.initBuffers();\n\n    this.gl.blendEquation(this.gl.FUNC_ADD);\n    this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n    this.gl.enable(this.gl.BLEND);\n    this.addImg2Body = this.addImg2Body.bind(this);\n\n    this.name = \"WebGLRenderer\";\n  }\n\n  init(proton) {\n    super.init(proton);\n    this.resize(this.element.width, this.element.height);\n  }\n\n  resize(width, height) {\n    this.umat[4] = -2;\n    this.umat[7] = 1;\n\n    this.smat[0] = 1 / width;\n    this.smat[4] = 1 / height;\n\n    this.mstack.set(this.umat, 0);\n    this.mstack.set(this.smat, 1);\n\n    this.gl.viewport(0, 0, width, height);\n    this.element.width = width;\n    this.element.height = height;\n  }\n\n  setMaxRadius(radius) {\n    this.circleCanvasURL = this.createCircle(radius);\n  }\n\n  getVertexShader() {\n    const vsSource = [\n      \"uniform vec2 viewport;\",\n      \"attribute vec2 aVertexPosition;\",\n      \"attribute vec2 aTextureCoord;\",\n      \"uniform mat3 tMat;\",\n      \"varying vec2 vTextureCoord;\",\n      \"varying float alpha;\",\n      \"void main() {\",\n      \"vec3 v = tMat * vec3(aVertexPosition, 1.0);\",\n      \"gl_Position = vec4(v.x, v.y, 0, 1);\",\n      \"vTextureCoord = aTextureCoord;\",\n      \"alpha = tMat[0][2];\",\n      \"}\"\n    ].join(\"\\n\");\n    return vsSource;\n  }\n\n  getFragmentShader() {\n    const fsSource = [\n      \"precision mediump float;\",\n      \"varying vec2 vTextureCoord;\",\n      \"varying float alpha;\",\n      \"uniform sampler2D uSampler;\",\n      \"uniform vec4 color;\",\n      \"uniform bool useTexture;\",\n      \"uniform vec3 uColor;\",\n      \"void main() {\",\n      \"vec4 textureColor = texture2D(uSampler, vTextureCoord);\",\n      \"gl_FragColor = textureColor * vec4(uColor, 1.0);\",\n      \"gl_FragColor.w *= alpha;\",\n      \"}\"\n    ].join(\"\\n\");\n    return fsSource;\n  }\n\n  initVar() {\n    this.mstack = new MStack();\n    this.umat = Mat3.create([2, 0, 1, 0, -2, 0, -1, 1, 1]);\n    this.smat = Mat3.create([1 / 100, 0, 1, 0, 1 / 100, 0, 0, 0, 1]);\n    this.texturebuffers = {};\n  }\n\n  blendEquation(A) {\n    this.gl.blendEquation(this.gl[A]);\n  }\n\n  blendFunc(A, B) {\n    this.gl.blendFunc(this.gl[A], this.gl[B]);\n  }\n\n  getShader(gl, str, fs) {\n    const shader = fs ? gl.createShader(gl.FRAGMENT_SHADER) : gl.createShader(gl.VERTEX_SHADER);\n\n    gl.shaderSource(shader, str);\n    gl.compileShader(shader);\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      alert(gl.getShaderInfoLog(shader));\n      return null;\n    }\n\n    return shader;\n  }\n\n  initShaders() {\n    const fragmentShader = this.getShader(this.gl, this.getFragmentShader(), true);\n    const vertexShader = this.getShader(this.gl, this.getVertexShader(), false);\n\n    this.sprogram = this.gl.createProgram();\n    this.gl.attachShader(this.sprogram, vertexShader);\n    this.gl.attachShader(this.sprogram, fragmentShader);\n    this.gl.linkProgram(this.sprogram);\n\n    if (!this.gl.getProgramParameter(this.sprogram, this.gl.LINK_STATUS)) alert(\"Could not initialise shaders\");\n\n    this.gl.useProgram(this.sprogram);\n    this.sprogram.vpa = this.gl.getAttribLocation(this.sprogram, \"aVertexPosition\");\n    this.sprogram.tca = this.gl.getAttribLocation(this.sprogram, \"aTextureCoord\");\n    this.gl.enableVertexAttribArray(this.sprogram.tca);\n    this.gl.enableVertexAttribArray(this.sprogram.vpa);\n\n    this.sprogram.tMatUniform = this.gl.getUniformLocation(this.sprogram, \"tMat\");\n    this.sprogram.samplerUniform = this.gl.getUniformLocation(this.sprogram, \"uSampler\");\n    this.sprogram.useTex = this.gl.getUniformLocation(this.sprogram, \"useTexture\");\n    this.sprogram.color = this.gl.getUniformLocation(this.sprogram, \"uColor\");\n    this.gl.uniform1i(this.sprogram.useTex, 1);\n  }\n\n  initBuffers() {\n    const vs = [0, 3, 1, 0, 2, 3];\n    let idx;\n\n    this.unitIBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(vs), this.gl.STATIC_DRAW);\n\n    let i;\n    let ids = [];\n    for (i = 0; i < 100; i++) ids.push(i);\n    idx = new Uint16Array(ids);\n\n    this.unitI33 = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitI33);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW);\n\n    ids = [];\n    for (i = 0; i < 100; i++) ids.push(i, i + 1, i + 2);\n    idx = new Uint16Array(ids);\n\n    this.stripBuffer = this.gl.createBuffer();\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.stripBuffer);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, idx, this.gl.STATIC_DRAW);\n  }\n\n  createCircle(raidus) {\n    this.circleCanvasRadius = WebGLUtil.nhpot(Util.initValue(raidus, 32));\n    const canvas = DomUtil.createCanvas(\"circle_canvas\", this.circleCanvasRadius * 2, this.circleCanvasRadius * 2);\n    const context = canvas.getContext(\"2d\");\n\n    context.beginPath();\n    context.arc(this.circleCanvasRadius, this.circleCanvasRadius, this.circleCanvasRadius, 0, Math.PI * 2, true);\n    context.closePath();\n    context.fillStyle = \"#FFF\";\n    context.fill();\n\n    return canvas.toDataURL();\n  }\n\n  drawImg2Canvas(particle) {\n    const _w = particle.body.width;\n    const _h = particle.body.height;\n\n    const _width = WebGLUtil.nhpot(particle.body.width);\n    const _height = WebGLUtil.nhpot(particle.body.height);\n\n    const _scaleX = particle.body.width / _width;\n    const _scaleY = particle.body.height / _height;\n\n    if (!this.texturebuffers[particle.data.src])\n      this.texturebuffers[particle.data.src] = [\n        this.gl.createTexture(),\n        this.gl.createBuffer(),\n        this.gl.createBuffer()\n      ];\n\n    particle.data.texture = this.texturebuffers[particle.data.src][0];\n    particle.data.vcBuffer = this.texturebuffers[particle.data.src][1];\n    particle.data.tcBuffer = this.texturebuffers[particle.data.src][2];\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.tcBuffer);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      new Float32Array([0.0, 0.0, _scaleX, 0.0, 0.0, _scaleY, _scaleY, _scaleY]),\n      this.gl.STATIC_DRAW\n    );\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.vcBuffer);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      new Float32Array([0.0, 0.0, _w, 0.0, 0.0, _h, _w, _h]),\n      this.gl.STATIC_DRAW\n    );\n\n    const context = particle.data.canvas.getContext(\"2d\");\n    const data = context.getImageData(0, 0, _width, _height);\n\n    this.gl.bindTexture(this.gl.TEXTURE_2D, particle.data.texture);\n    this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, data);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.LINEAR);\n    this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.LINEAR_MIPMAP_NEAREST);\n    this.gl.generateMipmap(this.gl.TEXTURE_2D);\n\n    particle.data.textureLoaded = true;\n    particle.data.textureWidth = _w;\n    particle.data.textureHeight = _h;\n  }\n\n  onProtonUpdate() {\n    // this.gl.clearColor(0, 0, 0, 1);\n    // this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n  }\n\n  onParticleCreated(particle) {\n    particle.data.textureLoaded = false;\n    particle.data.tmat = Mat3.create();\n    particle.data.tmat[8] = 1;\n    particle.data.imat = Mat3.create();\n    particle.data.imat[8] = 1;\n\n    if (particle.body) {\n      ImgUtil.getImgFromCache(particle.body, this.addImg2Body, particle);\n    } else {\n      ImgUtil.getImgFromCache(this.circleCanvasURL, this.addImg2Body, particle);\n      particle.data.oldScale = particle.radius / this.circleCanvasRadius;\n    }\n  }\n\n  // private\n  addImg2Body(img, particle) {\n    if (particle.dead) return;\n    particle.body = img;\n    particle.data.src = img.src;\n    particle.data.canvas = ImgUtil.getCanvasFromCache(img);\n    particle.data.oldScale = 1;\n\n    this.drawImg2Canvas(particle);\n  }\n\n  onParticleUpdate(particle) {\n    if (particle.data.textureLoaded) {\n      this.updateMatrix(particle);\n\n      this.gl.uniform3f(this.sprogram.color, particle.rgb.r / 255, particle.rgb.g / 255, particle.rgb.b / 255);\n      this.gl.uniformMatrix3fv(this.sprogram.tMatUniform, false, this.mstack.top());\n\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.vcBuffer);\n      this.gl.vertexAttribPointer(this.sprogram.vpa, 2, this.gl.FLOAT, false, 0, 0);\n      this.gl.bindBuffer(this.gl.ARRAY_BUFFER, particle.data.tcBuffer);\n      this.gl.vertexAttribPointer(this.sprogram.tca, 2, this.gl.FLOAT, false, 0, 0);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, particle.data.texture);\n      this.gl.uniform1i(this.sprogram.samplerUniform, 0);\n      this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.unitIBuffer);\n\n      this.gl.drawElements(this.gl.TRIANGLES, 6, this.gl.UNSIGNED_SHORT, 0);\n      this.mstack.pop();\n    }\n  }\n\n  onParticleDead(particle) {}\n\n  updateMatrix(particle) {\n    const moveOriginMatrix = WebGLUtil.makeTranslation(\n      -particle.data.textureWidth / 2,\n      -particle.data.textureHeight / 2\n    );\n    const translationMatrix = WebGLUtil.makeTranslation(particle.p.x, particle.p.y);\n\n    const angel = particle.rotation * MathUtil.PI_180;\n    const rotationMatrix = WebGLUtil.makeRotation(angel);\n\n    const scale = particle.scale * particle.data.oldScale;\n    const scaleMatrix = WebGLUtil.makeScale(scale, scale);\n    let matrix = WebGLUtil.matrixMultiply(moveOriginMatrix, scaleMatrix);\n\n    matrix = WebGLUtil.matrixMultiply(matrix, rotationMatrix);\n    matrix = WebGLUtil.matrixMultiply(matrix, translationMatrix);\n\n    Mat3.inverse(matrix, particle.data.imat);\n    matrix[2] = particle.alpha;\n\n    this.mstack.push(matrix);\n  }\n\n  destroy() {\n    super.destroy();\n    this.gl = null;\n    this.mstack = null;\n    this.umat = null;\n    this.smat = null;\n    this.texturebuffers = null;\n  }\n}\n","import BaseRenderer from \"./BaseRenderer\";\n\nexport default class CustomRenderer extends BaseRenderer {\n  constructor(element) {\n    super(element);\n\n    this.name = \"CustomRenderer\";\n  }\n}\n","import Zone from \"./Zone\";\nimport Util from \"../utils/Util\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class LineZone extends Zone {\n  constructor(x1, y1, x2, y2, direction) {\n    super();\n\n    if (x2 - x1 >= 0) {\n      this.x1 = x1;\n      this.y1 = y1;\n      this.x2 = x2;\n      this.y2 = y2;\n    } else {\n      this.x1 = x2;\n      this.y1 = y2;\n      this.x2 = x1;\n      this.y2 = y1;\n    }\n\n    this.dx = this.x2 - this.x1;\n    this.dy = this.y2 - this.y1;\n\n    this.minx = Math.min(this.x1, this.x2);\n    this.miny = Math.min(this.y1, this.y2);\n    this.maxx = Math.max(this.x1, this.x2);\n    this.maxy = Math.max(this.y1, this.y2);\n\n    this.dot = this.x2 * this.y1 - this.x1 * this.y2;\n    this.xxyy = this.dx * this.dx + this.dy * this.dy;\n\n    this.gradient = this.getGradient();\n    this.length = this.getLength();\n    this.direction = Util.initValue(direction, \">\");\n  }\n\n  getPosition() {\n    this.random = Math.random();\n    this.vector.x = this.x1 + this.random * this.length * Math.cos(this.gradient);\n    this.vector.y = this.y1 + this.random * this.length * Math.sin(this.gradient);\n\n    return this.vector;\n  }\n\n  getDirection(x, y) {\n    const A = this.dy;\n    const B = -this.dx;\n    const C = this.dot;\n    const D = B === 0 ? 1 : B;\n\n    if ((A * x + B * y + C) * D > 0) return true;\n    else return false;\n  }\n\n  getDistance(x, y) {\n    const A = this.dy;\n    const B = -this.dx;\n    const C = this.dot;\n    const D = A * x + B * y + C;\n\n    return D / Math.sqrt(this.xxyy);\n  }\n\n  getSymmetric(v) {\n    const tha2 = v.getGradient();\n    const tha1 = this.getGradient();\n    const tha = 2 * (tha1 - tha2);\n\n    const oldx = v.x;\n    const oldy = v.y;\n\n    v.x = oldx * Math.cos(tha) - oldy * Math.sin(tha);\n    v.y = oldx * Math.sin(tha) + oldy * Math.cos(tha);\n\n    return v;\n  }\n\n  getGradient() {\n    return Math.atan2(this.dy, this.dx);\n  }\n\n  rangeOut(particle) {\n    const angle = Math.abs(this.getGradient());\n\n    if (angle <= MathUtil.PI / 4) {\n      if (particle.p.x <= this.maxx && particle.p.x >= this.minx) return true;\n    } else {\n      if (particle.p.y <= this.maxy && particle.p.y >= this.miny) return true;\n    }\n\n    return false;\n  }\n\n  getLength() {\n    return Math.sqrt(this.dx * this.dx + this.dy * this.dy);\n  }\n\n  crossing(particle) {\n    if (this.crossType === \"dead\") {\n      if (this.direction === \">\" || this.direction === \"R\" || this.direction === \"right\" || this.direction === \"down\") {\n        if (!this.rangeOut(particle)) return;\n        if (this.getDirection(particle.p.x, particle.p.y)) particle.dead = true;\n      } else {\n        if (!this.rangeOut(particle)) return;\n        if (!this.getDirection(particle.p.x, particle.p.y)) particle.dead = true;\n      }\n    } else if (this.crossType === \"bound\") {\n      if (!this.rangeOut(particle)) return;\n\n      if (this.getDistance(particle.p.x, particle.p.y) <= particle.radius) {\n        if (this.dx === 0) {\n          particle.v.x *= -1;\n        } else if (this.dy === 0) {\n          particle.v.y *= -1;\n        } else {\n          this.getSymmetric(particle.v);\n        }\n      }\n    } else if (this.crossType === \"cross\") {\n      if (this.alert) {\n        console.error(\"Sorry, LineZone does not support cross method!\");\n        this.alert = false;\n      }\n    }\n  }\n}\n","import Zone from \"./Zone\";\nimport MathUtil from \"../math/MathUtil\";\n\nexport default class CircleZone extends Zone {\n  constructor(x, y, radius) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.radius = radius;\n    this.angle = 0;\n    this.center = { x, y };\n  }\n\n  getPosition() {\n    this.angle = MathUtil.PIx2 * Math.random();\n    this.randomRadius = Math.random() * this.radius;\n    this.vector.x = this.x + this.randomRadius * Math.cos(this.angle);\n    this.vector.y = this.y + this.randomRadius * Math.sin(this.angle);\n\n    return this.vector;\n  }\n\n  setCenter(x, y) {\n    this.center.x = x;\n    this.center.y = y;\n  }\n\n  crossing(particle) {\n    const d = particle.p.distanceTo(this.center);\n\n    if (this.crossType === \"dead\") {\n      if (d - particle.radius > this.radius) particle.dead = true;\n    } else if (this.crossType === \"bound\") {\n      if (d + particle.radius >= this.radius) this.getSymmetric(particle);\n    } else if (this.crossType === \"cross\") {\n      if (this.alert) {\n        console.error(\"Sorry, CircleZone does not support cross method!\");\n        this.alert = false;\n      }\n    }\n  }\n\n  getSymmetric(particle) {\n    const tha2 = particle.v.getGradient();\n    const tha1 = this.getGradient(particle);\n\n    const tha = 2 * (tha1 - tha2);\n    const oldx = particle.v.x;\n    const oldy = particle.v.y;\n\n    particle.v.x = oldx * Math.cos(tha) - oldy * Math.sin(tha);\n    particle.v.y = oldx * Math.sin(tha) + oldy * Math.cos(tha);\n  }\n\n  getGradient(particle) {\n    return -MathUtil.PI_2 + Math.atan2(particle.p.y - this.center.y, particle.p.x - this.center.x);\n  }\n}\n","import Zone from \"./Zone\";\n\nexport default class RectZone extends Zone {\n  constructor(x, y, width, height) {\n    super();\n\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.height = height;\n  }\n\n  getPosition() {\n    this.vector.x = this.x + Math.random() * this.width;\n    this.vector.y = this.y + Math.random() * this.height;\n\n    return this.vector;\n  }\n\n  crossing(particle) {\n    // particle dead zone\n    if (this.crossType === \"dead\") {\n      if (particle.p.x + particle.radius < this.x) particle.dead = true;\n      else if (particle.p.x - particle.radius > this.x + this.width) particle.dead = true;\n\n      if (particle.p.y + particle.radius < this.y) particle.dead = true;\n      else if (particle.p.y - particle.radius > this.y + this.height) particle.dead = true;\n    }\n\n    // particle bound zone\n    else if (this.crossType === \"bound\") {\n      if (particle.p.x - particle.radius < this.x) {\n        particle.p.x = this.x + particle.radius;\n        particle.v.x *= -1;\n      } else if (particle.p.x + particle.radius > this.x + this.width) {\n        particle.p.x = this.x + this.width - particle.radius;\n        particle.v.x *= -1;\n      }\n\n      if (particle.p.y - particle.radius < this.y) {\n        particle.p.y = this.y + particle.radius;\n        particle.v.y *= -1;\n      } else if (particle.p.y + particle.radius > this.y + this.height) {\n        particle.p.y = this.y + this.height - particle.radius;\n        particle.v.y *= -1;\n      }\n    }\n\n    // particle cross zone\n    else if (this.crossType === \"cross\") {\n      if (particle.p.x + particle.radius < this.x && particle.v.x <= 0) {\n        particle.p.x = this.x + this.width + particle.radius;\n      } else if (particle.p.x - particle.radius > this.x + this.width && particle.v.x >= 0) {\n        particle.p.x = this.x - particle.radius;\n      }\n\n      if (particle.p.y + particle.radius < this.y && particle.v.y <= 0) {\n        particle.p.y = this.y + this.height + particle.radius;\n      } else if (particle.p.y - particle.radius > this.y + this.height && particle.v.y >= 0) {\n        particle.p.y = this.y - particle.radius;\n      }\n    }\n  }\n}\n","import Zone from \"./Zone\";\nimport Util from \"../utils/Util\";\n\nexport default class ImageZone extends Zone {\n  constructor(imageData, x, y, d) {\n    super();\n    this.reset(imageData, x, y, d);\n  }\n\n  reset(imageData, x, y, d) {\n    this.imageData = imageData;\n    this.x = Util.initValue(x, 0);\n    this.y = Util.initValue(y, 0);\n    this.d = Util.initValue(d, 2);\n\n    this.vectors = [];\n    this.setVectors();\n  }\n\n  setVectors() {\n    let i, j;\n    const length1 = this.imageData.width;\n    const length2 = this.imageData.height;\n\n    for (i = 0; i < length1; i += this.d) {\n      for (j = 0; j < length2; j += this.d) {\n        let index = ((j >> 0) * length1 + (i >> 0)) * 4;\n\n        if (this.imageData.data[index + 3] > 0) {\n          this.vectors.push({ x: i + this.x, y: j + this.y });\n        }\n      }\n    }\n\n    return this.vector;\n  }\n\n  getBound(x, y) {\n    const index = ((y >> 0) * this.imageData.width + (x >> 0)) * 4;\n    if (this.imageData.data[index + 3] > 0) return true;\n    else return false;\n  }\n\n  getPosition() {\n    const vector = Util.getRandFromArray(this.vectors);\n    return this.vector.copy(vector);\n  }\n\n  getColor(x, y) {\n    x -= this.x;\n    y -= this.y;\n    const i = ((y >> 0) * this.imageData.width + (x >> 0)) * 4;\n\n    return {\n      r: this.imageData.data[i],\n      g: this.imageData.data[i + 1],\n      b: this.imageData.data[i + 2],\n      a: this.imageData.data[i + 3]\n    };\n  }\n\n  crossing(particle) {\n    if (this.crossType === \"dead\") {\n      if (this.getBound(particle.p.x - this.x, particle.p.y - this.y)) particle.dead = true;\n      else particle.dead = false;\n    } else if (this.crossType === \"bound\") {\n      if (!this.getBound(particle.p.x - this.x, particle.p.y - this.y)) particle.v.negate();\n    }\n  }\n\n  destroy() {\n    super.destroy();\n    this.imageData = null;\n  }\n}\n","import ColorUtil from \"../utils/ColorUtil\";\nimport CircleZone from \"../zone/CircleZone\";\nimport PointZone from \"../zone/PointZone\";\nimport LineZone from \"../zone/LineZone\";\nimport RectZone from \"../zone/RectZone\";\n\nexport default {\n  addEventListener(proton, func) {\n    proton.addEventListener(\"PROTON_UPDATE_AFTER\", () => func());\n  },\n\n  getStyle(color = \"#ff0000\") {\n    const rgb = ColorUtil.hexToRgb(color);\n    return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, 0.5)`;\n  },\n\n  drawZone(proton, canvas, zone, clear) {\n    const context = canvas.getContext(\"2d\");\n    const style = this.getStyle();\n\n    this.addEventListener(proton, () => {\n      if (clear) context.clearRect(0, 0, canvas.width, canvas.height);\n\n      if (zone instanceof PointZone) {\n        context.beginPath();\n        context.fillStyle = style;\n        context.arc(zone.x, zone.y, 10, 0, Math.PI * 2, true);\n        context.fill();\n        context.closePath();\n      } else if (zone instanceof LineZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.moveTo(zone.x1, zone.y1);\n        context.lineTo(zone.x2, zone.y2);\n        context.stroke();\n        context.closePath();\n      } else if (zone instanceof RectZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.drawRect(zone.x, zone.y, zone.width, zone.height);\n        context.stroke();\n        context.closePath();\n      } else if (zone instanceof CircleZone) {\n        context.beginPath();\n        context.strokeStyle = style;\n        context.arc(zone.x, zone.y, zone.radius, 0, Math.PI * 2, true);\n        context.stroke();\n        context.closePath();\n      }\n    });\n  },\n\n  drawEmitter(proton, canvas, emitter, clear) {\n    const context = canvas.getContext(\"2d\");\n    const style = this.getStyle();\n\n    this.addEventListener(proton, () => {\n      if (clear) context.clearRect(0, 0, canvas.width, canvas.height);\n\n      context.beginPath();\n      context.fillStyle = style;\n      context.arc(emitter.p.x, emitter.p.y, 10, 0, Math.PI * 2, true);\n      context.fill();\n      context.closePath();\n    });\n  }\n};\n","import Proton from \"./core/Proton\";\nimport Particle from \"./core/Particle\";\nimport Pool from \"./core/Pool\";\n\nimport Util from \"./utils/Util\";\nimport ColorUtil from \"./utils/ColorUtil\";\nimport MathUtil from \"./math/MathUtil\";\nimport Vector2D from \"./math/Vector2D\";\nimport Polar2D from \"./math/Polar2D\";\nimport Mat3 from \"./math/Mat3\";\nimport Span from \"./math/Span\";\nimport ArraySpan from \"./math/ArraySpan\";\nimport Rectangle from \"./math/Rectangle\";\nimport ease from \"./math/ease\";\n\nimport Rate from \"./initialize/Rate\";\nimport Initialize from \"./initialize/Initialize\";\nimport Life from \"./initialize/Life\";\nimport Position from \"./initialize/Position\";\nimport Velocity from \"./initialize/Velocity\";\nimport Mass from \"./initialize/Mass\";\nimport Radius from \"./initialize/Radius\";\nimport Body from \"./initialize/Body\";\n\nimport Behaviour from \"./behaviour/Behaviour\";\nimport Force from \"./behaviour/Force\";\nimport Attraction from \"./behaviour/Attraction\";\nimport RandomDrift from \"./behaviour/RandomDrift\";\nimport Gravity from \"./behaviour/Gravity\";\nimport Collision from \"./behaviour/Collision\";\nimport CrossZone from \"./behaviour/CrossZone\";\nimport Alpha from \"./behaviour/Alpha\";\nimport Scale from \"./behaviour/Scale\";\nimport Rotate from \"./behaviour/Rotate\";\nimport Color from \"./behaviour/Color\";\nimport Cyclone from \"./behaviour/Cyclone\";\nimport Repulsion from \"./behaviour/Repulsion\";\nimport GravityWell from \"./behaviour/GravityWell\";\n\nimport Emitter from \"./emitter/Emitter\";\nimport BehaviourEmitter from \"./emitter/BehaviourEmitter\";\nimport FollowEmitter from \"./emitter/FollowEmitter\";\n\nimport CanvasRenderer from \"./render/CanvasRenderer\";\nimport DomRenderer from \"./render/DomRenderer\";\nimport EaselRenderer from \"./render/EaselRenderer\";\nimport PixelRenderer from \"./render/PixelRenderer\";\nimport PixiRenderer from \"./render/PixiRenderer\";\nimport WebGLRenderer from \"./render/WebGLRenderer\";\nimport CustomRenderer from \"./render/CustomRenderer\";\n\nimport Zone from \"./zone/Zone\";\nimport LineZone from \"./zone/LineZone\";\nimport CircleZone from \"./zone/CircleZone\";\nimport PointZone from \"./zone/PointZone\";\nimport RectZone from \"./zone/RectZone\";\nimport ImageZone from \"./zone/ImageZone\";\n\nimport Debug from \"./debug/Debug\";\n\n// namespace\nProton.Particle = Particle;\nProton.Pool = Pool;\n\nProton.Util = Util;\nProton.ColorUtil = ColorUtil;\nProton.MathUtil = MathUtil;\nProton.Vector2D = Proton.Vector = Vector2D;\nProton.Polar2D = Proton.Polar = Polar2D;\nProton.ArraySpan = ArraySpan;\nProton.Rectangle = Rectangle;\nProton.Rate = Rate;\nProton.ease = ease;\nProton.Span = Span;\nProton.Mat3 = Mat3;\nProton.getSpan = (a, b, center) => new Span(a, b, center);\nProton.createArraySpan = ArraySpan.createArraySpan;\n\nProton.Initialize = Proton.Init = Initialize;\nProton.Life = Proton.L = Life;\nProton.Position = Proton.P = Position;\nProton.Velocity = Proton.V = Velocity;\nProton.Mass = Proton.M = Mass;\nProton.Radius = Proton.R = Radius;\nProton.Body = Proton.B = Body;\n\nProton.Behaviour = Behaviour;\nProton.Force = Proton.F = Force;\nProton.Attraction = Proton.A = Attraction;\nProton.RandomDrift = Proton.RD = RandomDrift;\nProton.Gravity = Proton.G = Gravity;\nProton.Collision = Collision;\nProton.CrossZone = CrossZone;\nProton.Alpha = Alpha;\nProton.Scale = Proton.S = Scale;\nProton.Rotate = Rotate;\nProton.Color = Color;\nProton.Repulsion = Repulsion;\nProton.Cyclone = Cyclone;\nProton.GravityWell = GravityWell;\n\nProton.Emitter = Emitter;\nProton.BehaviourEmitter = BehaviourEmitter;\nProton.FollowEmitter = FollowEmitter;\n\nProton.Zone = Zone;\nProton.LineZone = LineZone;\nProton.CircleZone = CircleZone;\nProton.PointZone = PointZone;\nProton.RectZone = RectZone;\nProton.ImageZone = ImageZone;\n\nProton.CanvasRenderer = CanvasRenderer;\nProton.DomRenderer = DomRenderer;\nProton.EaselRenderer = EaselRenderer;\nProton.PixiRenderer = PixiRenderer;\nProton.PixelRenderer = PixelRenderer;\nProton.WebGLRenderer = Proton.WebGlRenderer = WebGLRenderer;\nProton.CustomRenderer = CustomRenderer;\n\nProton.Debug = Debug;\nUtil.assign(Proton, ease);\n\n// export\nexport default Proton;\n"],"names":["length","i","tx","ty","angleInRadians","c","Math","cos","s","sin","sx","sy","a","b","a00","a01","a02","a10","a11","a12","a20","a21","a22","b00","b01","b02","b10","b11","b12","b20","b21","b22","createCanvas","id","width","height","position","dom","document","createElement","style","opacity","transform","createDiv","resize","marginLeft","marginTop","div","x","y","scale","rotate","willChange","css3","transform3d","key","val","bkey","charAt","toUpperCase","substr","imgsCache","canvasCache","canvasId","context","image","rect","drawImage","imagedata","getImageData","clearRect","img","callback","param","src","Image","onload","e","target","WebGLUtil","canvas","DomUtil","getContext","initValue","value","defaults","isArray","Object","prototype","toString","call","emptyArray","arr","toArray","this","sliceArray","arr1","index","arr2","push","getRandFromArray","floor","random","emptyObject","obj","ignore","indexOf","classApply","constructor","args","bind","apply","concat","ImgUtil","destroyAll","destroy","assign","source","hasOwnProperty","idsMap","Puid","_index","_cache","type","undefined","getId","uid","getIdFromCache","isBody","isInner","getTarget","Pool","num","total","cache","get","params","p","__puid","pop","createOrClone","expire","getCache","create","Util","clone","getCount","count","Stats","proton","container","emitterIndex","rendererIndex","update","body","add","emitter","getEmitter","renderer","getRenderer","str","emitters","emitSpeed","getEmitterPos","initializes","concatArr","behaviours","name","getCreatedNumber","pool","innerHTML","bg","color","cssText","join","addEventListener","_this","parentNode","appendChild","renderers","result","cpool","round","removeChild","EventDispatcher","_listeners","dispatchEvent","hasEventListener","removeEventListener","removeAllEventListeners","listener","splice","listeners","handler","PI","MathUtil","PIx2","PI_2","PI_180","N180_PI","Infinity","isInfinity","randomAToB","isInt","randomFloating","center","f","randomColor","slice","randomZone","display","k","digits","pow","degreeTransform","toColor16","Integration","calculate","particles","time","damping","eulerIntegrate","particle","sleep","old","copy","v","multiplyScalar","mass","clear","Proton","integrationType","now","then","elapsed","stats","EULER","integrator","_fps","_interval","DEFAULT_INTERVAL","addRenderer","render","init","removeRenderer","remove","addEmitter","parent","EMITTER_ADDED","removeEmitter","EMITTER_REMOVED","PROTON_UPDATE","USE_CLOCK","Date","getTime","amendChangeTabsBug","emittersUpdate","PROTON_UPDATE_AFTER","getAllParticles","destroyAllEmitters","destroyOther","setTimeout","fps","MEASURE","RK2","PARTICLE_CREATED","PARTICLE_UPDATE","PARTICLE_SLEEP","PARTICLE_DEAD","Rgb","r","g","reset","hasProp","setProp","props","prop","Span","getSpanValue","setVectorVal","conf","easeLinear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","sqrt","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","getEasing","ease","Vector2D","set","setX","setY","getGradient","atan2","w","addVectors","addXY","sub","subVectors","divideScalar","negate","dot","lengthSq","normalize","distanceTo","distanceToSquared","tha","dx","dy","lerp","alpha","equals","Particle","data","rgb","PropUtil","getDirection","life","age","dead","sprite","energy","radius","rotation","easing","removeAllBehaviours","applyBehaviours","max","applyBehaviour","addBehaviour","behaviour","parents","initialize","addBehaviours","removeBehaviour","hexToRgb","h","hex16","substring","parseInt","rgbToHex","rbg","getHex16FromParticle","Number","Polar2D","abs","setR","setTha","toVector","getX","getY","Mat3","mat3","mat","Float32Array","mat1","mat2","multiply","inverse","multiplyVec2","m","vec","getValue","setSpanValue","pan","ArraySpan","_arr","createArraySpan","Rectangle","bottom","right","contains","Rate","numpan","timepan","numPan","timePan","startTime","nextTime","Initialize","Life","lifePan","Zone","vector","crossType","alert","getPosition","crossing","PointZone","console","error","Position","zone","Velocity","rpan","thapan","rPan","thaPan","normalizeVelocity","vr","polar2d","Mass","massPan","Radius","oldRadius","Body","imageTarget","inner","Behaviour","normalizeForce","force","normalizeValue","Force","fx","fy","Attraction","targetPosition","radiusSq","attractionForce","RandomDrift","driftX","driftY","delay","panFoce","Gravity","Collision","newPool","collisionPool","delta","otherParticle","overlap","totalMass","averageMass1","averageMass2","distance","CrossZone","Alpha","same","alphaA","alphaB","Scale","scaleA","scaleB","Rotate","influence","rotationA","rotationB","Color","colorA","ColorUtil","colorB","CHANGING","Cyclone","angle","setAngleAndForce","span","String","toLowerCase","cangle","cyclone","gradient","Repulsion","GravityWell","centerPoint","distanceVec","distanceSq","factor","bindEmitter","Emitter","emitTime","totalTime","rate","emit","stoped","isNaN","stop","preEmit","oldStoped","oldEmitTime","oldTotalTime","step","removeAllParticles","addSelfInitialize","addInitialize","rest","removeInitialize","initializer","removeAllInitializers","arguments","emitting","integrate","dispatch","event","bindEvent","createParticle","setupParticle","InitializeUtil","PIXIClass","BehaviourEmitter","selfBehaviours","addSelfBehaviour","removeSelfBehaviour","FollowEmitter","mouseTarget","window","_allowEmitting","initEventHandler","mousemoveHandler","_this2","mousemove","mousedownHandler","mousedown","mouseupHandler","mouseup","layerX","layerY","offsetX","offsetY","_Emitter","__isImage","tagName","nodeName","BaseRenderer","element","stroke","circleConf","isCircle","setStroke","thinkness","_protonUpdateHandler","onProtonUpdate","_protonUpdateAfterHandler","onProtonUpdateAfter","_emitterAddedHandler","onEmitterAdded","_emitterRemovedHandler","onEmitterRemoved","_particleCreatedHandler","onParticleCreated","_particleUpdateHandler","onParticleUpdate","_particleDeadHandler","onParticleDead","CanvasRenderer","bufferCache","addImg2Body","Types","drawCircle","buffer","createBuffer","bufContext","globalAlpha","globalCompositeOperation","fillStyle","fillRect","save","translate","restore","beginPath","arc","strokeStyle","lineWidth","closePath","fill","size","DomRenderer","createBody","bodyReady","backgroundColor","createCircle","createSprite","borderRadius","borderColor","borderWidth","url","backgroundImage","EaselRenderer","addChild","scaleX","scaleY","graphics","regX","regY","createjs","Graphics","beginStroke","beginFill","shape","Shape","PixelRenderer","rectangle","imageData","createImageData","putImageData","setPixel","PixiRenderer","setColor","blendMode","setPIXI","PIXI","Sprite","createFromImage","from","fromImage","tint","anchor","endFill","MStack","mats","top","WebGLRenderer","gl","antialias","stencil","depth","initVar","setMaxRadius","initShaders","initBuffers","blendEquation","FUNC_ADD","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","enable","BLEND","umat","smat","mstack","viewport","circleCanvasURL","getVertexShader","getFragmentShader","texturebuffers","A","B","getShader","fs","shader","createShader","FRAGMENT_SHADER","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","fragmentShader","vertexShader","sprogram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","useProgram","vpa","getAttribLocation","tca","enableVertexAttribArray","tMatUniform","getUniformLocation","samplerUniform","useTex","uniform1i","idx","unitIBuffer","bindBuffer","ELEMENT_ARRAY_BUFFER","bufferData","Uint16Array","STATIC_DRAW","ids","unitI33","stripBuffer","raidus","circleCanvasRadius","toDataURL","drawImg2Canvas","_w","_h","_width","_height","_scaleX","_scaleY","createTexture","texture","vcBuffer","tcBuffer","ARRAY_BUFFER","bindTexture","TEXTURE_2D","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_NEAREST","generateMipmap","textureLoaded","textureWidth","textureHeight","tmat","imat","oldScale","updateMatrix","uniform3f","uniformMatrix3fv","vertexAttribPointer","FLOAT","drawElements","TRIANGLES","UNSIGNED_SHORT","moveOriginMatrix","translationMatrix","angel","rotationMatrix","scaleMatrix","matrix","CustomRenderer","LineZone","x1","y1","x2","y2","direction","minx","min","miny","maxx","maxy","xxyy","getLength","getDistance","getSymmetric","tha2","oldx","oldy","rangeOut","CircleZone","randomRadius","setCenter","d","RectZone","ImageZone","vectors","setVectors","j","length1","length2","getBound","getColor","func","getStyle","drawZone","moveTo","lineTo","drawRect","drawEmitter","Vector","Polar","getSpan","Init","L","P","V","M","R","F","RD","G","S","WebGlRenderer","Debug"],"mappings":"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"}